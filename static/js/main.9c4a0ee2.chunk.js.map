{"version":3,"sources":["context/GameContext.js","components/game/Scoreboard.js","util/data.js","components/game/Util.js","components/game/TwentyQuestions.js","util/misc.js","hooks/useWindowSize.js","components/game/Match.js","components/game/TwentyQuestionsPractice.js","components/game/Menu.js","hooks/usePrevious.js","components/ImageAnimation.js","components/chart/ThresholdChartSet.js","components/chart/ExperimentThresholdCharts.js","components/ImageNoise.js","components/story/ImageClasses.js","components/story/InputOutput.js","components/Story.js","views/GameView.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","GameContextProvider","props","useState","players","name","color","selections","score","images","previousPracticeRounds","practiceRound","gameSettings","setGameSettings","Provider","value","children","Container","styled","div","Board","SideContainer","Side","Team","ScoreContainer","Score","Bottom","ScoreBoard","home","away","bottomDisplay","totalPossible","ScoreboardSide","player","style","scoreDisplay","percentageDisplay","toFixed","bottom","borderLeft","sample","items","size","map","x","r","Math","random","sort","a","b","slice","length","sanitizeJson","obj","Object","keys","reduce","all","p","toLowerCase","cleanObject","filter","key","allGroups","data","Set","groups","practiceSet","groupNumber","includes","gameData","path","snippetId","fetchPath","fetch","allOptions","json","correctData","practiceOptions","gameOptions","isDefined","undefined","CenteredOuter","CenteredInner","Centered","ToggleButtonCheckBoxWrapper","CheckButton","button","checked","left","ToggleButton","trueLabel","falseLabel","trueBgColor","falseBgColor","onToggle","defaultValue","onClick","right","GameButton","Emoji","className","label","symbol","symbols","Array","isArray","role","aria-label","String","fromCodePoint","Sidecar","RangeContainer","ControlLabel","position","RangeTrack","RangeHandle","RangeSlider","min","max","onChange","step","labelPosition","handleStyle","_label","outline","values","_value","renderTrack","renderThumb","marginTop","SIZES","height","width","generateGameData","gameMode","gameDataModel","easy","hard","_gameData","i","correctAnswers","correct","parseInt","labelStyle","padding","fontSize","background","toDeerImage","img","index","image","tags","src","thumbnail","thumbnailWidth","thumbnailHeight","customOverlay","toImage","_img","title","findYouPlayer","findCarnacPlayer","StyledSelectionsOverlay","StyledCheckButton","SelectionsOverlay","useContext","_carnac","_you","isSelected","Choices","noise","settings","useEffect","resetGame","originalImages","noiseKey","variant","variants","hasVariant","onSelectImage","updated","you","hasOwnProperty","enableImageSelection","onClickThumbnail","tagStyle","showLightboxThumbnails","enableLightbox","mode","original","updateFn","currentGameData","k","carnacAnswers","carnac","console","log","calculateScore","_selections","wrongAnswers","omittedAnswers","StyledChallengeCarnac","ChallengeCarnac","onSettingsUpdated","selectionCount","noiseLevel","setNoiseLevel","textAlign","fontWeight","level","display","flexDirection","disabled","StyledInformation","Information","StyledResults","Results","_winner","StyledGame","TwentyQuestions","setSettings","minWidth","maxWidth","_settings","clean","styleDiv","getDiv","forEach","isDef","shuffle","arr","reduceRight","res","_","__","s","push","splice","cleanupLeaderLines","bind","removeElements","from","document","getElementsByClassName","remove","Connection","to","config","configOverrides","options","drawMode","endToEnd","isObject","LeaderLine","areaAnchor","getElementById","id","pointAnchor","lineOptions","start","end","hide","startSocket","endSocket","l","show","clearLines","linesRef","noAnimate","current","lines","drawLine","fromId","toId","chain","fns","duration","delay","t","Promise","resolve","setTimeout","useWindowSize","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","fadeIn","keyframes","DraggableImageBase","DraggableImageElement","DraggableImagePlaceholder","between","findTarget","targets","dropLocation","rect","getBoundingClientRect","top","y","box","point","shift","moveDraggable","draggable","correctPosition","target","source","DraggableImage","attempt","targetIds","correctTarget","onDrag","onGuess","imagePlaceholderId","draggableId","draggableDomRef","useRef","draggableRef","d","PlainDraggable","containment","snapped","snap","gravity","edge","moveTo","onDragEnd","reset","line","alt","ref","DraggableContainer","DraggableTargetDrop","DraggableTarget","dragging","marginLeft","toKey","MiddleSection","Title","GameInfo","learn","matchCount","targetCount","StyledWrongAnswerX","WrongAnswerX","strokeWidth","stroke","fill","rx","strokeLinecap","cornerPadding","viewBox","x1","y1","x2","y2","guesses","incorrect","RetryButton","won","Options","onGameOver","onRetry","setWon","buttonText","setButtonText","total","text","maxStrikes","MatchLayout","model","setDisabled","useMemo","sources","resetGuesses","useCallback","setGuesses","guess","prev","find","Date","getTime","Match","retries","setRetries","setModel","allImages","match","resetModel","sourceCount","PRACTICE_IMAGE_SIZE","AI_NAME","COLORS","setCurrentIndex","demo","version","practiceRoundNumber","scrollingImages","url","allQuestionsAnswered","seenbefore","StyledPracticeResult","PracticeResultTitle","PracticeResult","question","agree","questionNumber","isCurrentImage","answer","waiting","StyledEndButtons","EndButtons","StylePracticeResults","PracticeResultsTitle","PracticeResultsSubtitle","h4","PracticeResults","currentImageIndex","ImageSliderOverrideStyles","currentIndex","Selectors","imageSize","imagePercent","paddingLeft","paddingTop","dangerouslySetInnerHTML","__html","property","colors","border","_bulletStyle","join","StyledQuestionWithButtons","StyledQuestionWithButtonsButton","QuestionText","QuestionWithButtons","onAnswer","StyledTuningSideTile","TuningSideTile","StyledProbability","Probability","previousLabel","percent","PictureLabel","changed","margin","animate","reveal","hideLabel","totalValue","lineWidth","dataEntry","StyledTuningsOuter","StyledTuningSelect","TuningSelect","selectStyles","container","provided","indicatorSeparator","option","whiteSpace","content","icon","menu","singleValue","styles","isSearchable","Tunings","getImageDiv","onLoadImageVariant","defaultStyle","setStyles","selectedVariant","setSelectedVariant","changeImage","transition","variantLabel","updateImage","additionalStyles","toggle","probability","augmentVariants","startsWith","optionDecorations","hflip","vflip","replace","noop","decorate","object","decoration","fn","defaults","decorationKey","noiseLevelVariants","noiseLevels","Caption","StyledSwitchMode","SwitchModeButton","selected","SwitchMode","onSwitchMode","labels","trick","toModes","toMode","StyledPracticeVoteButtons","ImageControls","displayMode","setDisplayMode","loadedImage","setLoadedImage","defaultLoadedImageState","onSeenBeforeClick","guessed","caption","StyledPractice","StyledPracticeGame","TwentyQuestionsPractice","hideSideBar","imageState","setImageState","sliderRef","querySelectorAll","showBullets","showNavs","navStyle","onStartSlide","idx","borderBottomLeftRadius","borderTopLeftRadius","backgroundColor","h1","GameCards","GameCardContainer","GameCardTitle","GameCardButton","ButtonContainer","GameCard","links","effect","games","Stack","OrScroll","Menu","usePrevious","PictureAndInformation","Picture","Controls","Slides","Slide","Rotated","rotation","transform","RotatedText","StyledAnimateButton","ButtonSymbols","play","pause","AnimateButton","status","stateSymbols","stopped","playing","ImageAnimation","info","selectedIndex","setSelectedIndex","animating","setAnimating","React","nextIndex","type","onInput","e","onMouseOver","ChartData","round","results","binned","errorRounded","maxX","filterFn","flat","threshold","starterBin","g","Tooltip","ChartContainer","Thresholds","count","set","item","toString","Threshold","xScale","yScale","nodeSize","columnCount","linePadding","isNaN","textAnchor","points","DotPlot","minX","colorFn","bottomLabel","tooltip","node","axisBottom","orient","legend","legendPosition","legendOffset","axisLeft","layers","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","symbolShape","effects","on","itemTextColor","itemBackground","StyledChartTitle","WaffleDot","opacity","borderWidth","borderColor","onHover","onLeave","cx","cy","onMouseEnter","onMouseMove","onMouseLeave","Waffle","rows","columns","cellComponent","fillDirection","emptyColor","PieCenterTotal","dataWithArc","centerX","centerY","dominantBaseline","Pie","showTotal","innerRadius","enableRadialLabels","padAngle","cornerRadius","sliceLabel","sliceLabelsTextColor","LegendPart","colorPosition","swatch","borderRadius","justifyContent","Legend","gridTemplateColumns","negativeBelowThreshold","positiveBelowThreshold","negativeAboveThreshold","positiveAboveThreshold","FlexDiv","FlexColumns","FlexRows","ThresholdChartSet","models","dotPlotMaxX","sliderLabel","setThreshold","dotPlotColorFn","legendModel","dotPlotWidth","smallChartHeight","dotPlot","truePositive","positive","Colors","LegendModel","ChartModels","ExperimentThresholdChartSet","defaultThreshold","thresholdPercent","rawData","setRawData","setModels","setDotPlotMaxX","result","error","getRawData","_dotPlotData","_threshold","toNoiseImage","StyledImageTile","StyledImageTileImage","rounded","StyledImageLabel","ImageTile","ImageTiles","tileSize","ImageNoise","imageSetNumber","rawImages","setRawImages","setImages","noiseLevelRange","setNoiseLevelRange","_rawImages","getImageData","noisyImages","sliderMin","sliderMax","Model","tagSize","StyledImg","Image","details","imageWidth","onSelect","onMouseOut","Images","Tag","ImageClasses","setSelected","alignItems","alignContent","minSize","maxSize","renderer","tag","customRenderer","Input","Inputs","inputs","backgroundImage","StyledOutputDiagram","OutputDiagram","boxStyle","heightOffset","ry","font","Output","Outputs","maxHeight","TargetModel","lineColors","HACK_lineLabels","inputImages","ActionButton","Buttons","actionDisabled","marginBottom","InputOutput","inputCount","setInputCount","drawLines","shape","endLabel","delta","ImageTitle","Scroller","ScrollerContainer","ScrollContainer","ScrollyHeaderSection","h2","ScrollyContentSection","ScrollyImageSectionContainer","ScrollySectionWithBackgroundImage","sizePercent","imageOpacity","progress","RowFlexContainer","valign","FlowCharts","validate","elements","issues","hasPosition","hasPositionedElements","hasUserDefinedLinks","buildLinks","FlowChartElementContainer","FlowChart","startAnimating","visible","chainLinkAnimation","betweenLinkDelay","prevAnimated","shouldAnimate","flowRef","handleScroll","AnimEvent","add","lineConfig","override","containerStyle","flex","elementStyle","element","WeaknessWithAI","stepOpacityStyle","LabelTile","PuppiesToFoodFlowChart","PuppiesVsCroissantsImages","before","after","slider","VerticalSpacer","PuppiesOrFoodImage","cover","Covers","securityPrivacyConcerns","clipPath","hoverShape","hoverTexture","hoverColor","_default","StyledHoverLink","HoverLink","offHover","PuppiesOrFoodHoverLink","setCover","StepContainer","PuppiesOrFoodStepContainer","currentView","viewName","PuppiesOrFood","setCurrentView","flexBasis","onStepEnter","onStepExit","offset","TitledElement","MiaFlowChart","MembershipInferenceAttack","ModelInversionAttack","ReverseEngineeringDataPrototypes","DotMatrix","ExperimentThresholdCharts","DebuggerTitle","Debugger","viewState","zIndex","Story","debugScrolling","currentViewState","setCurrentViewState","setViewState","view","onStepProgress","debug","Modal","setAppElement","PageHeader","subtitle","GameModal","withRouter","history","isModalOpen","setModalOpen","toggleModal","isOpen","onRequestClose","contentLabel","alwaysShowTitle","mainButtonStyles","GameView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c4a0ee2.chunk.js","sourcesContent":["import { useState, createContext } from \"react\"\n\nexport const GameContext = createContext()\n\nexport const GameContextProvider = (props) => {\n  const [gameSettings, setGameSettings] = useState({\n    players: [\n      { name: \"YOU\", color: \"green\", selections: [], score: null },\n      {\n        name: \"CARNAC\",\n        color: \"red\",\n        selections: [],\n        score: null,\n      },\n    ],\n    images: [],\n    previousPracticeRounds: [],\n    practiceRound: {},\n  })\n\n  return (\n    <GameContext.Provider value={[gameSettings, setGameSettings]}>\n      {props.children}\n    </GameContext.Provider>\n  )\n}\n","import styled from \"styled-components\"\n\nconst Container = styled.div`\n  margin-top: 2px;\n  background-color: #444;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-family: Futura;\n  min-width: 400px;\n  max-width: 400px;\n  width: 400px;\n`\n\nconst Board = styled.div`\n  margin: 6px;\n  border: 5px solid white;\n  border-radius: 10px;\n  flex-direction: row;\n`\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst Side = styled.div`\n  flex: 1;\n  text-align: center;\n`\nconst Team = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 24pt;\n  border-bottom: 5px solid white;\n  margin: 0;\n  font-weight: bold;\n`\nconst ScoreContainer = styled.div`\n  padding: 10px;\n`\nconst Score = styled.div`\n  font-size: 48pt;\n  font-family: Impact, sans-serif;\n`\nconst Bottom = styled.div`\n  font-size: 18;\n  padding: 5px;\n  border-top: 5px solid white;\n  font-weight: bold;\n  text-align: center;\n`\n\nconst ScoreBoard = ({\n  home,\n  away,\n  bottomDisplay = () => \"\",\n  totalPossible = 0,\n}) => {\n  const ScoreboardSide = ({ player, style = {} }) => {\n    const scoreDisplay =\n      totalPossible > 0 ? `${player.score} / ${totalPossible}` : player.score\n    const percentageDisplay =\n      totalPossible > 0 ? (\n        <div>({((player.score / totalPossible) * 100).toFixed()}%)</div>\n      ) : null\n    return (\n      <Side style={style}>\n        <Team style={{ color: player.color }}>{player.name}</Team>\n        <ScoreContainer>\n          <Score>{scoreDisplay}</Score>\n          {percentageDisplay}\n        </ScoreContainer>\n      </Side>\n    )\n  }\n\n  const bottom = bottomDisplay()\n\n  return (\n    <Container>\n      <Board>\n        <SideContainer>\n          <ScoreboardSide player={home} />\n          <ScoreboardSide\n            player={away}\n            style={{ borderLeft: \"3px solid white\" }}\n          />\n        </SideContainer>\n        {bottom ? <Bottom>{bottom}</Bottom> : null}\n      </Board>\n    </Container>\n  )\n}\n\nexport default ScoreBoard\n","const colors = [\"0,0,255\", \"255,0,0\", \"0,255,0\", \"255,0,255\"]\n\nconst defaultDataSet = {\n  borderWidth: 1,\n}\n\nconst dataSet = (index) => {\n  const color = colors[index]\n  const backgroundColor = `rgba(${color},0.4)`\n  const borderColor = `rgba(${color},0.7)`\n  return {\n    ...defaultDataSet,\n    backgroundColor,\n    borderColor,\n  }\n}\n\nconst selectionData = (data) =>\n  Object.keys(data.MI_class_results || {}).reduce(\n    (all, x) => ({ ...all, [x]: data.MI_class_results[x].mi_auc }),\n    {}\n  )\n\nexport const configurationKeys = (configurations) =>\n  Object.keys(configurations).filter(\n    (x) => typeof configurations[x] === \"object\"\n  )\n\nconst fetchConfigurationData = async (configuration) => {\n  const key = (x) => `${x.flavor}_${x.dataset}_${x.architecture}_${x.train}`\n  const filepath = (name) => `./data/${name}.json`\n  const filekey = key(configuration)\n  let results\n  try {\n    const response = await fetch(filepath(filekey))\n    results = await response.json()\n  } catch (e) {\n    console.log(`No data file available for configuration ${filekey}`)\n    const response = await fetch(filepath(\"missing_data\"))\n    results = await response.json()\n  }\n  return [filekey, results]\n}\n\nexport const configurationData = async (configuration) => {\n  const [key, json] = await fetchConfigurationData(configuration)\n  return {\n    key,\n    data: selectionData(json),\n  }\n}\n\nexport const chartData = (selections) => {\n  const selectionKeys = configurationKeys(selections)\n  const hasData = selectionKeys.reduce(\n    (all, x) => all && \"data\" in selections[x],\n    true\n  )\n  if (hasData) {\n    const labels = [\n      ...new Set(\n        selectionKeys.reduce(\n          (all, x) => [...all, ...Object.keys(selections[x].data || {})],\n          []\n        )\n      ),\n    ].sort((a, b) => parseInt(a) > parseInt(b))\n    const keyData = selectionKeys.reduce(\n      (all, x) => ({\n        ...all,\n        [selections[x].key]: {\n          data: selections[x].data,\n          label: `MI AUC (${selections[x].flavor}/${selections[x].dataset}/${selections[x].architecture}/${selections[x].train})`.toUpperCase(),\n        },\n      }),\n      {}\n    )\n    return {\n      labels,\n      datasets: Object.keys(keyData).map((x, i) => {\n        return {\n          ...dataSet(i),\n          label: keyData[x].label,\n          data: labels.map((y) => keyData[x].data[y]),\n        }\n      }),\n    }\n  } else return {}\n}\n\nconst sample = (items, size) =>\n  items\n    .map((x) => ({ x, r: Math.random() }))\n    .sort((a, b) => a.r - b.r)\n    .map((a) => a.x)\n    .slice(0, size || items.length)\n\nexport const PRACTICE_ROUND_IMAGE_COUNT = 5\nexport const GAME_IMAGE_COUNT = 12\n\nconst sanitizeJson = (obj) => {\n  const stringToBooleanOrOriginal = (p) =>\n    p && (p === \"true\" || p === \"false\") ? p.toLowerCase() === \"true\" : p\n  return Object.keys(obj).reduce(\n    (all, x) => ({\n      ...all,\n      [x]: stringToBooleanOrOriginal(obj[x]),\n    }),\n    {}\n  )\n}\n\nexport const cleanObject = (x) =>\n  Object.keys(x || {})\n    .filter((key) => x[key])\n    .reduce((all, key) => ({ ...all, [key]: x[key] }), {})\n\n// const PRACTICE_SETS = [1, 2]\n// const PRACTICE_SETS = [1, 2, 3, 4, 5]\n\nconst allGroups = (data) =>\n  data.reduce((all, x) => [...new Set([...all, ...(x.groups || [])])], [])\n\nconst practiceSet = (images, groupNumber) => {\n  // setIndex = isDef(setIndex)\n  //   ? setIndex\n  //   : PRACTICE_SETS[Math.floor(Math.random() * PRACTICE_SETS.length)]\n  return images.filter((x) => x.groups && x.groups.includes(groupNumber))\n}\n\nexport const gameData = async ({\n  path = \"./data/game-data.json\",\n  snippetId = null,\n} = {}) => {\n  const fetchPath = snippetId\n    ? `https://gitlab-int.ctc.com/api/v4/snippets/${snippetId}/raw`\n    : path\n  const allOptions = await fetch(fetchPath)\n  const data = await allOptions.json()\n  const correctData = data.map(sanitizeJson)\n  return {\n    practiceOptions: allGroups(correctData).reduce(\n      (all, x) => ({ ...all, [x]: practiceSet(correctData, x) }),\n      {}\n    ),\n    gameOptions: sample(correctData, GAME_IMAGE_COUNT),\n  }\n}\n\nexport const isDefined = (x) => x !== null && x !== undefined\n","import PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport \"./Game.css\"\nimport { isDefined } from \"../../util/data\"\nimport { Range } from \"react-range\"\n\nconst CenteredOuter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  height: 100%;\n`\nconst CenteredInner = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  width: 100%;\n`\n\nexport const Centered = ({ children }) => (\n  <CenteredOuter>\n    <CenteredInner>{children}</CenteredInner>\n  </CenteredOuter>\n)\n\nconst ToggleButtonCheckBoxWrapper = styled.div`\n  position: relative;\n  background-color: lightgray;\n  padding: 5px;\n  border-radius: 4px;\n`\n\nconst CheckButton = styled.button`\n  background: ${({ checked, color }) => (checked ? color : \"gray\")};\n  padding: 5px;\n  color: ${({ checked }) => (checked ? \"white\" : \"black\")};\n  outline: none;\n  border: none;\n  border-radius: ${({ left }) => (left ? \"4px 0 0 4px\" : \"0 4px 4px 0\")};\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: ${({ checked }) =>\n      checked ? \"1px 1px 1px black;\" : \"1px 1px 1px lightgray;\"};\n  }\n`\n\nexport const ToggleButton = ({\n  trueLabel = \"YES\",\n  falseLabel = \"NO\",\n  trueBgColor,\n  falseBgColor,\n  onToggle,\n  defaultValue,\n}) => {\n  return (\n    <ToggleButtonCheckBoxWrapper>\n      <CheckButton\n        checked={isDefined(defaultValue) && defaultValue}\n        color={trueBgColor}\n        onClick={() => onToggle(true)}\n        left={true}\n      >\n        {trueLabel}\n      </CheckButton>\n      <CheckButton\n        checked={isDefined(defaultValue) && !defaultValue}\n        color={falseBgColor}\n        onClick={() => onToggle(false)}\n        right={true}\n      >\n        {falseLabel}\n      </CheckButton>\n    </ToggleButtonCheckBoxWrapper>\n  )\n}\n\nToggleButton.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  trueLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  falseLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n}\n\nexport const GameButton = styled.button`\n  border: 1px solid lightgray;\n  text-transform: uppercase;\n  font-family: Futura, sans-serif;\n  font-size: 1.4rem;\n  padding: 5px;\n  border-bottom: 7px solid grey;\n  color: darkslategray;\n  margin-top: 10px;\n  border-radius: 10px 10px 2px 2px;\n  outline: none;\n  cursor: pointer;\n  &:disabled {\n    cursor: default;\n    color: lightgray;\n  }\n  &:hover {\n    text-shadow: 1px 1px 1px #aaa;\n  }\n`\n\nexport const Emoji = ({ className, style, label, symbol }) => {\n  const symbols = Array.isArray(symbol) ? symbol : [symbol]\n  return (\n    <span className={className} style={style} role=\"img\" aria-label={label}>\n      {symbols.map((x) => String.fromCodePoint(x))}\n    </span>\n  )\n}\n\nexport const Sidecar = styled.div`\n  background-color: white;\n`\n\nconst RangeContainer = styled.div`\n  /* padding: 5px; */\n  margin: 10px;\n`\n\nexport const ControlLabel = styled.div`\n  ${({ position = \"top\" }) =>\n    position === \"top\" ? `margin-bottom: 10px;` : `margin-top: 10px;`}\n  font-size: 0.9rem;\n  text-align: center;\n`\n\nconst RangeTrack = styled.div`\n  height: 6px;\n  width: 100%;\n  background-color: #ccc;\n  border-radius: 3px;\n`\n\nconst RangeHandle = styled.div`\n  height: 18px;\n  width: 18px;\n  color: white;\n  background-color: #999;\n  border: 1px solid #555;\n  font-size: 0.7rem;\n  text-align: center;\n  line-height: 1.7;\n  outline: none;\n  border-radius: 4px;\n`\n\nexport const RangeSlider = ({\n  value,\n  min,\n  max,\n  onChange,\n  style,\n  step = 1,\n  label = null,\n  labelPosition = \"top\",\n  handleStyle,\n}) => {\n  const _label = label ? (\n    <ControlLabel position={labelPosition}>{label}</ControlLabel>\n  ) : null\n  return (\n    <RangeContainer style={{ outline: \"none\", ...style }}>\n      {_label && labelPosition === \"top\" ? _label : null}\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        values={[value]}\n        onChange={(values) => {\n          const [_value] = values\n          if (_value !== value) {\n            onChange(_value)\n          }\n        }}\n        renderTrack={({ props, children }) => (\n          <RangeTrack {...props}>{children}</RangeTrack>\n        )}\n        renderThumb={({ props }) => (\n          <RangeHandle {...props} style={handleStyle}>\n            {value}\n          </RangeHandle>\n        )}\n      />\n      {_label && labelPosition === \"bottom\" ? (\n        <div style={{ marginTop: 10 }}>{_label}</div>\n      ) : null}\n    </RangeContainer>\n  )\n}\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport Gallery from \"react-grid-gallery\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport ScoreBoard from \"./Scoreboard\"\nimport { Centered, GameButton, Sidecar, RangeSlider } from \"./Util\"\nimport {\n  gameData,\n  isDefined,\n  cleanObject,\n  GAME_IMAGE_COUNT,\n} from \"../../util/data\"\nimport \"./Game.css\"\n\nconst SIZES = {\n  thumbnail: {\n    height: 32,\n    width: 32,\n  },\n  grid: {\n    width: 710,\n  },\n}\n\nconst generateGameData = async (gameMode) => {\n  const gameDataModels = {\n    easy: { path: \"./data/game-data.json\" },\n    hard: { path: \"./data/game-data-20q-hard.json\" },\n  }\n  const gameDataModel = gameDataModels[gameMode || \"easy\"]\n  const _gameData = await gameData(gameDataModel)\n  const images = _gameData.gameOptions.reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  return {\n    gameData: _gameData,\n    images,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst labelStyle = {\n  padding: \"5px\",\n  fontSize: \"75%\",\n  color: \"white\",\n  background: \"rgba(0,0,0,0.5)\",\n}\n\nconst toImage = (image, index, tags = () => []) => {\n  const img = {\n    src: `img/${image.path}`,\n    thumbnail: `img/${image.path}`,\n    thumbnailWidth: SIZES.thumbnail.width,\n    thumbnailHeight: SIZES.thumbnail.height,\n    index,\n    correct: image.correct,\n    customOverlay: <SelectionsOverlay index={index} />,\n  }\n  img.tags = tags(img) || []\n  return cleanObject(img)\n}\nconst toDeerImage = (img, index) =>\n  toImage(img, index, (_img) => [\n    {\n      value: `${img.label}`,\n      title: `COMPY Says: ${img.label}`,\n    },\n  ])\n\nconst findYouPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[0]\n    : null\n\nconst findCarnacPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[1]\n    : null\n\nconst StyledSelectionsOverlay = styled.div`\n  color: red;\n  font-weight: bold;\n  text-align: right;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ correct }) =>\n    correct ? \"rgba(75, 75, 75, 0.8)\" : \"rgba(75, 75, 75, 0.0)\"};\n  width: 100%;\n  height: 100%;\n`\n\nconst StyledCheckButton = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0%;\n`\n\nconst SelectionsOverlay = ({ index }) => {\n  const [gameSettings] = useContext(GameContext)\n  const _carnac = findCarnacPlayer(gameSettings)\n  const _you = findYouPlayer(gameSettings)\n  return (\n    <StyledSelectionsOverlay\n      correct={isDefined(_you.score) && !gameSettings.images[index].correct}\n    >\n      {_carnac.score && _carnac.selections.includes(parseInt(index)) ? (\n        <StyledCheckButton>\n          <CheckButton color={_carnac.color} isSelected={true} />\n        </StyledCheckButton>\n      ) : null}\n    </StyledSelectionsOverlay>\n  )\n}\n\nconst Choices = ({ settings: { noise }, gameMode }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n\n  useEffect(() => {\n    resetGame(gameMode, gameSettings, setGameSettings) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (gameSettings.originalImages) {\n      const noiseKey = `noise${noise}`\n      const hasVariant = (image, variant) =>\n        \"variants\" in image && variant in image.variants\n      setGameSettings({\n        ...gameSettings,\n        images: gameSettings.originalImages\n          .map((image) =>\n            hasVariant(image, noiseKey) ? image.variants[noiseKey] : image\n          )\n          .map((image, i) => ({\n            ...gameSettings.images[i],\n            ...toDeerImage(image, i),\n          })),\n      })\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noise])\n\n  const onSelectImage = (index) => {\n    const updated = { ...gameSettings }\n    const you = findYouPlayer(updated)\n    if (you.score) return\n    var img = updated.images[index]\n    if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected\n    else img.isSelected = true\n    you.selections = updated.images\n      .map((x, index) => ({ ...x, index }))\n      .filter((x) => x.isSelected)\n      .map((x) => x.index)\n    setGameSettings(updated)\n  }\n\n  const you = findYouPlayer(gameSettings)\n  return (\n    <div>\n      <Gallery\n        images={gameSettings.images}\n        enableImageSelection={!you.score}\n        onSelectImage={onSelectImage}\n        onClickThumbnail={onSelectImage}\n        tagStyle={labelStyle}\n        showLightboxThumbnails={true}\n        enableLightbox={false}\n      />\n    </div>\n  )\n}\n\nconst resetGame = async (mode, original, updateFn) => {\n  const updated = { ...original }\n  const currentGameData = await generateGameData(mode)\n  updated.currentGameData = currentGameData\n  updated.originalImages = Object.keys(currentGameData.images).map(\n    (k) => currentGameData.images[k]\n  )\n  updated.images = updated.originalImages.map(toDeerImage)\n  const _carnac = findCarnacPlayer(updated)\n  const _you = findYouPlayer(updated)\n  _carnac.score = null\n  _you.score = null\n\n  const carnacAnswers = () => {\n    return Object.keys(currentGameData.images)\n      .filter((i) => {\n        const img = currentGameData.images[i]\n        return (\n          (\"carnac\" in img && img.carnac) ||\n          (!(\"carnac\" in img) && img.label === \"deer\")\n        )\n      })\n      .map((i) => parseInt(i))\n  }\n  _carnac.selections = carnacAnswers()\n  _you.selections = []\n  console.log(123, updated.images)\n  updateFn(updated)\n}\n\nconst calculateScore = (gameData, selections) => {\n  const _selections = selections || []\n  const wrongAnswers = _selections.filter(\n    (x) => !gameData.correctAnswers.includes(x)\n  )\n  const omittedAnswers = gameData.correctAnswers.filter(\n    (x) => !_selections.includes(x)\n  )\n\n  return (\n    Object.keys(gameData.images).length -\n    wrongAnswers.length -\n    omittedAnswers.length\n  )\n}\n\nconst StyledChallengeCarnac = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst ChallengeCarnac = ({\n  onClick,\n  gameMode,\n  onSettingsUpdated = () => null,\n}) => {\n  const [gameSettings] = useContext(GameContext)\n  const selectionCount = gameSettings.players[0].selections.length\n  const [noiseLevel, setNoiseLevel] = useState(0)\n  const changeNoiseLevel = (level) => {\n    setNoiseLevel(level)\n    onSettingsUpdated({ noise: level })\n  }\n  return (\n    <StyledChallengeCarnac>\n      <div>\n        <p>\n          COMPY has seen a lot of deer images before, and he is really good at\n          identifying a deer when he sees one.\n        </p>\n        <p>\n          Can you tell which of the following deer images COMPY may have seen?\n          There is at least one.\n        </p>\n        <p>Select them and then hit the \"Submit Answers\" button (below).</p>\n        <p>\n          If you were to guess randomly, you would expect to get half correct.\n        </p>\n        <p style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          {selectionCount > 0\n            ? `${selectionCount} picture(s) selected`\n            : \"1 or more selections required to play\"}\n        </p>\n        {gameMode === \"hard\" ? (\n          <RangeSlider\n            label=\"Add Noise\"\n            labelPosition=\"bottom\"\n            min={0}\n            max={6}\n            step={1}\n            value={noiseLevel}\n            onChange={changeNoiseLevel}\n          />\n        ) : null}\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <GameButton onClick={onClick} disabled={selectionCount === 0}>\n          Submit Answers!\n        </GameButton>\n      </div>\n    </StyledChallengeCarnac>\n  )\n}\n\nconst StyledInformation = styled(Sidecar)`\n  display: flex;\n  margin-top: 2px;\n  height: 99%;\n  border: 1px solid darkgray;\n  border-top-right-radius: 15px;\n  border-bottom-right-radius: 15px;\n`\n\nconst Information = (props) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n\n  const loadScores = () => {\n    const updated = { ...gameSettings }\n    const _carnac = findCarnacPlayer(updated)\n    const _you = findYouPlayer(updated)\n    _carnac.score = calculateScore(\n      gameSettings.currentGameData,\n      _carnac.selections\n    )\n    _you.score = calculateScore(gameSettings.currentGameData, _you.selections)\n    setGameSettings(updated)\n  }\n  return (\n    <StyledInformation>\n      {carnac.score ? (\n        <Results {...props} />\n      ) : (\n        <ChallengeCarnac onClick={loadScores} {...props} />\n      )}\n    </StyledInformation>\n  )\n}\n\nconst StyledResults = styled.div`\n  width: 100%;\n  margin: 10px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Results = ({ gameMode }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n  const you = findYouPlayer(gameSettings)\n  const playAgain = () => resetGame(gameMode, gameSettings, setGameSettings)\n  const winner = () =>\n    you.score > carnac.score ? you : you.score < carnac.score ? carnac : null\n  const winnerMessage = () => {\n    const _winner = winner()\n    return _winner\n      ? `The winner is ${_winner.name}!`\n      : `${you.name} tied ${carnac.name}!`\n  }\n  return (\n    <StyledResults>\n      <div style={{ marginTop: 15 }}>\n        <ScoreBoard\n          home={you}\n          away={carnac}\n          bottomDisplay={winnerMessage}\n          totalPossible={GAME_IMAGE_COUNT}\n        />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n        <GameButton onClick={playAgain}>Play Again!</GameButton>\n      </div>\n    </StyledResults>\n  )\n}\n\nconst StyledGame = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst TwentyQuestions = ({ gameMode }) => {\n  const [settings, setSettings] = useState(0)\n  const settingsUpdated = (_settings) => setSettings(_settings)\n\n  return (\n    <Centered>\n      <StyledGame>\n        <div style={{ minWidth: SIZES.grid.width, maxWidth: SIZES.grid.width }}>\n          <Choices settings={settings} gameMode={gameMode} />\n        </div>\n        <div style={{ maxWidth: 440, minWidth: 440 }}>\n          <Information\n            gameMode={gameMode}\n            onSettingsUpdated={settingsUpdated}\n          />\n        </div>\n      </StyledGame>\n    </Centered>\n  )\n}\n\nexport default TwentyQuestions\n","import LeaderLine from \"leader-line-new\"\n\nexport const clean = (obj) =>\n  Object.keys(obj)\n    .filter((k) => obj[k] != null)\n    .reduce((a, k) => ({ ...a, [k]: obj[k] }), {})\n\nexport const styleDiv = (getDiv, style) => {\n  const div = getDiv()\n  Object.keys(style).forEach((k) => (div.style[k] = style[k]))\n}\n\nexport const isDef = (x) => x !== null && x !== undefined\n\n// https://stackoverflow.com/a/56749849/1072068\nexport const shuffle = (arr) =>\n  [...arr].reduceRight(\n    (\n      res,\n      _,\n      __,\n      s // eslint-disable-next-line no-sequences\n    ) => (res.push(s.splice(0 | (Math.random() * s.length), 1)[0]), res),\n    []\n  )\n\nexport const print = console.log.bind(console)\n\nexport const cleanupLeaderLines = () => {\n  // Due to animation, some leader lines are left behind\n  const removeElements = (className) =>\n    Array.from(document.getElementsByClassName(className)).forEach((x) =>\n      x.remove()\n    )\n  removeElements(\"leader-line\")\n  removeElements(\"leader-line-areaAnchor\")\n}\n\nexport const isObject = (x) => typeof x === \"object\" && x !== null\n\nexport const Connection = (from, to, config) => {\n  const configOverrides = {\n    ...{ options: {}, drawMode: \"draw\" },\n    ...(config || {}),\n  }\n\n  const endToEnd = (x) => {\n    if (isObject(x)) {\n      if (\"x\" in x || \"y\" in x) {\n        if (\"width\" in x || \"height\" in x) {\n          return LeaderLine.areaAnchor(document.getElementById(x.id), x)\n        } else {\n          return LeaderLine.pointAnchor(document.getElementById(x.id), x)\n        }\n      }\n      return document.getElementById(x.id)\n    } else {\n      return document.getElementById(x)\n    }\n  }\n\n  const lineOptions = {\n    start: endToEnd(from),\n    end: endToEnd(to),\n    hide: true,\n    path: \"straight\",\n    startSocket: \"right\",\n    endSocket: \"left\",\n    ...configOverrides.options,\n  }\n  const l = new LeaderLine(lineOptions)\n  l.show(configOverrides.drawMode)\n  return l\n}\n\nexport const HoverConnection = (fromId, toId, config) => {\n  const configOverrides = {\n    ...{ options: {}, drawMode: \"draw\" },\n    ...(config || {}),\n  }\n\n  const lineOptions = {\n    // start: document.getElementById(fromId),\n    start: LeaderLine.mouseHoverAnchor(document.getElementById(fromId)),\n    end: LeaderLine.pointAnchor(document.getElementById(toId), {\n      x: 60,\n      y: 20,\n    }),\n    hide: true,\n    path: \"straight\",\n    startPlug: \"square\",\n    startSocket: \"right\",\n    endSocket: \"left\",\n    ...configOverrides.options,\n  }\n  const l = new LeaderLine(lineOptions)\n  l.show(configOverrides.drawMode)\n  return l\n}\n\nexport const clearLines = (linesRef, noAnimate) => {\n  if (!linesRef.current) return\n  const lineKeys = Object.keys(linesRef.current.lines || {})\n  lineKeys.forEach((x) => {\n    linesRef.current.lines[x].remove()\n    // if (noAnimate) linesRef.current.lines[x].remove()\n    // else linesRef.current.lines[x].hide(\"draw\")\n    delete linesRef.current.lines[x]\n  })\n}\n\nexport const drawLine = (fromId, toId, linesRef, config) => {\n  if (!linesRef.current) return\n  const key = `${fromId}-${toId}`\n  if (!linesRef.current.lines) linesRef.current.lines = {}\n  if (linesRef.current.lines && linesRef.current.lines[key]) {\n    linesRef.current.lines[key].remove()\n  }\n  linesRef.current.lines[key] = Connection(fromId, toId, config)\n}\n\nexport const chain = async (fns, duration) => {\n  const delay = (t) =>\n    new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, t)\n    })\n\n  for (let x of fns) {\n    x()\n    await delay(duration || 0)\n  }\n}\n","import { useState, useEffect } from \"react\"\n\n// https://usehooks.com/useWindowSize/\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import { useEffect, useCallback, useRef, useMemo, useState } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport PlainDraggable from \"plain-draggable\"\nimport { shuffle, Connection, cleanupLeaderLines } from \"../../util/misc\"\nimport useWindowSize from \"../../hooks/useWindowSize\"\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`\n\nconst SIZES = {\n  tile: {\n    height: 100,\n    width: 100,\n  },\n}\n\nconst DraggableImageBase = styled.div`\n  height: ${SIZES.tile.height}px;\n  width: ${SIZES.tile.width}px;\n  border: 1px solid slategray;\n  border-radius: 5px;\n  background-image: ${({ src }) => `url(${src})`};\n  background-size: cover;\n`\n\nconst DraggableImageElement = styled(DraggableImageBase)`\n  z-index: 99;\n  position: absolute;\n  opacity: 95%;\n  border: 1px solid black;\n`\n\nconst DraggableImagePlaceholder = styled(DraggableImageBase)``\n\nconst between = (x, min, max) => x >= min && x <= max\nconst pointInBox = (point, box) =>\n  between(point.left, box.left, box.right) &&\n  between(point.top, box.top, box.bottom)\n\nconst findTarget = (targets, dropLocation) =>\n  targets\n    .map((x) => {\n      const rect = x.getBoundingClientRect()\n      return {\n        id: x.id,\n        top: rect.y,\n        left: rect.x,\n        bottom: rect.y + rect.height,\n        right: rect.x + rect.width,\n      }\n    })\n    .filter((x) => pointInBox(dropLocation, x))\n    .map((x) => x.id)\n    .slice(0, 1)\n    .shift()\n\nconst moveDraggable = (draggable) => {\n  const correctPosition = document\n    .getElementById(draggable.target || draggable.source)\n    .getBoundingClientRect()\n  draggable.left = correctPosition.x\n  draggable.top = correctPosition.y\n}\n\nconst DraggableImage = ({\n  index,\n  image,\n  attempt,\n  targetIds,\n  correctTarget,\n  disabled,\n  onDrag = () => null,\n  onGuess = () => null,\n}) => {\n  const windowSize = useWindowSize()\n  const imagePlaceholderId = `image${index}`\n  const draggableId = `draggable${index}`\n  const draggableDomRef = useRef()\n  const draggableRef = useRef()\n  useEffect(() => {\n    if (!draggableDomRef || !draggableDomRef.current) return\n    const d = new PlainDraggable(draggableDomRef.current)\n    d.containment = document.getElementById(\"root\")\n    d.source = imagePlaceholderId\n    // TODO If previous draggableRef is around, remove it\n    draggableRef.current = d\n    let snapped = false\n    const targets = () => targetIds.map((x) => document.getElementById(x))\n    d.snap = {\n      targets: targets(),\n      gravity: 50,\n      edge: \"inside\",\n    }\n    d.onDrag = (moveTo) => {\n      snapped = moveTo.snapped\n      onDrag(true)\n    }\n    d.onDragEnd = (moveTo) => {\n      reset()\n      if (snapped) {\n        d.target = findTarget(targets(), moveTo)\n        if (imagePlaceholderId && d.target) {\n          const correct = correctTarget === d.target\n          d.line = Connection(imagePlaceholderId, draggableId, {\n            options: {\n              color: correct ? \"green\" : \"red\",\n            },\n          })\n          onGuess(index, correct)\n        } else {\n          // reset()\n        }\n      } else {\n        onGuess(index, null)\n        // reset()\n      }\n      onDrag(false)\n      moveDraggable(d)\n    }\n\n    const reset = () => {\n      if (d) {\n        if (d.line) {\n          try {\n            d.line.remove()\n            d.line = null\n          } catch {\n            // In case the line has already been cleaned up\n          }\n        }\n        d.target = null\n      }\n    }\n    const cleanup = () => {\n      if (d) {\n        reset()\n        d.remove()\n      }\n    }\n\n    moveDraggable(d)\n    return cleanup // Remove line on unmount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [attempt])\n  useEffect(() => moveDraggable(draggableRef.current), [windowSize])\n  useEffect(() => (draggableRef.current.disabled = disabled), [disabled])\n  return (\n    <>\n      <DraggableImagePlaceholder\n        id={imagePlaceholderId}\n        src={`match-img/${image}`}\n        draggable={false}\n        alt={image}\n      />\n      <DraggableImageElement\n        id={draggableId}\n        src={`match-img/${image}`}\n        alt={image}\n        ref={draggableDomRef}\n      />\n    </>\n  )\n}\n\nconst DraggableContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`\n\nconst DraggableTargetDrop = styled(DraggableImageBase)`\n  background-color: #ddd;\n  border: 1px dashed black;\n`\n\nconst DraggableTarget = ({ id, image, dragging }) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <DraggableTargetDrop id={id} dragging={dragging} />\n      <DraggableImageBase\n        src={`match-img/${image}`}\n        alt={image}\n        style={{ marginLeft: 10 }}\n      />\n    </div>\n  )\n}\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  background-color: steelblue;\n  padding: 25px;\n  border-radius: 10px;\n  border: 1px solid gray;\n  margin: 20px 0;\n`\n\nconst toKey = (x, index) => `${x}_${index}`\n\nconst MiddleSection = styled.div`\n  width: 450px;\n`\n\nconst Title = styled.div`\n  font-size: 3rem;\n  text-shadow: 2px 2px 2px slategray;\n  text-align: center;\n`\n\nconst GameInfo = {\n  learn: { title: \"Learn to Match\", matchCount: 3 },\n  easy: { title: \"Easy Match Game\", matchCount: 5 },\n  hard: { title: \"Hard Match Game\", matchCount: 3, targetCount: 6 },\n}\n\nconst StyledWrongAnswerX = styled.div`\n  display: inline-block;\n  animation: ${fadeIn} 0.1s linear;\n`\n\nconst WrongAnswerX = ({ width = 75, height = 100, strokeWidth = 8 }) => {\n  const style = {\n    stroke: \"red\",\n    fill: \"none\",\n    strokeWidth,\n    rx: 1,\n    strokeLinecap: \"round\",\n  }\n  const cornerPadding = strokeWidth * 2.5\n  return (\n    <StyledWrongAnswerX style={{ width, height }}>\n      <svg viewBox={`0 0 ${width} ${height}`}>\n        <rect\n          style={style}\n          x={strokeWidth}\n          y={strokeWidth}\n          width={width - strokeWidth * 2}\n          height={height - strokeWidth * 2}\n        />\n        <line\n          x1={cornerPadding}\n          y1={cornerPadding}\n          x2={width - cornerPadding}\n          y2={height - cornerPadding}\n          style={style}\n        />\n        <line\n          x1={width - cornerPadding}\n          y1={cornerPadding}\n          x2={cornerPadding}\n          y2={height - cornerPadding}\n          style={style}\n        />\n      </svg>\n    </StyledWrongAnswerX>\n  )\n}\n\nconst Centered = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`\n\nconst ScoreBoard = ({ guesses }) => {\n  return (\n    <>\n      <div style={{ textAlign: \"center\", height: 100, marginTop: 5 }}>\n        {new Array(guesses.incorrect).fill().map((_, i) => (\n          <WrongAnswerX key={`incorrect-x-${i}`} />\n        ))}\n      </div>\n      {/* <Centered>{JSON.stringify(guesses)}</Centered> */}\n    </>\n  )\n}\n\nconst RetryButton = styled.button`\n  height: 50px;\n  border: 3px solid #111;\n  border-radius: 25px;\n  font-size: 1.5rem;\n  padding: 0 20px;\n  font-family: Futura;\n  background-color: ${({ won }) => (won ? \"green\" : \"slategray\")};\n  color: white;\n  cursor: pointer;\n  outline: none;\n  position: relative;\n  z-index: 9999;\n`\n\nconst Options = ({ guesses, onGameOver, onRetry }) => {\n  const [won, setWon] = useState(false)\n  const [buttonText, setButtonText] = useState(null)\n  useEffect(() => {\n    const winner = () =>\n      guesses.total > 0 &&\n      Object.keys(guesses.correct).filter((x) => guesses.correct[x]).length ===\n        guesses.total\n    const loser = () => guesses.incorrect >= guesses.maxStrikes\n    const won = winner()\n    setWon(won)\n    const text = loser() ? \"Try again?\" : won ? \"You won! Play again?\" : null\n    setButtonText(text)\n    if (text) onGameOver()\n  }, [guesses, onGameOver])\n  return buttonText ? (\n    <Centered>\n      <RetryButton onClick={onRetry} won={won}>\n        {buttonText}\n      </RetryButton>\n    </Centered>\n  ) : null\n}\n\nconst MatchLayout = ({ model, gameMode, onRetry, maxStrikes = 3 }) => {\n  const [disabled, setDisabled] = useState(false)\n  const findTargetId = (image) =>\n    Object.keys(model.images).find((key) => model.images[key] === image)\n\n  const onGameOver = () => setDisabled((_) => true)\n  const _onRetry = () => {\n    setGuesses(resetGuesses())\n    onRetry()\n  }\n\n  const images = useMemo(() => (model || {}).images || {}, [model])\n  const sources = useMemo(() => Object.values(images).filter((x) => x), [\n    images,\n  ])\n  const targetIds = useMemo(() => shuffle(Object.keys(images)), [images])\n\n  const resetGuesses = useCallback(\n    () => ({\n      maxStrikes,\n      total: sources.length,\n      correct: {},\n      incorrect: 0,\n    }),\n    [sources, maxStrikes]\n  )\n\n  useEffect(() => {\n    setDisabled(false)\n    setGuesses(resetGuesses())\n  }, [model, resetGuesses])\n\n  const [guesses, setGuesses] = useState(resetGuesses())\n  const onGuess = (index, guess) =>\n    setGuesses((prev) => ({\n      ...prev,\n      correct:\n        guess === true\n          ? { ...prev.correct, [index]: guess }\n          : guess === null\n          ? { ...prev.correct, [index]: false }\n          : prev.correct,\n      incorrect:\n        guess === false\n          ? Math.min(prev.incorrect + 1, prev.total)\n          : prev.incorrect,\n    }))\n\n  return (\n    <DraggableContainer>\n      <SideContainer>\n        {sources.map((x, i) => (\n          <DraggableImage\n            key={toKey(x, i)}\n            index={i}\n            image={x}\n            attempt={model.attempt}\n            disabled={disabled}\n            targetIds={targetIds}\n            correctTarget={findTargetId(x)}\n            onGuess={onGuess}\n          />\n        ))}\n      </SideContainer>\n      <MiddleSection>\n        <ScoreBoard guesses={guesses} />\n        <Title>{GameInfo[gameMode].title || \"Match Game\"}</Title>\n        <Options guesses={guesses} onRetry={_onRetry} onGameOver={onGameOver} />\n      </MiddleSection>\n      <SideContainer key={new Date().getTime()}>\n        {targetIds.map((x, i) => (\n          <DraggableTarget key={toKey(x, i)} id={x} image={x} />\n        ))}\n      </SideContainer>\n    </DraggableContainer>\n  )\n}\n\nconst Match = ({\n  gameMode = \"easy\",\n  matchCount = GameInfo[gameMode].matchCount,\n  targetCount = GameInfo[gameMode].targetCount || GameInfo[gameMode].matchCount,\n}) => {\n  const [retries, setRetries] = useState(0)\n  const [model, setModel] = useState({})\n  const allImages = useMemo(\n    () => ({\n      \"bird_image_1.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_bird_threshold_512.png\",\n            \"match_game_cifar_robust_images_bird_0.png\",\n            \"match_game_cifar_robust_images_bird_1.png\",\n            \"match_game_cifar_robust_images_bird_2.png\",\n            \"match_game_cifar_robust_images_bird_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_bird_threshold_512.png\",\n            \"match_game_cifar_diluted_robust_images_bird_0.png\",\n            \"match_game_cifar_diluted_robust_images_bird_1.png\",\n            \"match_game_cifar_diluted_robust_images_bird_2.png\",\n            \"match_game_cifar_diluted_robust_images_bird_3.png\",\n          ],\n        },\n      },\n      \"cat_image_18.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_cat_threshold_512.png\",\n            \"match_game_cifar_robust_images_cat_0.png\",\n            \"match_game_cifar_robust_images_cat_1.png\",\n            \"match_game_cifar_robust_images_cat_2.png\",\n            \"match_game_cifar_robust_images_cat_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_cat_threshold_512.png\",\n            \"match_game_cifar_diluted_robust_images_cat_0.png\",\n            \"match_game_cifar_diluted_robust_images_cat_1.png\",\n            \"match_game_cifar_diluted_robust_images_cat_2.png\",\n            \"match_game_cifar_diluted_robust_images_cat_3.png\",\n          ],\n        },\n      },\n      \"deer_image_13.png\": {\n        match: {\n          easy: [\"match_game_cifar_robust_images_deer_threshold_512.png\"],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_deer_threshold_512.png\",\n          ],\n        },\n      },\n      \"dog_image_16.png\": {\n        match: {\n          easy: [\"match_game_cifar_robust_images_dog_threshold_512.png\"],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_dog_threshold_512.png\",\n          ],\n        },\n      },\n      \"horse_image_16.png\": {\n        match: {\n          easy: [\"match_game_cifar_robust_images_horse_threshold_512.png\"],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_horse_threshold_512-2.png\",\n          ],\n        },\n      },\n      \"boat_image_10.png\": {\n        match: {\n          easy: [\"match_game_cifar_robust_images_boat_threshold_512.png\"],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_boat_threshold_512.png\",\n          ],\n        },\n      },\n      \"car_image_1.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_car_threshold_512.png\",\n            \"match_game_cifar_robust_images_car_0.png\",\n            \"match_game_cifar_robust_images_car_1.png\",\n            \"match_game_cifar_robust_images_car_2.png\",\n            \"match_game_cifar_robust_images_car_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_car_threshold_512.png\",\n            \"match_game_cifar_diluted_robust_images_car_0.png\",\n            \"match_game_cifar_diluted_robust_images_car_1.png\",\n            \"match_game_cifar_diluted_robust_images_car_2.png\",\n            \"match_game_cifar_diluted_robust_images_car_3.png\",\n          ],\n        },\n      },\n      \"plane_image_1.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_plane_0.png\",\n            \"match_game_cifar_robust_images_plane_1.png\",\n            \"match_game_cifar_robust_images_plane_2.png\",\n            \"match_game_cifar_robust_images_plane_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_plane_0.png\",\n            \"match_game_cifar_diluted_robust_images_plane_1.png\",\n            \"match_game_cifar_diluted_robust_images_plane_2.png\",\n            \"match_game_cifar_diluted_robust_images_plane_3.png\",\n          ],\n        },\n      },\n      \"frog_image_1.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_frog_1.png\",\n            \"match_game_cifar_robust_images_frog_1.png\",\n            \"match_game_cifar_robust_images_frog_2.png\",\n            \"match_game_cifar_robust_images_frog_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_frog_0.png\",\n            \"match_game_cifar_diluted_robust_images_frog_1.png\",\n            \"match_game_cifar_diluted_robust_images_frog_2.png\",\n            \"match_game_cifar_diluted_robust_images_frog_3.png\",\n          ],\n        },\n      },\n      \"horse_image_1.png\": {\n        match: {\n          learn: [\"horse_image_16.png\", \"horse_image_1.png\"],\n          easy: [\n            \"match_game_cifar_robust_images_horse_threshold_512.png\",\n            \"match_game_cifar_robust_images_horse_0.png\",\n            \"match_game_cifar_robust_images_horse_1.png\",\n            \"match_game_cifar_robust_images_horse_2.png\",\n            \"match_game_cifar_robust_images_horse_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_horse_threshold_512.png\",\n            \"match_game_cifar_diluted_robust_images_horse_0.png\",\n            \"match_game_cifar_diluted_robust_images_horse_1.png\",\n            \"match_game_cifar_diluted_robust_images_horse_2.png\",\n            \"match_game_cifar_diluted_robust_images_horse_3.png\",\n          ],\n        },\n      },\n      \"truck_image_1.png\": {\n        match: {\n          easy: [\n            \"match_game_cifar_robust_images_truck_0.png\",\n            \"match_game_cifar_robust_images_truck_1.png\",\n            \"match_game_cifar_robust_images_truck_2.png\",\n            \"match_game_cifar_robust_images_truck_3.png\",\n          ],\n          hard: [\n            \"match_game_cifar_diluted_robust_images_truck_0.png\",\n            \"match_game_cifar_diluted_robust_images_truck_1.png\",\n            \"match_game_cifar_diluted_robust_images_truck_2.png\",\n            \"match_game_cifar_diluted_robust_images_truck_3.png\",\n          ],\n        },\n      },\n    }),\n    []\n  )\n\n  const resetModel = useCallback(() => {\n    console.log(Object.keys(allImages))\n    const targets = shuffle(Object.keys(allImages)).slice(0, targetCount)\n    const matchImage = (key) => {\n      return allImages[key].match[gameMode]\n        ? allImages[key].match[gameMode].length\n          ? shuffle(allImages[key].match[gameMode]).slice(0, 1)[0]\n          : null\n        : key\n    }\n    return targets.reduce(\n      (all, x, i) => {\n        return {\n          ...all,\n          images: {\n            ...all.images,\n            [x]: i < matchCount ? matchImage(x) : null,\n          },\n        }\n      },\n      { attempt: retries }\n    )\n  }, [allImages, matchCount, retries, gameMode, targetCount])\n\n  useEffect(() => {\n    cleanupLeaderLines()\n    setModel(resetModel())\n  }, [retries, resetModel])\n\n  if (matchCount > targetCount) {\n    return <div>targetCount must be more than matchCount</div>\n  }\n\n  const retryGame = () => setRetries((prev) => prev + 1)\n  return (\n    <MatchLayout\n      model={model}\n      gameMode={gameMode}\n      onRetry={retryGame}\n      sourceCount={matchCount}\n      targetCount={matchCount}\n    />\n  )\n}\n\nexport default Match\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useState, useEffect, useRef, useMemo } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { gameData, isDefined } from \"../../util/data\"\nimport { clean, styleDiv, isDef } from \"../../util/misc\"\nimport {\n  Centered,\n  ToggleButton,\n  GameButton,\n  Sidecar,\n  RangeSlider,\n  ControlLabel,\n} from \"./Util\"\nimport { PieChart } from \"react-minimal-pie-chart\"\nimport SimpleImageSlider from \"react-simple-image-slider\"\nimport Select from \"react-select\"\nimport \"./Game.css\"\n\nconst PRACTICE_IMAGE_SIZE = {\n  container: {\n    width: 661,\n    height: 600,\n  },\n  image: {\n    width: 300,\n    height: 300,\n  },\n}\n\nconst AI_NAME = \"COMPY\"\nconst COLORS = {\n  yes: \"#4caf50\",\n  no: \"#dc004d\",\n  neutral: \"antiquewhite\",\n}\n\nconst resetGame = async (original, updateFn, setCurrentIndex, demo) => {\n  const updated = { ...original }\n  updated.version = isDefined(updated.version) ? updated.version + 1 : 1\n  updated.practiceRoundNumber = demo\n    ? 3\n    : updated.practiceRoundNumber === 1\n    ? 2\n    : 1\n  // updated.practiceRoundNumber = updated.practiceRoundNumber === 1 ? 2 : 1\n  // updated.practiceRoundNumber = 3\n  console.log(`Practice reset to Round ${updated.practiceRoundNumber}`)\n  const currentGameData = await generateGameData(updated.practiceRoundNumber)\n  if (updated.practiceRound && Object.keys(updated.practiceRound).length) {\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n  }\n  updated.currentGameData = currentGameData\n  setCurrentIndex(0)\n  updated.practiceRound = currentGameData.scrollingImages.reduce(\n    (all, x, i) => ({\n      ...all,\n      [x.path]: { ...x },\n    }),\n    {}\n  )\n  updateFn(updated)\n}\n\nconst generateGameData = async (practiceRoundNumber) => {\n  const _gameData = await gameData()\n  const images = _gameData.practiceOptions[practiceRoundNumber].reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  const scrollingImages = Object.keys(images).map((i) => ({\n    ...images[i],\n    url: `img/${images[i].path}`,\n  }))\n  return {\n    gameData: _gameData,\n    images,\n    scrollingImages,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst answer = (property, gameSettings, img) =>\n  !(img in gameSettings.practiceRound)\n    ? null\n    : gameSettings.practiceRound[img][property]\n\nconst allQuestionsAnswered = (gameSettings) =>\n  Object.keys(gameSettings.practiceRound).reduce(\n    (all, x) => all && isDefined(gameSettings.practiceRound[x].seenbefore),\n    true\n  )\n\nconst StyledPracticeResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0 10px 10px;\n  border-top: 1px solid lightgray;\n  background-color: ${(props) => (props.current ? \"lightgray\" : \"none\")};\n  transition: background-color 1s ease;\n`\n\nconst PracticeResultTitle = styled.b`\n  color: ${(props) => props.color};\n  &:before {\n    content: \"${(props) => (props.current ? \"> \" : \"\")}\";\n  }\n`\n\nconst PracticeResult = ({\n  question: { path, correct, agree, seenbefore },\n  questionNumber,\n  isCurrentImage,\n}) => {\n  const answer = !isDefined(seenbefore)\n    ? \"waiting\"\n    : (seenbefore && correct) || (!seenbefore && !correct)\n    ? \"correct\"\n    : \"incorrect\"\n  const displaySettings = {\n    waiting: {\n      text: \"Waiting on your guess...\",\n    },\n    correct: {\n      text: `You know ${AI_NAME} pretty well!`,\n      color: COLORS.yes,\n    },\n    incorrect: {\n      text: `Sorry, you don't know ${AI_NAME} very well.`,\n      color: COLORS.no,\n    },\n  }\n  const display = displaySettings[answer]\n  return (\n    <StyledPracticeResult current={isCurrentImage}>\n      <PracticeResultTitle\n        color={display.color}\n        current={isCurrentImage}\n        title={path}\n      >\n        Image {questionNumber}\n      </PracticeResultTitle>\n      <div>{display.text}</div>\n    </StyledPracticeResult>\n  )\n}\n\nconst StyledEndButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst EndButtons = ({ resetGame }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const challengeCarnac = () => {\n    const updated = { ...gameSettings }\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n    updated.practiceRound = {}\n    setGameSettings(updated)\n  }\n  return (\n    <StyledEndButtons>\n      <GameButton onClick={resetGame}>More Practice</GameButton>\n      <Link to=\"/game\">\n        <GameButton onClick={challengeCarnac}>Challenge Carnac!</GameButton>\n      </Link>\n    </StyledEndButtons>\n  )\n}\n\nconst StylePracticeResults = styled(Sidecar)`\n  border-top: 1px solid slategray;\n  border-bottom: 1px solid slategray;\n  border-right: 1px solid slategray;\n  border-top-right-radius: 15px;\n  padding: 10px;\n  border-bottom-right-radius: 15px;\n  min-width: 350px;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst PracticeResultsTitle = styled.div`\n  border-bottom: 2px solid darkgray;\n  font-size: 1.9rem;\n  font-weight: 500;\n  text-align: center;\n  padding-bottom: 12px;\n  margin: 10px 0;\n  text-shadow: 2px 2px 2px slategray;\n`\n\nconst PracticeResultsSubtitle = styled.h4`\n  margin: 10px;\n`\n\nconst PracticeResults = ({ resetGame, currentImageIndex, demo }) => {\n  const [gameSettings] = useContext(GameContext)\n  return (\n    <StylePracticeResults>\n      <div>\n        <PracticeResultsTitle>\n          Practice Round {!demo ? gameSettings.practiceRoundNumber : null}\n        </PracticeResultsTitle>\n        <PracticeResultsSubtitle>\n          Make a selection for each image:\n        </PracticeResultsSubtitle>\n        {Object.keys(gameSettings.practiceRound).map((x, i) => (\n          <PracticeResult\n            key={i}\n            questionNumber={i + 1}\n            isCurrentImage={i === currentImageIndex}\n            question={gameSettings.practiceRound[x]}\n          />\n        ))}\n      </div>\n      <div>\n        {!demo && allQuestionsAnswered(gameSettings) ? (\n          <EndButtons resetGame={resetGame} />\n        ) : null}\n      </div>\n    </StylePracticeResults>\n  )\n}\n\nconst ImageSliderOverrideStyles = ({ images, currentIndex }) => {\n  const [gameSettings] = useContext(GameContext)\n  const Selectors = {\n    bullet: (index) =>\n      `#practice-container button[data-id*=\"bullet\"]:nth-child(${index + 1})`,\n    image: () =>\n      '#practice-container div[style*=\"background-size: cover\"][style*=\"background-image:\"][style*=\".png\"]',\n  }\n\n  const _bulletStyle = (index, colors) => {\n    const border =\n      currentIndex === index ? \"; border: 2px solid blue !important;\" : \"\"\n    // return `#practice-container button[data-id*=\"bullet\"]:nth-child(${\n    //   index + 1\n    // }) { background: linear-gradient(90deg, ${colors[0]} 50%, ${\n    //   colors[1]\n    // } 50%) !important; ${border} }\n    //   `\n    return `${Selectors.bullet(index)} { background-color: ${\n      colors[0]\n    } !important; ${border} }\n        `\n  }\n  // const bulletStyle = (index, colors) =>\n  //   bulletContainerChildIndices\n  //     .map((i) => _bulletStyle(i, index, colors))\n  //     .join(\"\\n\")\n  // const bulletStyle = _bulletStyle(index, colors)\n  const bulletStyles = () =>\n    images.map((_, i) => {\n      // const agree = answer(\"agree\", gameSettings, images[i].path)\n      const seenbefore = answer(\"seenbefore\", gameSettings, images[i].path)\n      const toColor = (x) => (x == null ? \"white\" : x ? COLORS.yes : COLORS.no)\n      // return _bulletStyle(i, [toColor(agree), toColor(seenbefore)])\n      return _bulletStyle(i, [toColor(seenbefore)])\n    })\n\n  const imageSize = {\n    width:\n      PRACTICE_IMAGE_SIZE.image.width / PRACTICE_IMAGE_SIZE.container.width,\n    height:\n      PRACTICE_IMAGE_SIZE.image.height / PRACTICE_IMAGE_SIZE.container.height,\n  }\n  const imagePercent = {\n    width: parseInt(imageSize.width * 100),\n    height: parseInt(imageSize.height * 100),\n  }\n  const paddingLeft =\n    (PRACTICE_IMAGE_SIZE.container.width - PRACTICE_IMAGE_SIZE.image.width) / 2\n  const paddingTop =\n    (PRACTICE_IMAGE_SIZE.container.height - PRACTICE_IMAGE_SIZE.image.height) /\n    2\n\n  const imageStyles = () => [\n    `${Selectors.image()} {left: ${paddingLeft}px !important; top: ${paddingTop}px !important; width: ${\n      imagePercent.width\n    }% !important; height: ${\n      imagePercent.height\n    }% !important; border-radius: 5px; box-shadow: 0 0 5px #000000;}`,\n  ]\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: [...bulletStyles(), ...imageStyles()].join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst StyledQuestionWithButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  height: 60px;\n  margin-bottom: 45px;\n  pointer-events: all;\n  &:first-child {\n    margin-left: 15px;\n  }\n  &:last-child {\n    margin-right: 15px;\n  }\n`\nconst StyledQuestionWithButtonsButton = styled.div`\n  padding-top: 5px;\n  padding-bottom: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\nconst QuestionText = styled.div`\n  font-size: 0.9rem;\n`\nconst QuestionWithButtons = ({ question, onAnswer, defaultValue }) => (\n  <StyledQuestionWithButtons>\n    <QuestionText>{question}</QuestionText>\n    <StyledQuestionWithButtonsButton>\n      <ToggleButton\n        defaultValue={defaultValue}\n        onToggle={onAnswer}\n        trueBgColor={COLORS.yes}\n        falseBgColor={COLORS.no}\n        // trueLabel={<Emoji symbol=\"0x2714\" />}\n        // falseLabel={<Emoji symbol=\"0x2716\" />}\n        trueLabel=\"YES\"\n        falseLabel=\"NO\"\n      />\n    </StyledQuestionWithButtonsButton>\n  </StyledQuestionWithButtons>\n)\n\nconst StyledTuningSideTile = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 130px;\n  width: 180px;\n  height: 295px;\n`\n\nconst TuningSideTile = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  padding: 10px;\n  color: white;\n  border-radius: 15px;\n  width: 75%;\n  text-align: center;\n`\n\nconst StyledProbability = styled(StyledTuningSideTile)`\n  right: 0px;\n`\n\nconst Probability = ({ previousLabel, label, value }) => {\n  const percent = (value * 100).toFixed(1)\n  return (\n    <StyledProbability>\n      <Centered>\n        <TuningSideTile>\n          <div>\n            {AI_NAME} says <br />\n            <PictureLabel\n              changed={isDef(previousLabel) && label !== previousLabel}\n            >\n              {label}\n            </PictureLabel>{\" \"}\n            with a confidence of\n          </div>\n          <div style={{ margin: \"0 30px 0 30px\" }}>\n            <PieChart\n              animate\n              reveal={100}\n              data={[\n                { value: percent, color: \"#ccc\" },\n                { value: 100 - percent, color: \"#777\", hideLabel: true },\n              ]}\n              totalValue={100}\n              lineWidth={30}\n              label={({ dataEntry }) =>\n                dataEntry.hideLabel ? null : `${dataEntry.value}%`\n              }\n              labelStyle={{\n                fontSize: \"1.1rem\",\n                fill: \"white\",\n              }}\n              labelPosition={0}\n            />\n          </div>\n        </TuningSideTile>\n      </Centered>\n    </StyledProbability>\n  )\n}\n\nconst StyledTuningsOuter = styled(StyledTuningSideTile)`\n  left: 0px;\n`\n\nconst StyledTuningSelect = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`\n\nconst TuningSelect = (props) => {\n  const selectStyles = {\n    container: (provided) => ({ ...provided, width: \"100%\" }),\n    indicatorSeparator: (provided) => ({ ...provided, display: \"none\" }),\n    option: (provided, { data }) => ({\n      ...provided,\n      textAlign: \"left\",\n      whiteSpace: \"nowrap\",\n      color: \"black\",\n      fontSize: \"0.9rem\",\n      \":before\": {\n        content: `${data.icon ? `'${data.icon}'` : \"''\"}`,\n        width: \"15px\",\n        padding: \"0 5px 0 0 !important\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n      },\n    }),\n    menu: (provided) => ({\n      ...provided,\n      width: \"fit-content\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      fontSize: \"0.8rem\",\n    }),\n  }\n\n  return <Select styles={selectStyles} isSearchable={false} {...props} />\n}\n\nconst Tunings = ({ image, getImageDiv, onLoadImageVariant }) => {\n  const defaultStyle = {\n    noise: 0,\n  }\n  const [styles, setStyles] = useState(defaultStyle)\n  const [selectedVariant, setSelectedVariant] = useState(null)\n  const changeImage = (key) =>\n    styleDiv(getImageDiv, {\n      transition: \"none\",\n      \"background-image\":\n        !styles[key] && key in image.variants && \"path\" in image.variants[key]\n          ? `url(\"img/${image.variants[key].path}\")`\n          : `url(\"img/${image.path}\")`,\n    })\n\n  const variantLabel = (key) => {\n    return (image.variants[key] || image).label\n  }\n  const resetImage = () => {\n    console.log(\"Resetting image....\")\n    changeImage(\"unknown\")\n    onLoadImageVariant({})\n    setStyles({ ...defaultStyle })\n  }\n\n  const updateImage = (key, additionalStyles = {}) => {\n    const toggle = !styles[key]\n    changeImage(key)\n    onLoadImageVariant(\n      clean({\n        probability: toggle\n          ? key in image.variants\n            ? image.variants[key].probability\n            : null\n          : null,\n        label: variantLabel(key),\n      })\n    )\n    setStyles({ ...defaultStyle, [key]: toggle, ...additionalStyles })\n  }\n  const addNoise = (noiseLevel) =>\n    updateImage(`noise${noiseLevel}`, { noise: noiseLevel })\n\n  const augmentVariants = Object.keys(image.variants || {}).filter(\n    (x) => !x.startsWith(\"noise\")\n  )\n  const optionDecorations = {\n    hflip: {\n      label: () => \"Horizontal Flip\",\n      icon: () => \"\\\\21C4\",\n    },\n    vflip: {\n      label: () => \"Vertical Flip\",\n      icon: () => \"\\\\21C5\",\n    },\n    \"rot*\": {\n      label: (x) => `${x.replace(\"rot\", \"Rotate \")}°`,\n      icon: () => \"\\\\21BB\",\n    },\n  }\n\n  const noop = () => undefined\n  const decorate = (object, property, decoration, key) =>\n    (object[property] = (decoration[property] || noop)(key))\n\n  const decorateOption = (key) => {\n    const defaults = {\n      value: key,\n      label: key,\n      fn: updateImage.bind(null, key),\n    }\n    let decoration = undefined\n    if (key in optionDecorations) {\n      decoration = optionDecorations[key]\n    } else {\n      const decorationKey = Object.keys(optionDecorations)\n        .filter((x) => x.includes(\"*\"))\n        .find((x) => key.startsWith(x.replace(\"*\", \"\")))\n      if (decorationKey) {\n        decoration = optionDecorations[decorationKey]\n      }\n    }\n\n    if (decoration) {\n      decorate(defaults, \"label\", decoration, key)\n      decorate(defaults, \"icon\", decoration, key)\n    }\n\n    return defaults\n  }\n\n  const options = [\n    {\n      value: \"normal\",\n      label: \"Normal\",\n      fn: resetImage,\n    },\n    ...augmentVariants.map(decorateOption),\n  ]\n\n  const noiseLevelVariants = Object.keys(image.variants || {})\n    .filter((x) => x.startsWith(\"noise\"))\n    .map((x) => parseInt(x.replace(\"noise\", \"\")))\n  const noiseLevels = [0, ...noiseLevelVariants]\n\n  return (\n    <StyledTuningsOuter>\n      <Centered>\n        <TuningSideTile>\n          <ControlLabel>Apply Filter:</ControlLabel>\n          <StyledTuningSelect>\n            <TuningSelect\n              options={options}\n              value={selectedVariant || options[0]}\n              onChange={(x) => {\n                setSelectedVariant(x)\n                x.fn()\n              }}\n            />\n          </StyledTuningSelect>\n          <RangeSlider\n            label=\"Add Noise:\"\n            step={1}\n            min={0}\n            max={Math.max(...noiseLevels)}\n            value={styles.noise}\n            onChange={(level) => {\n              setSelectedVariant(null)\n              addNoise(level)\n            }}\n          />\n        </TuningSideTile>\n      </Centered>\n    </StyledTuningsOuter>\n  )\n}\n\nconst Caption = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  height: 35px;\n  border-bottom-right-radius: 8px;\n  border-top-left-radius: 15px;\n  font-size: 1.4rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\nconst StyledSwitchMode = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  border-bottom-left-radius: 8px;\n  font-size: 1.2rem;\n  height: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\nconst SwitchModeButton = styled.button`\n  border: 0;\n  outline: none;\n  background: none;\n  font-size: 1.2rem;\n  color: ${({ selected }) => (selected ? \"black\" : \"white\")};\n  flex: 1;\n  font-family: Futura;\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: 1px 1px 1px black;\n  }\n`\n\nconst SwitchMode = ({ mode, onSwitchMode }) => {\n  const labels = {\n    trick: \"Back to Game\",\n  }\n  // const label = mode in labels ? labels[mode] : `Trick ${AI_NAME}?`\n  const label = mode in labels ? labels[mode] : `Learn More`\n  const toModes = {\n    trick: null,\n  }\n  const toMode = mode in toModes ? toModes[mode] : \"trick\"\n  return (\n    <StyledSwitchMode>\n      <SwitchModeButton onClick={() => onSwitchMode(toMode)}>\n        {label}\n      </SwitchModeButton>\n    </StyledSwitchMode>\n  )\n}\n\nconst StyledPracticeVoteButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  position: absolute;\n  pointer-events: none;\n  width: 100%;\n  bottom: 0px;\n  z-index: 1;\n`\n\nconst PictureLabel = styled.div`\n  border-radius: 5px;\n  display: inline-block;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: ${(props) => (props.changed ? \"white\" : \"#333\")};\n  background-color: ${(props) => (props.changed ? \"#dc004d\" : \"white\")};\n  border: 1px solid lightgray;\n  border-color: ${(props) => (props.changed ? \"antiquewhite\" : \"lightgray\")};\n  transition: background-color 1s ease;\n  font-style: italic;\n`\n\nconst ImageControls = ({ getImageDiv, images, index, onChange }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const fallbackProbability = 0.5\n  const [displayMode, setDisplayMode] = useState(null)\n  const [loadedImage, setLoadedImage] = useState({})\n  const image = images[index]\n  const defaultLoadedImageState = useMemo(\n    () =>\n      image\n        ? {\n            probability: image.probability || fallbackProbability,\n            label: image.label,\n          }\n        : { probability: fallbackProbability, label: \"unknown\" },\n    [image]\n  )\n  useEffect(() => {\n    setLoadedImage(defaultLoadedImageState)\n  }, [index, defaultLoadedImageState])\n\n  if (!images) return null\n\n  const resetImage = () => {\n    styleDiv(getImageDiv, {\n      \"background-image\": `url(\"img/${image.path}\")`,\n    })\n    setLoadedImage(defaultLoadedImageState)\n  }\n  const onClickUpdateProperty = (property, guessed) => {\n    const updated = { ...gameSettings }\n    updated.practiceRound[images[index].path][property] = guessed\n    setGameSettings(updated)\n  }\n  // const onAgreementClick = onClickUpdateProperty.bind(null, \"agree\")\n  const onSeenBeforeClick = onClickUpdateProperty.bind(null, \"seenbefore\")\n\n  const question = gameSettings.practiceRound[images[index].path]\n  const caption =\n    loadedImage.label === \"deer\" ? (\n      <div>This is a deer, and {AI_NAME} agrees</div>\n    ) : (\n      <div>\n        This is a deer, but {AI_NAME} thinks its a{\" \"}\n        <PictureLabel\n          changed={\n            isDef(loadedImage.previousLabel) &&\n            loadedImage.label !== loadedImage.previousLabel\n          }\n          title={`Previous: ${loadedImage.previousLabel || \"none\"}`}\n        >\n          {loadedImage.label}\n        </PictureLabel>\n      </div>\n    )\n  return (\n    <>\n      {displayMode !== \"trick\" ? <Caption>{caption}</Caption> : null}\n      {images[index].variants ? (\n        <SwitchMode\n          mode={displayMode}\n          onSwitchMode={(mode) => {\n            resetImage()\n            setDisplayMode(mode)\n            onChange(clean({ displayMode: mode }))\n          }}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Tunings\n          image={images[index]}\n          getImageDiv={getImageDiv}\n          onLoadImageVariant={(x) => {\n            setLoadedImage({\n              ...defaultLoadedImageState,\n              ...x,\n              previousLabel: loadedImage.label,\n            })\n            onChange({ ...defaultLoadedImageState, ...x, displayMode })\n          }}\n          probability={loadedImage.probability}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Probability\n          value={loadedImage.probability}\n          previousLabel={loadedImage.previousLabel}\n          label={loadedImage.label}\n        />\n      ) : null}\n      <ImageSliderOverrideStyles images={images} currentIndex={index} />\n      {displayMode !== \"trick\" ? (\n        <StyledPracticeVoteButtons>\n          {/* <QuestionWithButtons\n            question=\"Do you agree with COMPY?\"\n            onAnswer={onAgreementClick.bind(null)}\n            defaultValue={question.agree}\n          /> */}\n          <QuestionWithButtons\n            question={`Do you think ${AI_NAME} was trained on this image?`}\n            onAnswer={onSeenBeforeClick.bind(null)}\n            defaultValue={question.seenbefore}\n          />\n        </StyledPracticeVoteButtons>\n      ) : null}\n    </>\n  )\n}\n\nconst StyledPractice = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst StyledPracticeGame = styled.div`\n  position: relative;\n`\n\nconst TwentyQuestionsPractice = ({ demo, hideSideBar }) => {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const [imageState, setImageState] = useState({})\n  const reset = () =>\n    resetGame(gameSettings, setGameSettings, setCurrentIndex, demo)\n  const sliderRef = useRef()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(reset, [])\n\n  const currentImage = () => {\n    const img = sliderRef.current.querySelectorAll(\n      'div[style*=\"background-image:\"][style*=\".png\"]'\n    )[1] // Take the second image, the first is the transition image\n    console.log(img)\n    return img\n  }\n\n  if (\n    !gameSettings.currentGameData ||\n    !gameSettings.currentGameData.scrollingImages\n  )\n    return null\n\n  return gameSettings.currentGameData ? (\n    <Centered>\n      <StyledPractice id=\"practice-container\">\n        <StyledPracticeGame ref={sliderRef}>\n          <ImageControls\n            getImageDiv={currentImage}\n            images={gameSettings.currentGameData.scrollingImages}\n            index={currentIndex}\n            onChange={setImageState}\n          />\n          <SimpleImageSlider\n            key={gameSettings.version}\n            width={PRACTICE_IMAGE_SIZE.container.width}\n            height={PRACTICE_IMAGE_SIZE.container.height}\n            images={gameSettings.currentGameData.scrollingImages}\n            showBullets={imageState.displayMode !== \"trick\"}\n            showNavs={imageState.displayMode !== \"trick\"}\n            navStyle={2}\n            onStartSlide={(idx) => {\n              setCurrentIndex(idx - 1)\n            }}\n            style={{\n              borderBottomLeftRadius: !hideSideBar ? 15 : null,\n              borderTopLeftRadius: !hideSideBar ? 15 : null,\n              backgroundColor: null,\n              border: \"1px solid slategray\",\n            }}\n          />\n        </StyledPracticeGame>\n        {!hideSideBar ? (\n          <PracticeResults\n            resetGame={reset}\n            currentImageIndex={currentIndex}\n            demo={demo}\n          />\n        ) : null}\n      </StyledPractice>\n    </Centered>\n  ) : null\n}\n\nexport default TwentyQuestionsPractice\n","import { Centered, GameButton } from \"./Util\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport ReactTooltip from \"react-tooltip\"\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background-color: antiquewhite;\n  box-shadow: 0 0 4px gray;\n  text-align: center;\n  padding: 40px;\n`\n\nconst Title = styled.h1`\n  font-family: Futura;\n  font-size: 4rem;\n`\n\nconst GameCards = styled.div`\n  display: inline;\n`\n\nconst GameCardContainer = styled.div`\n  display: inline-block;\n  border: 1px solid gray;\n  background-color: lightslategray;\n  color: white;\n  text-shadow: 2px 2px 2px darkslategray;\n  border-radius: 15px;\n  padding: 10px;\n  /* width: 180px; */\n  margin-right: 10px;\n  box-shadow: 1px 1px 4px grey;\n`\n\nconst GameCardTitle = styled.div`\n  font-size: 1.6rem;\n  margin: 15px;\n`\n\nconst GameCardButton = styled(GameButton)`\n  margin-right: 10px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  margin-right: -10px;\n`\n\nconst GameCard = ({ title, links }) => {\n  return (\n    <GameCardContainer>\n      <GameCardTitle>{title}</GameCardTitle>\n      <ButtonContainer>\n        {links.map((x) => (\n          <Link key={x.to} to={x.to}>\n            <GameCardButton\n              {...{ \"data-tip\": x.disabled ? \"Coming soon\" : null }}\n            >\n              {x.title || \"Play\"}\n            </GameCardButton>\n          </Link>\n        ))}\n      </ButtonContainer>\n      <ReactTooltip effect=\"solid\" />\n    </GameCardContainer>\n  )\n}\n\nconst games = [\n  {\n    title: \"20 Questions\",\n    links: [\n      { title: \"Learn\", to: \"/20q/learn\" },\n      { title: \"Easy\", to: \"/20q/easy\" },\n      { title: \"Hard\", to: \"/20q/hard\" },\n    ],\n  },\n  {\n    title: \"Match Game\",\n    links: [\n      { title: \"Learn\", to: \"/match/learn\" },\n      { title: \"Easy\", to: \"/match/easy\" },\n      { title: \"Hard\", to: \"/match/hard\" },\n    ],\n  },\n]\n\nconst Stack = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst OrScroll = styled.div`\n  margin: 20px;\n  text-align: center;\n  &::after {\n    font-size: 1.4rem;\n    content: \"or scroll down to learn the story behind the games...\";\n  }\n`\n\nconst Menu = () => {\n  return (\n    <>\n      <Centered>\n        <Stack>\n          <Container>\n            <Title>Play A Game</Title>\n            <GameCards>\n              {games.map((x) => (\n                <GameCard key={x.title} {...x} />\n              ))}\n            </GameCards>\n            {/* <p title={`Running in ${process.env.NODE_ENV} mode`}>\n          COMPY has seen a lot of deer images before, and he is really good at\n          identifying a deer when he sees one.\n        </p>\n        <p>\n          Can you tell which of the following deer images COMPY may have seen?\n        </p>\n        <p>\n          Click Practice to scroll through the pictures one at a time and test\n          your knowledge about COMPY.\n        </p>\n        <p>\n          When you are ready, you can click Play to play a game of who knows\n          COMPY best.\n        </p>\n        */}\n          </Container>\n          <OrScroll />\n        </Stack>\n      </Centered>\n    </>\n  )\n}\n\nexport default Menu\n","import { useRef, useEffect } from \"react\"\n\n// https://blog.logrocket.com/how-to-get-previous-props-state-with-react-hooks/\nconst usePrevious = (value) => {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nexport default usePrevious\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Emoji } from \"./game/Util\"\n\n// Inspired by https://github.com/distillpub/post--communicating-with-interactive-articles/blob/master/src/diagrams/horse.svelte\n\nconst Container = styled.div`\n  border: 1px solid gray;\n  border-radius: 5px;\n  background-color: whitesmoke;\n`\nconst PictureAndInformation = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\nconst Picture = styled.img`\n  margin: 25px;\n  height: 250px;\n  width: auto;\n  border-radius: 5px;\n`\nconst Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 15px 15px 0;\n  /* padding: 15px; */\n`\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst Slides = styled.div`\n  text-align: center;\n  padding: 10px;\n  border-top: 1px solid gray;\n`\nconst Slide = styled.img`\n  height: 100px;\n  width: auto;\n  margin-right: 5px;\n  cursor: crosshair;\n  padding-bottom: 3px;\n  border-bottom: ${({ selected }) =>\n    selected ? \"5px solid midnightblue\" : \"5px solid rgba(0,0,0,0)\"};\n`\n\nconst Rotated = ({ rotation = 90, children, style }) => (\n  <div style={{ ...style, transform: `rotate(${rotation}deg)` }}>\n    {children}\n  </div>\n)\n\nconst RotatedText = (props) => (\n  <Rotated style={{ fontSize: props.size }} {...props}></Rotated>\n)\n\nconst StyledAnimateButton = styled.button`\n  border: 2px solid slategray;\n  border-radius: 50%;\n  outline: none;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ButtonSymbols = {\n  play: <Emoji symbol=\"0x25B6\" style={{ paddingLeft: 3 }} />,\n  pause: <RotatedText size={23}>=</RotatedText>,\n}\n\nconst AnimateButton = ({ status = \"stopped\", onClick }) => {\n  const stateSymbols = {\n    stopped: ButtonSymbols.play,\n    playing: ButtonSymbols.pause,\n  }\n  return (\n    <StyledAnimateButton onClick={onClick}>\n      {stateSymbols[status]}\n    </StyledAnimateButton>\n  )\n}\n\nconst ImageAnimation = ({ images, info, width, delay = 150 }) => {\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [animating, setAnimating] = useState(false)\n  React.useEffect(() => {\n    if (animating) {\n      const nextIndex =\n        selectedIndex < images.length - 1 ? selectedIndex + 1 : 0\n      setTimeout(() => setSelectedIndex(nextIndex), delay)\n    }\n  }, [animating, selectedIndex, setSelectedIndex, images, delay])\n\n  return (\n    <Container style={{ width }}>\n      <PictureAndInformation>\n        <Picture src={images[selectedIndex]} alt=\"\" />\n        <Information>\n          <div>{info}</div>\n          <Controls>\n            <AnimateButton\n              selectedIndex={selectedIndex}\n              status={animating ? \"playing\" : \"stopped\"}\n              onClick={() => setAnimating(!animating)}\n            />\n            <input\n              type=\"range\"\n              min={0}\n              max={images.length - 1}\n              step={1}\n              value={selectedIndex}\n              style={{ outline: \"none\" }}\n              onInput={(e) => setSelectedIndex(parseInt(e.target.value))}\n            />\n          </Controls>\n        </Information>\n      </PictureAndInformation>\n      <Slides>\n        {images.map((x, i) => (\n          <Slide\n            key={`slide-${i}`}\n            src={x}\n            onMouseOver={() => {\n              if (!animating) setSelectedIndex(i)\n            }}\n            selected={i === selectedIndex}\n          />\n        ))}\n      </Slides>\n    </Container>\n  )\n}\n\nexport default ImageAnimation\n","import styled from \"styled-components\"\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\"\nimport { ResponsiveWaffle } from \"@nivo/waffle\"\nimport { ResponsivePie } from \"@nivo/pie\"\nimport { isDef } from \"../../util/misc\"\nimport { RangeSlider } from \"../game/Util\"\n\nexport const ChartData = {\n  closestX: (x) => Math.round(x * 2) / 2,\n  dotPlot: (results, { groups }) => {\n    const filtered = (data, filterFn) =>\n      Object.keys(data)\n        .map((x) => data[x].map((y, i) => ({ x: x, y: i + 1, label: y })))\n        .flat()\n        .filter(filterFn)\n\n    const binned = results.reduce(\n      (all, x) => ({\n        ...all,\n        [x.errorRounded]: [...(all[x.errorRounded] || []), x.path],\n      }),\n      {}\n    )\n    return {\n      groups,\n      colors: groups.map((x) => x.color),\n      maxX: Object.keys(binned).length ? Math.max(...Object.keys(binned)) : 0,\n      data: groups.map((x) => ({\n        id: x.label,\n        data: filtered(binned, x.fn),\n      })),\n    }\n  },\n  rollup: (results, { title, groups }, threshold) => {\n    const starterBin = groups.reduce((all, x) => ({ ...all, [x.label]: 0 }), {})\n    const binned = results.reduce(\n      (binned, x) =>\n        (groups || []).reduce(\n          (all, g) =>\n            g.fn(x, threshold)\n              ? { ...all, [g.label]: (all[g.label] || 0) + 1 }\n              : { ...all },\n          binned\n        ),\n      starterBin\n    )\n    return {\n      groups,\n      title,\n      colors: groups.map((x) => x.color),\n      data: groups.map((g) => ({\n        id: g.label,\n        label: g.label,\n        value: binned[g.label],\n      })),\n      total: results.length,\n    }\n  },\n}\n\nconst Tooltip = styled.div`\n  background-color: white;\n  border-radius: 3px;\n  padding: 5px;\n  border: 1px solid gray;\n`\n\nconst ChartContainer = styled.div`\n  height: ${({ height = 150 }) => `${height}px`};\n  width: ${({ width = 150 }) => `${width}px`};\n  background-color: white;\n  border: 1px solid lightgray;\n  border-radius: 5px;\n  margin: 5px;\n`\n\nconst Thresholds = {\n  maxYValue: (data) =>\n    data && data.length\n      ? data.reduce((max, y) => Math.max(...y.data.map((d) => d.y), max), 0)\n      : 0,\n  yCount: (data, x) =>\n    data && data.length\n      ? data.reduce(\n          (count, set) =>\n            set.data.filter((item) => item.x.toString() === x.toString())\n              .length + count,\n          0\n        )\n      : 0,\n}\nconst Threshold = ({ data, threshold, xScale, yScale, nodeSize }) => {\n  const beyondYBuffer = 5\n  if (!isDef(data) || !isDef(threshold) || !isDef(nodeSize)) return null\n\n  const [x1, y1, x2, y2] = [\n    xScale(threshold),\n    yScale(-beyondYBuffer),\n    xScale(threshold),\n    yScale(Thresholds.maxYValue(data) + beyondYBuffer),\n  ]\n\n  const columnCount = Thresholds.yCount(data, threshold)\n  const linePadding = nodeSize / 2.0 + 1\n  return isNaN(x1) || isNaN(x2) || isNaN(y1) || isNaN(y2) ? null : (\n    <>\n      {columnCount ? (\n        <text x={x1} y={-10} textAnchor=\"middle\" style={{ fontSize: \".65rem\" }}>\n          {columnCount}\n        </text>\n      ) : null}\n      <polygon\n        points={`${x1 - linePadding},${y1} ${x1 - linePadding},${y2} ${\n          x2 + linePadding\n        },${y2} ${x2 + linePadding},${y1}`}\n        fill=\"rgba(0,0,0,.05)\"\n        stroke=\"rgba(20,20,20,1)\"\n        strokeWidth=\"1.5\"\n      />\n    </>\n  )\n}\n\nconst DotPlot = ({\n  model,\n  nodeSize = 13,\n  threshold,\n  maxX = \"auto\",\n  minX = \"auto\",\n  colorFn,\n  bottomLabel,\n}) => (\n  <ResponsiveScatterPlot\n    data={model.data}\n    margin={{ top: 20, bottom: 50, right: 20, left: 20 }}\n    xScale={{ type: \"linear\", min: minX, max: maxX }}\n    colors={colorFn || model.colors}\n    tooltip={(x) => <Tooltip>{x.node.data.label}</Tooltip>}\n    nodeSize={nodeSize}\n    axisBottom={{\n      orient: \"bottom\",\n      legend: bottomLabel,\n      legendPosition: \"middle\",\n      legendOffset: 35,\n    }}\n    axisLeft={false}\n    threshold={threshold}\n    layers={[\"axes\", \"nodes\", Threshold]}\n    legends={[\n      {\n        anchor: \"top-right\",\n        direction: \"column\",\n        translateX: 110,\n        translateY: 0,\n        itemWidth: 90,\n        itemHeight: 12,\n        itemsSpacing: 5,\n        symbolSize: nodeSize,\n        symbolShape: \"circle\",\n        effects: [\n          {\n            on: \"hover\",\n            style: {\n              itemTextColor: \"#000\",\n              itemBackground: \"#f7fafb\",\n            },\n          },\n        ],\n      },\n    ]}\n  />\n)\n\nconst StyledChartTitle = styled.div`\n  font-weight: bold;\n  font-size: 0.8rem;\n  text-align: center;\n  margin: 5px 0;\n`\nconst WaffleDot = ({\n  size,\n  x,\n  y,\n  color,\n  fill,\n  opacity,\n  borderWidth,\n  borderColor,\n  onHover,\n  onLeave,\n}) => (\n  <circle\n    r={size / 2}\n    cx={x + size / 2}\n    cy={y + size / 2}\n    fill={fill || color}\n    strokeWidth={borderWidth}\n    stroke={borderColor}\n    opacity={opacity}\n    onMouseEnter={onHover}\n    onMouseMove={onHover}\n    onMouseLeave={onLeave}\n  />\n)\nconst Waffle = ({ model }) => {\n  if (!model.total) return null\n  return (\n    <>\n      {model.title ? <StyledChartTitle>{model.title}</StyledChartTitle> : null}\n      <ResponsiveWaffle\n        data={model.data}\n        total={model.total}\n        rows={model.total / 10 + 1}\n        columns={10}\n        colors={model.colors}\n        margin={{ top: 0 }}\n        cellComponent={WaffleDot}\n        fillDirection=\"top\"\n        emptyColor=\"rgba(0,0,0,0)\"\n      />\n    </>\n  )\n}\n\nconst PieCenterTotal = ({ dataWithArc, centerX, centerY }) => {\n  const total = dataWithArc.reduce((all, x) => all + x.value, 0)\n  return (\n    <text\n      x={centerX}\n      y={centerY}\n      textAnchor=\"middle\"\n      dominantBaseline=\"central\"\n      style={{\n        fontSize: \"1.5rem\",\n      }}\n    >\n      {total}\n    </text>\n  )\n}\n\nconst Pie = ({ model, showTotal = true }) => {\n  return (\n    <>\n      {model.title ? <StyledChartTitle>{model.title}</StyledChartTitle> : null}\n      <ResponsivePie\n        data={model.data}\n        margin={{ top: 35, right: 120, bottom: 80, left: 120 }}\n        colors={model.colors}\n        innerRadius={0.6}\n        enableRadialLabels={false}\n        padAngle={0.5}\n        cornerRadius={2}\n        layers={[\n          \"slices\",\n          \"sliceLabels\",\n          \"radialLabels\",\n          \"legends\",\n          showTotal ? PieCenterTotal : null,\n        ]}\n        sliceLabel={(x) => (x.value ? x.value : null)}\n        sliceLabelsTextColor=\"white\"\n      />\n    </>\n  )\n}\n\nconst LegendPart = ({ color, text, colorPosition = \"left\" }) => {\n  const swatch = (\n    <div\n      style={{\n        width: 14,\n        height: 14,\n        borderRadius: \"50%\",\n        backgroundColor: color,\n        margin: \"0 5px\",\n      }}\n    />\n  )\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        textAlign: colorPosition,\n        justifyContent: colorPosition === \"left\" ? \"flex-start\" : \"flex-end\",\n        padding: \"1px 0\",\n      }}\n    >\n      {colorPosition === \"left\" ? swatch : null}\n      <span style={{ fontSize: \".6rem\" }}>{text}</span>\n      {colorPosition === \"right\" ? swatch : null}\n    </div>\n  )\n}\n\nconst Legend = ({ model }) => (\n  <div\n    style={{\n      display: \"grid\",\n      gridTemplateColumns: \"50% 50%\",\n    }}\n  >\n    <LegendPart colorPosition=\"right\" {...model.negativeBelowThreshold} />\n    <LegendPart {...model.positiveBelowThreshold} />\n    <LegendPart colorPosition=\"right\" {...model.negativeAboveThreshold} />\n    <LegendPart {...model.positiveAboveThreshold} />\n  </div>\n)\n\nconst FlexDiv = styled.div`\n  display: flex;\n`\nconst FlexColumns = styled(FlexDiv)`\n  flex-direction: column;\n`\nconst FlexRows = styled(FlexDiv)`\n  flex-direction: row;\n`\nconst ThresholdChartSet = ({\n  nodeSize = 10,\n  height = 300,\n  width = 600,\n  threshold,\n  models,\n  dotPlotMaxX,\n  bottomLabel,\n  sliderLabel,\n  setThreshold,\n  dotPlotColorFn,\n  legendModel,\n}) => {\n  const dotPlotWidth = width / 2\n  const smallChartHeight = height / 2 - 6\n  return (\n    <FlexDiv>\n      {dotPlotMaxX ? (\n        <FlexColumns>\n          <ChartContainer height={height} width={dotPlotWidth}>\n            <DotPlot\n              model={models.dotPlot}\n              nodeSize={nodeSize}\n              threshold={threshold}\n              minX={0}\n              maxX={dotPlotMaxX}\n              colorFn={dotPlotColorFn}\n              bottomLabel={bottomLabel}\n              legendModel={legendModel}\n            />\n          </ChartContainer>\n          <RangeSlider\n            label={sliderLabel}\n            labelPosition=\"bottom\"\n            min={0}\n            max={dotPlotMaxX}\n            step={0.5}\n            value={threshold}\n            style={{\n              outline: \"none\",\n              width: dotPlotWidth - 40,\n              marginLeft: 26,\n              marginTop: 4,\n            }}\n            handleStyle={{\n              padding: 3,\n              borderRadius: \"0 0 50% 50%\",\n            }}\n            onChange={(level) => setThreshold(level)}\n          />\n        </FlexColumns>\n      ) : null}\n      <FlexColumns>\n        <FlexRows>\n          <ChartContainer height={smallChartHeight}>\n            <Waffle model={models.correct} />\n          </ChartContainer>\n          <ChartContainer height={smallChartHeight}>\n            <Waffle model={models.incorrect} />\n          </ChartContainer>\n        </FlexRows>\n        <FlexRows>\n          <ChartContainer height={smallChartHeight}>\n            <Pie model={models.truePositive} />\n          </ChartContainer>\n          <ChartContainer height={smallChartHeight}>\n            <Pie model={models.positive} />\n          </ChartContainer>\n        </FlexRows>\n        <Legend model={legendModel} />\n      </FlexColumns>\n    </FlexDiv>\n  )\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n// Specific Experiment Config below\n////////////////////////////////////////////////////////////////////////////////////\n\n// const Colors = {\n//   red: \"#FF4136\",\n//   blue: \"#0074D9\",\n//   lightgray: \"lightgray\",\n//   gray: \"gray\",\n// }\n\n// const LegendModel = {\n//   positiveAboveThreshold: { color: Colors.blue, text: \"IN - Above Threshold\" },\n//   positiveBelowThreshold: { color: Colors.gray, text: \"IN - Below Threshold\" },\n//   negativeAboveThreshold: { color: Colors.red, text: \"OUT - Above Threshold\" },\n//   negativeBelowThreshold: {\n//     color: Colors.lightgray,\n//     text: \"OUT - Below Threshold\",\n//   },\n// }\n\n// const ChartModels = {\n//   dotPlot: {\n//     groups: [\n//       {\n//         label: \"In Distances\",\n//         fn: (x) => x.label.includes(\"_train_\"),\n//         color: Colors.blue,\n//       },\n//       {\n//         label: \"Out Distances\",\n//         fn: (x) => x.label.includes(\"_out_\"),\n//         color: Colors.red,\n//       },\n//     ],\n//   },\n//   correct: {\n//     title: \"Correct\",\n//     groups: [\n//       {\n//         label: \"Incorrect\",\n//         fn: (x, t) => x.errorRounded < t && x.path.includes(\"_out_\"),\n//         color: Colors.lightgray,\n//       },\n//       {\n//         label: \"Correct\",\n//         fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n//         color: Colors.blue,\n//       },\n//     ],\n//   },\n//   incorrect: {\n//     title: \"Incorrect\",\n//     groups: [\n//       {\n//         label: \"Incorrect\",\n//         fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_out_\"),\n//         color: Colors.red,\n//       },\n//       {\n//         label: \"Correct\",\n//         fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n//         color: Colors.gray,\n//       },\n//     ],\n//   },\n//   truePositive: {\n//     title: \"True Positive Rate\",\n//     groups: [\n//       {\n//         label: \"In\",\n//         fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n//         color: Colors.blue,\n//       },\n//       {\n//         label: \"In Below Threshold\",\n//         fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n//         color: Colors.gray,\n//       },\n//     ],\n//   },\n//   positive: {\n//     title: \"Positive Rate\",\n//     groups: [\n//       {\n//         label: \"In\",\n//         fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n//         color: Colors.blue,\n//       },\n//       {\n//         label: \"In Below Threshold\",\n//         fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n//         color: Colors.gray,\n//       },\n//       {\n//         label: \"Out\",\n//         fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_out_\"),\n//         color: Colors.red,\n//       },\n//       {\n//         label: \"Out Below Threshold\",\n//         fn: (x, t) => x.errorRounded < t && x.path.includes(\"_out_\"),\n//         color: Colors.lightgray,\n//       },\n//     ],\n//   },\n// }\n// const ExperimentThresholdChartSet = ({\n//   nodeSize = 10,\n//   defaultThreshold = 4.5,\n//   height = 300,\n//   width = 600,\n//   thresholdPercent,\n//   bottomLabel,\n//   sliderLabel,\n// }) => {\n//   const [rawData, setRawData] = useState([])\n//   const [models, setModels] = useState({\n//     dotPlot: { data: [] },\n//     correct: { data: [], total: 0 },\n//     incorrect: { data: [], total: 0 },\n//     truePositive: { data: [], total: 0 },\n//     positive: { data: [], total: 0 },\n//   })\n//   const [dotPlotMaxX, setDotPlotMaxX] = useState(0)\n//   const [threshold, setThreshold] = useState(defaultThreshold)\n\n//   useEffect(() => {\n//     const getRawData = async () => {\n//       const result = await fetch(\"./data/dot-plot-results.json\")\n//       const data = await result.json()\n//       setRawData(\n//         data.results.map((x) => ({ ...x, errorRounded: closestX(x.error) }))\n//       )\n//     }\n\n//     getRawData()\n//   }, [])\n\n//   useEffect(() => {\n//     const _dotPlotData = ChartData.dotPlot(rawData, ChartModels.dotPlot)\n//     setModels({\n//       dotPlot: _dotPlotData,\n//       correct: ChartData.rollup(rawData, ChartModels.correct, defaultThreshold),\n//       incorrect: ChartData.rollup(\n//         rawData,\n//         ChartModels.incorrect,\n//         defaultThreshold\n//       ),\n//       truePositive: ChartData.rollup(\n//         rawData,\n//         ChartModels.truePositive,\n//         defaultThreshold\n//       ),\n//       positive: ChartData.rollup(\n//         rawData,\n//         ChartModels.positive,\n//         defaultThreshold\n//       ),\n//     })\n\n//     setThreshold(defaultThreshold)\n//     if (_dotPlotData.maxX) setDotPlotMaxX(_dotPlotData.maxX + 1)\n//   }, [rawData, defaultThreshold])\n\n//   useEffect(() => {\n//     let _threshold = threshold\n//     if (thresholdPercent) {\n//       _threshold = closestX(dotPlotMaxX * thresholdPercent)\n//       setThreshold(_threshold)\n//     }\n//     setModels({\n//       ...models,\n//       correct: ChartData.rollup(rawData, ChartModels.correct, _threshold),\n//       incorrect: ChartData.rollup(rawData, ChartModels.incorrect, _threshold),\n//       truePositive: ChartData.rollup(\n//         rawData,\n//         ChartModels.truePositive,\n//         _threshold\n//       ),\n//       positive: ChartData.rollup(rawData, ChartModels.positive, _threshold),\n//     }) // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [threshold, thresholdPercent])\n//   return (\n//     <ThresholdChartSet\n//       nodeSize={nodeSize}\n//       height={height}\n//       width={width}\n//       threshold={threshold}\n//       models={models}\n//       legendModel={LegendModel}\n//       dotPlotMaxX={dotPlotMaxX}\n//       bottomLabel={bottomLabel}\n//       sliderLabel={sliderLabel}\n//       setThreshold={setThreshold}\n//       dotPlotColorFn={(x) =>\n//         x.x < threshold\n//           ? x.label.includes(\"out\")\n//             ? \"lightgray\"\n//             : \"gray\"\n//           : x.label && x.label.includes(\"out\")\n//           ? Colors.red\n//           : Colors.blue\n//       }\n//     />\n//   )\n// }\n\nexport default ThresholdChartSet\n","import { useEffect, useState } from \"react\"\nimport ThresholdChartSet, { ChartData } from \"./ThresholdChartSet\"\n\nconst Colors = {\n  red: \"#FF4136\",\n  blue: \"#0074D9\",\n  lightgray: \"lightgray\",\n  gray: \"gray\",\n}\n\nconst LegendModel = {\n  positiveAboveThreshold: { color: Colors.blue, text: \"IN - Above Threshold\" },\n  positiveBelowThreshold: { color: Colors.gray, text: \"IN - Below Threshold\" },\n  negativeAboveThreshold: { color: Colors.red, text: \"OUT - Above Threshold\" },\n  negativeBelowThreshold: {\n    color: Colors.lightgray,\n    text: \"OUT - Below Threshold\",\n  },\n}\n\nconst ChartModels = {\n  dotPlot: {\n    groups: [\n      {\n        label: \"In Distances\",\n        fn: (x) => x.label.includes(\"_train_\"),\n        color: Colors.blue,\n      },\n      {\n        label: \"Out Distances\",\n        fn: (x) => x.label.includes(\"_out_\"),\n        color: Colors.red,\n      },\n    ],\n  },\n  correct: {\n    title: \"Correct\",\n    groups: [\n      {\n        label: \"Incorrect\",\n        fn: (x, t) => x.errorRounded < t && x.path.includes(\"_out_\"),\n        color: Colors.lightgray,\n      },\n      {\n        label: \"Correct\",\n        fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n        color: Colors.blue,\n      },\n    ],\n  },\n  incorrect: {\n    title: \"Incorrect\",\n    groups: [\n      {\n        label: \"Incorrect\",\n        fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_out_\"),\n        color: Colors.red,\n      },\n      {\n        label: \"Correct\",\n        fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n        color: Colors.gray,\n      },\n    ],\n  },\n  truePositive: {\n    title: \"True Positive Rate\",\n    groups: [\n      {\n        label: \"In\",\n        fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n        color: Colors.blue,\n      },\n      {\n        label: \"In Below Threshold\",\n        fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n        color: Colors.gray,\n      },\n    ],\n  },\n  positive: {\n    title: \"Positive Rate\",\n    groups: [\n      {\n        label: \"In\",\n        fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_train_\"),\n        color: Colors.blue,\n      },\n      {\n        label: \"In Below Threshold\",\n        fn: (x, t) => x.errorRounded < t && x.path.includes(\"_train_\"),\n        color: Colors.gray,\n      },\n      {\n        label: \"Out\",\n        fn: (x, t) => x.errorRounded >= t && x.path.includes(\"_out_\"),\n        color: Colors.red,\n      },\n      {\n        label: \"Out Below Threshold\",\n        fn: (x, t) => x.errorRounded < t && x.path.includes(\"_out_\"),\n        color: Colors.lightgray,\n      },\n    ],\n  },\n}\nconst ExperimentThresholdChartSet = ({\n  nodeSize = 10,\n  defaultThreshold = 4.5,\n  height = 300,\n  width = 600,\n  thresholdPercent,\n  bottomLabel,\n  sliderLabel,\n}) => {\n  const [rawData, setRawData] = useState([])\n  const [models, setModels] = useState({\n    dotPlot: { data: [] },\n    correct: { data: [], total: 0 },\n    incorrect: { data: [], total: 0 },\n    truePositive: { data: [], total: 0 },\n    positive: { data: [], total: 0 },\n  })\n  const [dotPlotMaxX, setDotPlotMaxX] = useState(0)\n  const [threshold, setThreshold] = useState(defaultThreshold)\n\n  useEffect(() => {\n    const getRawData = async () => {\n      const result = await fetch(\"./data/dot-plot-results.json\")\n      const data = await result.json()\n      setRawData(\n        data.results.map((x) => ({\n          ...x,\n          errorRounded: ChartData.closestX(x.error),\n        }))\n      )\n    }\n\n    getRawData()\n  }, [])\n\n  useEffect(() => {\n    const _dotPlotData = ChartData.dotPlot(rawData, ChartModels.dotPlot)\n    setModels({\n      dotPlot: _dotPlotData,\n      correct: ChartData.rollup(rawData, ChartModels.correct, defaultThreshold),\n      incorrect: ChartData.rollup(\n        rawData,\n        ChartModels.incorrect,\n        defaultThreshold\n      ),\n      truePositive: ChartData.rollup(\n        rawData,\n        ChartModels.truePositive,\n        defaultThreshold\n      ),\n      positive: ChartData.rollup(\n        rawData,\n        ChartModels.positive,\n        defaultThreshold\n      ),\n    })\n\n    setThreshold(defaultThreshold)\n    if (_dotPlotData.maxX) setDotPlotMaxX(_dotPlotData.maxX + 1)\n  }, [rawData, defaultThreshold])\n\n  useEffect(() => {\n    let _threshold = threshold\n    if (thresholdPercent) {\n      _threshold = ChartData.closestX(dotPlotMaxX * thresholdPercent)\n      setThreshold(_threshold)\n    }\n    setModels({\n      ...models,\n      correct: ChartData.rollup(rawData, ChartModels.correct, _threshold),\n      incorrect: ChartData.rollup(rawData, ChartModels.incorrect, _threshold),\n      truePositive: ChartData.rollup(\n        rawData,\n        ChartModels.truePositive,\n        _threshold\n      ),\n      positive: ChartData.rollup(rawData, ChartModels.positive, _threshold),\n    }) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [threshold, thresholdPercent])\n  return (\n    <ThresholdChartSet\n      nodeSize={nodeSize}\n      height={height}\n      width={width}\n      threshold={threshold}\n      models={models}\n      legendModel={LegendModel}\n      dotPlotMaxX={dotPlotMaxX}\n      bottomLabel={bottomLabel}\n      sliderLabel={sliderLabel}\n      setThreshold={setThreshold}\n      dotPlotColorFn={(x) =>\n        x.x < threshold\n          ? x.label.includes(\"out\")\n            ? \"lightgray\"\n            : \"gray\"\n          : x.label && x.label.includes(\"out\")\n          ? Colors.red\n          : Colors.blue\n      }\n    />\n  )\n}\n\nexport default ExperimentThresholdChartSet\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Centered, RangeSlider } from \"./game/Util\"\nimport { gameData } from \"../util/data\"\n\nconst toNoiseImage = (image, index) => ({\n  index,\n  src: `img/${image.path}`,\n  label: image.label,\n})\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: whitesmoke;\n  padding: 10px 10px 0 10px;\n  border: 1px solid gray;\n  border-radius: 5px;\n`\n\nconst StyledImageTile = styled.div`\n  position: relative;\n  display: inline-block;\n  height: ${({ size = {} }) => size.height || \"180px\"};\n  width: ${({ size = {} }) => size.width || \"180px\"};\n  margin: 2px;\n`\n\nconst StyledImageTileImage = styled.img`\n  height: 100%;\n  width: 100%;\n  border-radius: ${({ rounded }) => (rounded ? \"5px\" : \"none\")};\n`\n\nconst StyledImageLabel = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 5px;\n  font-size: 75%;\n  color: white;\n  background: rgba(0, 0, 0, 0.5);\n  border-top-left-radius: 3px;\n  border-bottom-right-radius: ${({ rounded }) => (rounded ? \"5px\" : \"none\")};\n`\n\nconst ImageTile = ({ image, size, rounded }) => (\n  <StyledImageTile size={size}>\n    <StyledImageLabel title={image.title} rounded={rounded}>\n      {image.label}\n    </StyledImageLabel>\n    <StyledImageTileImage src={image.src} alt=\"\" rounded={rounded} />\n  </StyledImageTile>\n)\n\nconst ImageTiles = ({ images, tileSize, rounded }) => (\n  <div>\n    {images.map((x, i) => (\n      <ImageTile\n        key={`image-tile-${x}-${i}`}\n        image={x}\n        size={tileSize}\n        rounded={rounded}\n      />\n    ))}\n  </div>\n)\n\nconst ImageNoise = ({ imageSetNumber = 3, rounded = true }) => {\n  const [rawImages, setRawImages] = useState([])\n  const [images, setImages] = useState([])\n  const [noiseLevel, setNoiseLevel] = useState(0)\n  const [noiseLevelRange, setNoiseLevelRange] = useState([0, 0])\n  useEffect(() => {\n    const getImageData = async () => {\n      const _gameData = await gameData()\n      const _rawImages = _gameData.practiceOptions[imageSetNumber]\n      setRawImages(_rawImages)\n      const noiseLevels = [\n        ...new Set(\n          _rawImages.reduce(\n            (all, x) => [\n              ...all,\n              ...Object.keys(x.variants || {})\n                .filter((x) => x.startsWith(\"noise\"))\n                .map((x) => parseInt(x.replace(\"noise\", \"\"))),\n            ],\n            []\n          )\n        ),\n      ]\n      setNoiseLevelRange([0, Math.max(...noiseLevels)])\n      setImages(_rawImages.map(toNoiseImage))\n    }\n\n    getImageData() // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (noiseLevel === 0) return\n    const noisyImages = rawImages.map(\n      (x, i) => toNoiseImage(x.variants[`noise${noiseLevel}`], i) // TODO What if there is no noise level for this image?\n    )\n    setImages(noisyImages) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noiseLevel])\n\n  const [sliderMin, sliderMax] = noiseLevelRange\n  return images && images.length ? (\n    <Centered>\n      <Container>\n        <ImageTiles\n          images={images}\n          tileSize={{ height: \"180px\", width: \"180px\" }}\n          rounded={rounded}\n        />\n        {sliderMax > 0 ? (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <RangeSlider\n              label=\"Add Noise\"\n              labelPosition=\"bottom\"\n              min={sliderMin}\n              max={sliderMax}\n              step={1}\n              value={noiseLevel}\n              style={{\n                outline: \"none\",\n                width: \"100%\",\n              }}\n              onChange={setNoiseLevel}\n            />\n          </div>\n        ) : null}\n      </Container>\n    </Centered>\n  ) : null\n}\n\nexport default ImageNoise\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { TagCloud } from \"react-tagcloud\"\n\nconst Model = [\n  { img: \"story-img/class-arch.png\", label: \"Arch\", tagSize: 25 },\n  { img: \"story-img/class-barn.png\", label: \"Barn\", tagSize: 35 },\n  { img: \"story-img/class-beach.png\", label: \"Beach\", tagSize: 25 },\n  { img: \"story-img/class-beetle.png\", label: \"Beetle\", tagSize: 35 },\n  { img: \"story-img/class-broom.png\", label: \"Broom\", tagSize: 25 },\n  { img: \"story-img/class-candle.png\", label: \"Candle\", tagSize: 35 },\n  { img: \"story-img/class-lamp.png\", label: \"Lamp\", tagSize: 25 },\n  { img: \"story-img/class-phone.png\", label: \"Phone\", tagSize: 35 },\n  { img: \"story-img/class-pool-table.png\", label: \"Pool Table\", tagSize: 25 },\n  { img: \"story-img/class-ship.png\", label: \"Ship\", tagSize: 35 },\n  { img: \"story-img/class-skunk.png\", label: \"Skunk\", tagSize: 35 },\n  { img: \"story-img/class-toaster.png\", label: \"Toaster\", tagSize: 25 },\n]\n\nconst data = Model.map((x, i) => ({ value: x.label, count: x.tagSize }))\n\nconst StyledImg = styled.img`\n  border-radius: 5px;\n  margin: 0 2px 0 2px;\n  display: inline-block;\n`\n\nconst Image = ({\n  details: { img, label },\n  imageWidth,\n  onSelect = () => null,\n}) => {\n  return (\n    <StyledImg\n      onMouseOver={() => onSelect(label)}\n      onMouseOut={() => onSelect()}\n      src={img}\n      alt={label}\n      style={{ width: imageWidth, height: \"auto\" }}\n    />\n  )\n}\n\nconst Images = ({ images, width = 640, imageWidth = 130, onSelect }) => {\n  return (\n    <div style={{ width }}>\n      {images.map((x) => (\n        <Image\n          key={`card-${x.label}`}\n          details={x}\n          imageWidth={imageWidth}\n          onSelect={onSelect}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst Tag = styled.div`\n  display: inline-block;\n  margin: 3px 10px;\n  padding: 0 4px;\n  border: 3px solid ${({ color }) => color};\n  border-radius: 3px;\n  font-size: ${({ size }) => size}pt;\n  transition: border 0.2s linear;\n`\n\nconst customRenderer = (tag, size, color) => {\n  return (\n    <Tag key={tag.value} size={size} color={color}>\n      {tag.value}\n    </Tag>\n  )\n}\nconst ImageClasses = ({ model = Model }) => {\n  const [selected, setSelected] = useState()\n  const [images, setImages] = useState([])\n\n  useEffect(() => {\n    setImages(model) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Images\n        images={images}\n        onSelect={(label) => {\n          setSelected(label)\n        }}\n      />\n      <div style={{ display: \"flex\", alignContent: \"center\" }}>\n        <TagCloud\n          style={{ width: 400, textAlign: \"center\" }}\n          tags={data}\n          minSize={25}\n          maxSize={35}\n          renderer={(tag, size) => {\n            return customRenderer(\n              tag,\n              tag.count,\n              tag.value === selected ? \"orange\" : \"rgba(0,0,0,0)\"\n            )\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ImageClasses\n","import { useState, useEffect, useRef, useCallback } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport { Connection, cleanupLeaderLines } from \"../../util/misc\"\nimport { Emoji } from \"../game/Util\"\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`\n\nconst Input = styled.div`\n  height: 100px;\n  width: 100px;\n  background-color: gray;\n  margin: 10px;\n  margin-left: 35px;\n  font-size: 1.2rem;\n  &::before {\n    content: \"x\\\\208${({ index }) => index}\";\n    position: relative;\n    left: -65%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n  }\n`\n\nconst Inputs = ({ count, images }) => {\n  const inputs = new Array(count).fill(0)\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {inputs.map((_, i) => (\n        <Input\n          key={`input-${i + 1}`}\n          index={i + 1}\n          id={`input-${i + 1}`}\n          style={{\n            backgroundImage: images[i] ? `url(story-img/${images[i]})` : null,\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst StyledOutputDiagram = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  animation: ${fadeIn} 0.1s linear;\n`\n\n// const WeaknessArrow = ({ start, end }) => {\n//   return (\n//     <line\n//       x1={start[0]}\n//       y1={start[1]}\n//       x2={end[0]}\n//       y2={end[1]}\n//       stroke=\"#000\"\n//       stroke-width=\"1\"\n//       marker-end=\"url(#arrowhead)\"\n//     />\n//   )\n// }\n\n// const WeaknessDiagram = () => {\n//   const sizes = {\n//     circle: 9,\n//   }\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 350 100\">\n//       <defs>\n//         <marker\n//           id=\"arrowhead\"\n//           markerWidth=\"4\"\n//           markerHeight=\"4\"\n//           refX=\"0\"\n//           refY=\"2\"\n//           orient=\"auto\"\n//         >\n//           <polygon points=\"0 0, 4 2, 0 4\" />\n//         </marker>\n//       </defs>\n//       <circle cx=\"10\" cy=\"10\" r={sizes.circle} fill=\"rgb(157,157,144)\" />\n//       <circle cx=\"10\" cy=\"30\" r={sizes.circle} fill=\"rgb(157,157,144)\" />\n//       <circle cx=\"10\" cy=\"50\" r={sizes.circle} fill=\"rgb(157,157,144)\" />\n//       <circle cx=\"10\" cy=\"70\" r={sizes.circle} fill=\"rgb(157,157,144)\" />\n//       <circle cx=\"10\" cy=\"90\" r={sizes.circle} fill=\"rgb(157,157,144)\" />\n\n//       <circle cx=\"40\" cy=\"30\" r={sizes.circle} fill=\"rgb(158,170,190)\" />\n//       <circle cx=\"40\" cy=\"50\" r={sizes.circle} fill=\"rgb(158,170,190)\" />\n//       <circle cx=\"40\" cy=\"70\" r={sizes.circle} fill=\"rgb(158,170,190)\" />\n\n//       <circle cx=\"70\" cy=\"40\" r={sizes.circle} fill=\"rgb(240,161,112)\" />\n//       <circle cx=\"70\" cy=\"60\" r={sizes.circle} fill=\"rgb(240,161,112)\" />\n\n//       <circle cx=\"100\" cy=\"10\" r={sizes.circle} fill=\"rgb(176,0,4)\" />\n//       <circle cx=\"100\" cy=\"26\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"100\" cy=\"30\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"100\" cy=\"34\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"100\" cy=\"50\" r={sizes.circle} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"100\" cy=\"70\" r={sizes.circle} fill=\"rgb(255,226,129)\" />\n//       <circle cx=\"100\" cy=\"90\" r={sizes.circle} fill=\"rgb(130,201,63)\" />\n\n//       <circle cx=\"135\" cy=\"10\" r={sizes.circle} fill=\"rgb(222,93,97)\" />\n//       <circle cx=\"135\" cy=\"26\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"135\" cy=\"30\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"135\" cy=\"34\" r={1} fill=\"rgb(0,0,0)\" />\n//       <circle cx=\"135\" cy=\"50\" r={sizes.circle} fill=\"rgb(129,134,133)\" />\n//       <circle cx=\"135\" cy=\"90\" r={sizes.circle} fill=\"rgb(186,227,146)\" />\n//       <WeaknessArrow start={[18.5, 10]} end={[29, 26.5]} />\n//       <WeaknessArrow start={[18.5, 10]} end={[30, 45]} />\n\n//       <WeaknessArrow start={[18.5, 30]} end={[29, 26.5]} />\n//       <WeaknessArrow start={[18.5, 30]} end={[30, 45]} />\n//       <WeaknessArrow start={[18.5, 30]} end={[30, 45]} />\n//     </svg>\n//   )\n// }\n\nconst OutputDiagram = ({ width = \"100%\", height = \"100%\", index }) => {\n  const boxStyle = (heightOffset) => ({\n    height: 10 + (heightOffset || 0),\n    rx: 1,\n    y: 40 - (heightOffset || 0),\n  })\n  const ellipseStyle = {\n    stroke: \"rgb(63,108,175)\",\n    strokeWidth: 4,\n    fill: \"none\",\n  }\n  return (\n    <StyledOutputDiagram\n      style={{ width, height, position: \"absolute\" }}\n      id={`output-${index}`}\n    >\n      {/* <svg viewBox={`0 0 ${width} ${height}`}> */}\n      <svg viewBox={`0 0 100 85`}>\n        <rect fill=\"rgb(176,0,4)\" style={boxStyle()} x={2} width={15} />\n        <rect fill=\"#eee\" style={boxStyle()} x={20} width={22} />\n        <rect fill=\"black\" x={21} y={44} height={2} width={2} />\n        <rect fill=\"black\" x={25} y={44} height={2} width={2} />\n        <rect fill=\"black\" x={29} y={44} height={2} width={2} />\n        <rect\n          fill=\"black\"\n          style={boxStyle((index - 1) * 5)}\n          x={43}\n          width={15}\n        />\n        <rect fill=\"rgb(255,226,129)\" style={boxStyle()} x={61} width={19} />\n        <rect fill=\"rgb(130,201,63)\" style={boxStyle()} x={80} width={18} />\n        <ellipse cx=\"50\" cy=\"42\" rx=\"15\" ry=\"40\" style={ellipseStyle} />\n        <text x=\"50\" y=\"72\" textAnchor=\"middle\" style={{ font: \"14px arial\" }}>\n          ?\n        </text>\n      </svg>\n    </StyledOutputDiagram>\n  )\n}\n\nconst Output = styled.div`\n  position: relative;\n  height: 100px;\n  min-height: 100px;\n  margin-top: -25px;\n  padding: 0.25em;\n  width: 120px;\n  border: 3px solid #333;\n  background-color: white;\n  font-size: 1.3rem;\n  &::before {\n    /* content: \"\\\\1D453(x\\\\208${({ index }) => index})\"; */\n    position: relative;\n    left: -80%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n  }\n  &:nth-child(odd) {\n    left: 35px;\n  }\n  &:nth-child(even) {\n    left: 150px;\n    margin-left: 50px;\n  }\n`\n\nconst Outputs = ({ count }) => {\n  const inputs = new Array(count).fill(0)\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxHeight: 200,\n        paddingTop: 25,\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      {inputs.map((_, i) => (\n        <Output index={i + 1} key={`output-${i + 1}`}>\n          <OutputDiagram index={i + 1} />\n        </Output>\n      ))}\n    </div>\n  )\n}\n\nconst TargetModel = () => (\n  <img src=\"story-img/weakness.png\" alt=\"\" id=\"target-model\" />\n)\n\nconst lineColors = [\n  \"\",\n  \"black\",\n  \"rgb(130,120,66)\",\n  \"rgb(252,0,26)\",\n  \"rgb(58,105,173)\",\n]\n// Can't figure out how to send unicode to LeaderLine labels\nconst HACK_lineLabels = [\"\", \"𝑓(x₁)\", \"𝑓(x₂)\", \"𝑓(x₃)\", \"𝑓(x₄)\"]\n\nconst inputImages = [\n  null,\n  \"input-output-input-2.png\",\n  \"input-output-input-3.png\",\n  \"input-output-input-4.png\",\n]\n\nconst ActionButton = styled.button`\n  background-color: rgb(63, 108, 175);\n  color: white;\n  border: none;\n  padding: 8px;\n  border-radius: 5px;\n  font-size: 16pt;\n  outline: none;\n  vertical-align: top;\n  height: 42px;\n  /* ${({ disabled }) => (disabled ? \"pointer-events: none\" : null)}; */\n\n  &:disabled {\n    pointer-events: none;\n    color: gray;\n  }\n\n  &:hover {\n    text-shadow: 1px 1px 1px black;\n  }\n  /* height: 30px; */\n  &:nth-child(odd) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 2px solid gray;\n  }\n  &:nth-child(even) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`\n\nconst Buttons = ({ onClick, actionDisabled }) => {\n  return (\n    <div style={{ textAlign: \"center\", marginBottom: 15 }}>\n      <ActionButton onClick={() => onClick(1)} disabled={actionDisabled}>\n        <Emoji symbol=\"0x203A\" /> Step Inversion\n      </ActionButton>\n      <ActionButton onClick={() => onClick()} title=\"Reset\">\n        <Emoji symbol=\"0x21BB\" />\n      </ActionButton>\n    </div>\n  )\n}\n\nconst InputOutput = () => {\n  const [inputCount, setInputCount] = useState(0)\n  const lines = useRef([])\n\n  useEffect(() => {\n    setTimeout(() => setInputCount(1), 1000) // HACK, can't figure out how to wait on rendering lines\n  }, [])\n\n  const drawLines = useCallback(() => {\n    if (inputCount > 0) {\n      cleanupLeaderLines()\n\n      for (let i = 1; i <= inputCount; i++) {\n        const lineOptions = { color: lineColors[i], size: 2 }\n        Connection(`input-${i}`, \"target-model\", { options: lineOptions })\n        Connection(\n          {\n            id: \"target-model\",\n            x: 187,\n            y: 85,\n            height: 30,\n            width: 30,\n            shape: \"circle\",\n            color: \"rgb(63,108,175)\",\n            size: 4,\n          },\n          `output-${i}`,\n          {\n            options: {\n              ...lineOptions,\n              endLabel: HACK_lineLabels[i],\n            },\n          }\n        )\n      }\n    }\n  }, [inputCount])\n\n  useEffect(() => {\n    drawLines()\n    return cleanupLeaderLines\n  }, [drawLines])\n\n  const updateInputCount = (delta) =>\n    setInputCount((prev) => {\n      if (delta === null || delta === undefined) setInputCount(1)\n      else {\n        const updated = prev + delta\n        setInputCount(Math.min(Math.max(1, updated), 4))\n      }\n    })\n\n  return (\n    // <Centered>\n    <div style={{ marginBottom: 300 }}>\n      <Buttons onClick={updateInputCount} actionDisabled={inputCount === 4} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          minWidth: 900,\n          maxWidth: \"90%\",\n        }}\n        ref={lines}\n      >\n        <Inputs count={inputCount} images={inputImages} />\n        <TargetModel />\n        <Outputs count={inputCount} />\n      </div>\n      {/* <WeaknessDiagram /> */}\n      {/* <img src=\"story-img/SGD1.png\" id=\"sgd1\" alt=\"\" />\n      <img src=\"story-img/SGD2.png\" id=\"sgd2\" alt=\"\" />\n      <img src=\"story-img/SGD3.png\" id=\"sgd3\" alt=\"\" />\n      <img src=\"story-img/SGD4.png\" id=\"sgd4\" alt=\"\" /> */}\n    </div>\n    // </Centered>\n  )\n}\n\nexport default InputOutput\n","import { useState, useEffect, useRef } from \"react\"\nimport { Scrollama, Step } from \"react-scrollama\"\nimport { chain, clearLines, drawLine, cleanupLeaderLines } from \"../util/misc\"\n\nimport { usePrevious } from \"../hooks\"\nimport ImageDiff from \"react-image-diff\"\nimport ImageAnimation from \"./ImageAnimation\"\nimport styled from \"styled-components\"\nimport AnimEvent from \"anim-event\"\nimport ExperimentThresholdCharts from \"./chart/ExperimentThresholdCharts\"\nimport ImageNoise from \"./ImageNoise\"\nimport ImageClasses from \"./story/ImageClasses\"\nimport InputOutput from \"./story/InputOutput\"\nimport { Centered } from \"./game/Util\"\n\nconst ImageTitle = styled.h4`\n  text-align: center;\n  margin: 0 0 5px 0;\n`\n\nconst Scroller = styled.div`\n  flex-basis: 100%;\n`\n\nconst ScrollerContainer = styled.div`\n  padding: 40vh 2vw 70vh;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ScrollContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ScrollyHeaderSection = styled.h2``\nconst ScrollyContentSection = styled.div``\nconst ScrollyImageSectionContainer = styled.div`\n  margin-top: 20px;\n  position: sticky;\n  top: 10px;\n  height: 50%;\n`\n\nconst ScrollySectionWithBackgroundImage = ({\n  width = \"50%\",\n  minWidth = 700,\n  img,\n  title,\n  children,\n  status,\n  sizePercent = 60,\n  imageOpacity = 0.2,\n}) => {\n  const imageWidth =\n    status && status.progress\n      ? sizePercent + status.progress * (100 - sizePercent)\n      : sizePercent\n  return (\n    <Centered>\n      <div\n        style={{\n          width,\n          minWidth,\n          height: 400,\n          position: \"relative\",\n        }}\n      >\n        <img\n          src={`story-img/${img}`}\n          alt=\"\"\n          style={{\n            position: \"absolute\",\n            width: `${imageWidth}%`,\n            height: \"auto\",\n            opacity: imageOpacity,\n            top: \"50%\",\n            left: \"50%\",\n            transform: \" translate(-50%, -50%)\",\n          }}\n        />\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \" translate(-50%, -50%)\",\n          }}\n        >\n          <ScrollyHeaderSection>{title}</ScrollyHeaderSection>\n          <ScrollContainer>\n            <ScrollyContentSection style={{}}>{children}</ScrollyContentSection>\n          </ScrollContainer>\n        </div>\n      </div>\n    </Centered>\n  )\n}\n\nconst RowFlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: ${({ valign = \"center\" }) => valign};\n`\n\nconst FlowCharts = {\n  validate: (elements) => {\n    const issues = []\n    elements.forEach((x) => {\n      if (!x.id && !x.props.id)\n        issues.push(`FlowChart element [${x.type}] is missing id`)\n    })\n    return issues\n  },\n  hasPosition: (x) =>\n    x.style &&\n    (\"top\" in x.style ||\n      \"bottom\" in x.style ||\n      \"left\" in x.style ||\n      \"right\" in x.style),\n  hasPositionedElements: (elements) =>\n    elements.reduce((all, x) => all || FlowCharts.hasPosition(x), false),\n  hasUserDefinedLinks: (elements) =>\n    elements.reduce((all, x) => all || \"links\" in x, false),\n  buildLinks: (elements) => {\n    const userDefined = FlowCharts.hasUserDefinedLinks(elements)\n    if (userDefined) {\n      return elements\n        .map((x) =>\n          (Object.keys(x.links || {}) || []).map((l) => ({\n            from: x.id,\n            to: l,\n            config: x.links[l],\n          }))\n        )\n        .flat()\n    } else {\n      // Build links from element to element in order given\n      return elements.reduce((all, x, i) => {\n        if (i === elements.length - 1) return all\n        return [...all, { from: x.props.id, to: elements[i + 1].props.id }]\n      }, [])\n    }\n  },\n}\n\nconst FlowChartElementContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  & * {\n    display: block;\n  }\n`\n\nconst FlowChart = ({\n  name,\n  elements,\n  size,\n  style,\n  startAnimating,\n  visible,\n  chainLinkAnimation,\n  betweenLinkDelay = 0,\n}) => {\n  const prevAnimated = usePrevious(startAnimating)\n  const shouldAnimate = startAnimating && startAnimating !== prevAnimated\n  const flowRef = useRef()\n  const handleScroll = AnimEvent.add(() => {\n    if (!flowRef.current) return\n    Object.values(flowRef.current.lines || {}).forEach((line) =>\n      line.position()\n    )\n  })\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n      clearLines(flowRef)\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const issues = FlowCharts.validate(elements)\n  if (issues.length) {\n    console.error(issues.join(\"\\n\"))\n  }\n  const lineConfig = (override) => ({\n    options: {\n      path: \"straight\",\n      startSocket: \"auto\",\n      endSocket: \"auto\",\n      ...override,\n    },\n  })\n\n  const links = FlowCharts.buildLinks(elements)\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      if (chainLinkAnimation) {\n        const fns = links.map((x) =>\n          drawLine.bind(null, x.from, x.to, flowRef, lineConfig(x.config))\n        )\n        chain(fns, betweenLinkDelay)\n      } else {\n        links.forEach((x) =>\n          drawLine(x.from, x.to, flowRef, lineConfig(x.config))\n        )\n      }\n    } else if (!visible) {\n      clearLines(flowRef)\n    }\n  })\n\n  const containerStyle = FlowCharts.hasPositionedElements(elements)\n    ? { position: \"relative\", ...size }\n    : {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        flex: 1,\n      }\n\n  const elementStyle = (x) =>\n    FlowCharts.hasPosition(x) ? { position: \"absolute\", ...x.style } : null\n\n  return (\n    <RowFlexContainer ref={flowRef} style={style}>\n      <div style={containerStyle}>\n        {elements.map((x, i) => (\n          <FlowChartElementContainer\n            key={`${name}-${i}`}\n            id={x.id}\n            style={elementStyle(x)}\n          >\n            {x.element ? x.element : x}\n          </FlowChartElementContainer>\n        ))}\n      </div>\n    </RowFlexContainer>\n  )\n}\n\nconst WeaknessWithAI = ({ status }) => {\n  return (\n    <div style={stepOpacityStyle(status)}>\n      <ScrollySectionWithBackgroundImage\n        title=\"The Weakness with AI\"\n        img=\"weakness.png\"\n        width=\"50%\"\n        status={status}\n      >\n        <p>\n          The ability of deep neural network (DNN) machine learning (ML) models\n          to achieve human or above-human task performance is a result of the\n          availability of vast amounts of data. As organizations dedicate\n          expensive resources to data acquisition, processing, labeling and\n          storage and training of DNNs, the data must be treated as sensitive\n          proprietary information. These facts are often expressed as “data is\n          the new oil” and “data is the new source code,” respectively.\n        </p>\n        <p>\n          However, recent demonstrations have shown how DNN characteristics and\n          behaviors can be leveraged by malicious actors to make the DNN reveal,\n          learn, or do the wrong thing. To see how DNNs can be exploited, we\n          will first set the stage with an example of a successful machine\n          learning application within the field of computer vision.\n        </p>\n      </ScrollySectionWithBackgroundImage>\n    </div>\n  )\n}\n\nconst LabelTile = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 10px solid #0074d9;\n  font-size: 1.2em;\n  background-color: white;\n  padding: 30px;\n`\n\nconst PuppiesToFoodFlowChart = ({ status }) => (\n  <FlowChart\n    name=\"puppies-or-food-flow\"\n    elements={[\n      <img src=\"story-img/puppy.png\" id=\"puppies-or-food-1\" alt=\"\" />,\n      <img\n        src=\"story-img/weakness.png\"\n        id=\"puppies-or-food-2\"\n        alt=\"\"\n        style={{ height: \"60%\", width: \"60%\" }}\n      />,\n      <LabelTile id=\"puppies-or-food-3\">food</LabelTile>,\n    ]}\n    visible={status && status.visible}\n    startAnimating={status && status.visible}\n    chainLinkAnimation={true}\n    betweenLinkDelay={1000}\n  />\n)\n\nconst PuppiesVsCroissantsImages = (/*{ status }*/) => (\n  <RowFlexContainer valign=\"start\">\n    <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"swipe\"\n      value={0.5}\n      slider\n      // animation={\n      //   status && status.visible && status.progress > 0.5\n      //     ? { end: 0, step: -0.02 }\n      //     : null\n      // }\n      // animation\n    />\n    <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"fade\"\n      slider\n    />\n    {/* <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"difference\"\n    /> */}\n  </RowFlexContainer>\n)\n\nconst VerticalSpacer = ({ height }) => (\n  <div style={{ width: \"100%\", height: `${height}px` }}></div>\n)\n\nconst PuppiesOrFoodImage = ({ cover }) => {\n  const backgroundColor = \"rgba(0,0,0,.7)\"\n  const Covers = {\n    securityPrivacyConcerns: {\n      backgroundColor,\n      clipPath: \"polygon(0% 33%, 50% 33%, 50% 0%, 100% 0%, 100% 100%, 0% 100%)\",\n    },\n    hoverShape: {\n      backgroundColor,\n      clipPath: \"polygon(0% 33%, 100% 33%, 100% 100%, 0% 100%)\",\n    },\n    hoverTexture: {\n      backgroundColor,\n      clipPath:\n        \"polygon(0% 0%, 100% 0%, 100% 33%, 0% 33%, 0% 66%, 100% 66%, 100% 100%, 0% 100%)\",\n    },\n    hoverColor: {\n      backgroundColor,\n      clipPath: \"polygon(0% 66%, 0% 0%, 100% 0%, 100% 66%)\",\n    },\n  }\n  return (\n    <div style={{ width: \"100%\" }}>\n      <img\n        src={`story-img/puppies-or-food.png`}\n        style={{\n          height: \"auto\",\n          width: \"100%\",\n        }}\n        alt=\"\"\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          height: \"100%\",\n          transition: \"opacity 0.1s linear\",\n          opacity: cover ? 1 : 0,\n          ...(Covers[cover] || {}),\n        }}\n      />\n    </div>\n  )\n}\n\nconst stepOpacityStyle = (status) => {\n  const _default = { opacity: \"1\", transition: \"opacity 0.3s linear\" }\n  return status && status.visible ? _default : { ..._default, opacity: \"0.1\" }\n}\n\nconst StyledHoverLink = styled.button`\n  cursor: pointer;\n  background-color: gold;\n  color: #444;\n  border: none;\n  font-family: Futura;\n  font-weight: bold;\n  border-radius: 4px;\n  padding: 0 3px;\n  margin-left: 2px;\n  &:hover {\n    color: #000;\n  }\n`\n\nconst HoverLink = ({ children, onHover, offHover }) => (\n  <StyledHoverLink onMouseEnter={onHover} onMouseLeave={offHover}>\n    {children}\n  </StyledHoverLink>\n)\n\nconst PuppiesOrFoodHoverLink = ({ children, cover, setCover }) => (\n  <HoverLink onHover={() => setCover(cover)} offHover={() => setCover(\"\")}>\n    {children}\n  </HoverLink>\n)\n\nconst StepContainer = styled.div`\n  margin-bottom: 100px;\n`\n\nconst PuppiesOrFoodStepContainer = styled(StepContainer)`\n  opacity: ${({ currentView, viewName }) =>\n    currentView && currentView.data === viewName ? \"1\" : \"0.3\"};\n  padding-bottom: 400px;\n  margin-bottom: 100px;\n`\n\nconst PuppiesOrFood = ({ status }) => {\n  const [currentView, setCurrentView] = useState()\n  const [cover, setCover] = useState()\n  useEffect(() => {\n    setCover(\n      currentView && currentView.data === \"4\" ? \"securityPrivacyConcerns\" : \"\"\n    )\n  }, [currentView])\n  return (\n    <div style={stepOpacityStyle(status)}>\n      <ScrollyHeaderSection>Puppies or Food?</ScrollyHeaderSection>\n      <ScrollContainer>\n        <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n          <Scrollama\n            onStepEnter={setCurrentView}\n            onStepExit={() => setCurrentView(null)}\n            offset={0.4}\n          >\n            <Step data=\"1\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"1\"\n                currentView={currentView}\n              >\n                <h4>Classification: Still a Tough Problem </h4>\n                <p>\n                  Undoubtedly, one of the most successful applications of\n                  artificial intelligence involves classification within\n                  computer vision. In computer vision, the DNN task is to take a\n                  new image and categorize it into one of several known classes\n                  that it has been trained on. On the right, there are a number\n                  of images, some of which are puppies, and some of which are\n                  food. Modern day machine learning models can typically perform\n                  this classification task so well that it is easy to forget\n                  that this is not a solved problem.\n                </p>\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"2\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"2\"\n                currentView={currentView}\n              >\n                <p>\n                  These specific images were collated by Karen Zack, with the\n                  Twitter handle of “@teenybiscuit.” It is interesting that you\n                  may not be able to classify each image with the same level of\n                  ease or confidence. This is true for DNNs as well, epsecially\n                  with images with feautures they have not seen before. If you\n                  take these images and pass them through modern deep neural\n                  networks to see how they perform, don’t be surprised to learn\n                  that some of them may also get confused.\n                </p>\n                <PuppiesToFoodFlowChart status={status} />\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"3\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"3\"\n                currentView={currentView}\n              >\n                <h4> Interpretability: Tough to Explain What is Learned </h4>\n                <p>\n                  These images indicate that DNNs may learn how to identify\n                  objects in ways similar to human vision, for instance,\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverShape\"\n                    setCover={setCover}\n                  >\n                    shape\n                  </PuppiesOrFoodHoverLink>\n                  ,\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverTexture\"\n                    setCover={setCover}\n                  >\n                    texture\n                  </PuppiesOrFoodHoverLink>\n                  , or\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverColor\"\n                    setCover={setCover}\n                  >\n                    color\n                  </PuppiesOrFoodHoverLink>\n                  . However, within the field there is not a common\n                  understanding of what these models are learning.\n                </p>\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"4\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"4\"\n                currentView={currentView}\n              >\n                <h4> Security & Privacy Concerns </h4>\n                <p>\n                  Beyond their inherent fun and quality of fooling modern day\n                  models, there are a few other lessons that these images\n                  highlight. First, you should be aware that for any model,\n                  similar examples can always be found – ones that make a model\n                  do the wrong thing despite our attempts to make them extremely\n                  accurate. This means that it is likely that our application\n                  can be intentionally circumvented by those using it, with\n                  possibly unexpected things occurring.\n                  <b> This presents a security vulnerability. </b>\n                </p>\n                <p>\n                  We can try to avoid this vulnerability while also increasing\n                  the accuracy by training with examples such as these two:\n                </p>\n                <PuppiesVsCroissantsImages status={status} />\n                <p>\n                  While learning, the model must extract more information about\n                  these two images in order to correctly differentiate between\n                  them. Often, the model learns characteristics of these\n                  specific images, storing what we would consider sensitive\n                  information. When this occurs, the model may exhibit different\n                  output behavior for those images. This indicates that the DNN\n                  is leaking information about specific images, revealing the\n                  wrong thing.\n                  <b> Ths presents a privacy vulnerability. </b>\n                </p>\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"5\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"5\"\n                currentView={currentView}\n              >\n                <h4>ML is inherently fragile with unstable behavior</h4>\n                <p>\n                  All of these observations point out a key characteristic of\n                  modern day deep neural networks – they are inherently fragile\n                  and will exhibit unstable behavior. This cannot be avoided and\n                  must be considered when building and deploying applications.\n                </p>\n                {/* <VerticalSpacer height={300} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n          </Scrollama>\n        </ScrollyContentSection>\n        <ScrollyImageSectionContainer\n          style={{\n            flexBasis: \"48%\",\n            position: \"sticky\",\n            marginTop: 10,\n          }}\n        >\n          <PuppiesOrFoodImage status={status} cover={cover} />\n        </ScrollyImageSectionContainer>\n      </ScrollContainer>\n    </div>\n  )\n}\n\nconst TitledElement = ({ title, children, bottom = false }) => (\n  <div\n    style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n  >\n    {title && !bottom ? <ImageTitle>{title}</ImageTitle> : null}\n    {children}\n    {title && bottom ? <ImageTitle>{title}</ImageTitle> : null}\n  </div>\n)\n\nconst MiaFlowChart = ({ status, style }) => (\n  <FlowChart\n    name=\"mia-layout\"\n    size={{ height: 325, width: 500 }}\n    style={style}\n    elements={[\n      {\n        id: \"mia-flow-horse\",\n        element: (\n          <TitledElement>\n            <img src=\"story-img/horse.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { top: 140 },\n        links: {\n          \"mia-flow-target-model\": {\n            startSocket: \"top\",\n            endSocket: \"left\",\n            size: 10,\n            color: \"midnightblue\",\n            endLabel: \"Classify\",\n            path: \"grid\",\n          },\n        },\n      },\n      {\n        id: \"mia-flow-target-model\",\n        element: (\n          <TitledElement title=\"Target Model\">\n            <img src=\"story-img/target-model.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { left: 150, top: 10 },\n        links: {\n          \"mia-flow-bar-chart\": {\n            path: \"straight\",\n            color: \"black\",\n          },\n        },\n      },\n      {\n        id: \"mia-flow-bar-chart\",\n        element: (\n          <TitledElement title=\"Yes or No?\" bottom>\n            <img src=\"story-img/bar-chart.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { right: 0, top: 1 },\n      },\n      {\n        id: \"mia-flow-compliance-officer\",\n        element: (\n          <TitledElement title=\"Compliance Officer\" bottom>\n            <img src=\"story-img/compliance-officer.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { left: 150, bottom: 0 },\n        links: {\n          \"mia-flow-horse\": {\n            startSocket: \"left\",\n            endSocket: \"bottom\",\n            size: 10,\n            color: \"midnightblue\",\n            path: \"grid\",\n          },\n          \"mia-flow-bar-chart\": {\n            startSocket: \"right\",\n            endSocket: \"bottom\",\n            size: 10,\n            color: \"midnightblue\",\n            path: \"grid\",\n          },\n        },\n      },\n    ]}\n    visible={status && status.visible}\n    startAnimating={status && status.visible}\n  />\n)\n\nconst MembershipInferenceAttack = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>\n      Membership Inference Attack (MIA)\n    </ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <div style={{ margin: 20, position: \"sticky\", top: 10 }}>\n          <MiaFlowChart status={status} />\n        </div>\n      </ScrollyContentSection>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <p>\n          In the membership inference attack, we want to answer the question of\n          whether a specific piece of data was in the training data set for the\n          machine learning model. Here, one does not necessarily need to have\n          access to the original data set, though we have the ability to query\n          the model with input data and obtain the outputs.\n        </p>\n        <p>\n          There are several operational scenarios in which we need to answer\n          this question. First, we may have a deployed model that has been\n          supporting an application for some time. If the data point was used to\n          train that model, it could make the model noncompliant and we would\n          have to terminate its use. Furthermore, any actions previously taken\n          or data previously collected based upon the model could also be\n          noncompliant. Right now, legal precedence says to throw out the model\n          and any evidence that may have been collected with it.\n        </p>\n        <p>\n          Second, you may have a trained a model using a small amount of data\n          that was collected with NTM and as such, it has a higher\n          classification given its relationship to TTP, sources and methods.\n          Given that you do not own the data, it is feasible that others will\n          have access to the data as well. For example, 2nd and 3rd party\n          partners where this model will be deployed into. If that sensitive\n          data can be readily identified from the model output, it puts NTM at\n          risk.\n        </p>\n      </ScrollyContentSection>\n    </ScrollContainer>\n  </div>\n)\n\nconst ModelInversionAttack = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>Model Inversion Attack</ScrollyHeaderSection>\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <img src=\"story-img/Shallow.png\" id=\"shallow\" alt=\"\" />\n      <div style={{ margin: \"0 50px\" }}>\n        There is no consensus in the machine learning community about what data\n        features DNNs learn while training, which makes it tough to interpret\n        them. However, the work Zeiler and Fergus in the field of visual\n        interpretations of DNNs is a useful starting point. Their method\n        “transposes” DNNs to find which image patches are responsible for\n        certain neural activations. With the associated results, they argued the\n        shallow layers identify rough features such as edges and colors in the\n        training data set and the deeper layers combine these features into\n        higher level shapes and object abstractions.\n      </div>\n      <img src=\"story-img/Deep.png\" id=\"deep\" alt=\"\" />\n    </div>\n    <VerticalSpacer height={300} />\n    <p>\n      Here are some class prototypes from the Zeieler and Fergus paper. These\n      images are not real and would never be found in any data set that was\n      generated via imagery collection. However, can you understand what the DNN\n      is looking for in each output class?\n    </p>\n    <ImageClasses />\n    {/* <img src=\"story-img/ClassPrototypes.png\" id=\"class prototypes\" alt=\"\" /> */}\n    <VerticalSpacer height={300} />\n    <p>\n      In the model inversion attack, the output nodes of a DNN are used to\n      reconstruct a prototype represenation of each class. The optimization\n      process used to accomplish this is very similar to the one used in the\n      training of the DNN and the technqiue used by Zeiler and Fergus. In the\n      case of image classification, a DNN is a function, f, that maps\n      high-dimensional input image features of height H, width W, and D\n      channels, to a probability vector with dimensions, d, matching the number\n      of possible categories. Model inversion seeks to find an image such that\n      the output probability for that class is maximized, while the other\n      possible outputs are minimized.\n    </p>\n    <p>\n      Stochastic gradient ascent can be used with an associated cost function to\n      iteratively transform a proposed image to the local maxima of the\n      differentiable function, f. This is very similar to how weight updates\n      occur in neural network training, where the inputs and outputs are\n      constant. In this case, the weights and output class are held constant and\n      the input is updated.\n    </p>\n    <p>\n      These class prototypes are images represent the extracted features that\n      allow the network to best differentiate amongst the classes.\n    </p>\n    <InputOutput />\n    <p>\n      However, anyone can perform model inversion against any model. Below we\n      include an example of audio inversion. Can you hear what each class is\n      looking for?\n    </p>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"100%\" }}>\n        <ReverseEngineeringDataPrototypes width=\"60vw\" />\n      </ScrollyContentSection>\n    </ScrollContainer>\n  </div>\n)\n\nconst ReverseEngineeringDataPrototypes = (props) => (\n  <RowFlexContainer>\n    <ImageAnimation\n      images={[\n        \"story-img/match_game_cifar_robust_images_deer_threshold_1.png\",\n        \"story-img/match_game_cifar_robust_images_deer_threshold_16.png\",\n        \"story-img/match_game_cifar_robust_images_deer_threshold_32.png\",\n        \"story-img/match_game_cifar_robust_images_deer_threshold_64.png\",\n        \"story-img/match_game_cifar_robust_images_deer_threshold_128.png\",\n        \"story-img/match_game_cifar_robust_images_deer_threshold_256.png\",\n      ]}\n      info={\n        <>\n          <h3>Reverse Engineering Data Prototypes</h3>\n          <p style={{ fontSize: \".85rem\", color: \"lightslategray\" }}>\n            The model inversion attack seeks to reconstruct representations of\n            the training data in order to glean information about sensitive\n            data-collection tools, techniques and tradecraft. For computer\n            vision models, inversion can produce image representations for every\n            class label in the model. The interactive figure below demonstrates\n            real images formed during an inversion of the deer class. The\n            inversion process is an optimization problem similar to that used to\n            train the model in the first place. Here, the image inversion is\n            randomly initialized and a new image is saved at each stage. In the\n            early stages of inversion optimization, these images typically\n            remain gray and not visually interpretable and thus we refer to\n            these generated images \"gray data\". However, as the inversion\n            process continues, these images can have significant elements that\n            are human interpretable.\n          </p>\n        </>\n      }\n      {...props}\n    />\n  </RowFlexContainer>\n)\n\nconst TwentyQuestions = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>A game of 20 Questions...</ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"60%\" }}>\n        <div style={{ position: \"sticky\", top: 10 }}>\n          <p>\n            If DNNs did not leak any information about it's training set, there\n            would be no way to answer this question better than randomly\n            guessing 'yes' or 'no'.\n          </p>\n          <p>\n            Thus, perhaps the easiest strategy for an attacker is to predict\n            'no' everytime the model gets the class prediction wrong. This\n            strategy is based upon the notion that since the DNN is good at this\n            task, if it gets the prediction wrong, then most likely it has not\n            seen the image before.\n          </p>\n          <p>\n            This is problematic for models that are severely overfit, where\n            there is a large gap between the accuracy of training images and new\n            images. As such, this is known as the <b> 'Gap Attack' </b> and it\n            will have results better than random guessing by an amount related\n            to the size of the gap.\n          </p>\n          <p>\n            However, even for models that are not overfit and only output the\n            predicted label, there is a way to perform a successful membership\n            attack. By adding noise to the input, it is possible to trick the\n            model into a wrong classification. To see this, add noise to the\n            images on the right. One image was in the training data set and the\n            other was not. But by adding enough noise to the images, a\n            successful misclassification will occur. See if you can determine a\n            noise level that gives you strong confidence about whether the image\n            was used in the training or not. This is known as the{\" \"}\n            <b>'Label-Only Attack' </b> since it can be performed even when the\n            model's output is nothing more than the class label.\n          </p>\n        </div>\n      </ScrollyContentSection>\n      <ScrollyContentSection style={{ flexBasis: \"40%\" }}>\n        <ImageNoise />\n      </ScrollyContentSection>\n    </ScrollContainer>\n  </div>\n)\n\nconst DotMatrix = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>Label-Only Attack Threshold</ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"55%\" }}>\n        <ExperimentThresholdCharts\n          nodeSize={13}\n          defaultThreshold={4.5}\n          bottomLabel=\"Distance\"\n          sliderLabel=\"Threshold\"\n          // thresholdPercent={status && status.progress ? status.progress : null}\n        />\n      </ScrollyContentSection>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <div style={{ position: \"sticky\", top: 10 }}>\n          <VerticalSpacer height={75} />\n          <p>\n            For images that the model has been trained on, the amount of noise\n            needed to fool the model is typically higher. In other words, for\n            images not in the training, it is easier to obtain an incorrect\n            label. By using your own data, you can determine the noise level\n            that will give optimal attack results. This can be used in the\n            attack of other target models.\n          </p>\n        </div>\n      </ScrollyContentSection>\n    </ScrollContainer>\n  </div>\n)\n\nconst DebuggerTitle = styled.div`\n  width: 45px;\n  display: inline-block;\n  font-weight: bold;\n  margin-right: 15px;\n`\n\nconst Debugger = ({ viewState, hide }) => {\n  if (hide) return null\n  const progressPercent = (x) => (x ? (x * 100).toFixed() : 0)\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 50,\n        left: 50,\n        zIndex: 999999999999,\n        padding: 5,\n        border: \"1px solid black\",\n        backgroundColor: \"pink\",\n      }}\n    >\n      <div>\n        <DebuggerTitle>View:</DebuggerTitle>\n        {viewState.currentView || \"None\"}\n        <br />\n        <DebuggerTitle>Scroll:</DebuggerTitle>\n        {progressPercent(\n          (viewState[viewState.currentView] || { progress: \"\" }).progress\n        )}\n        %\n      </div>\n    </div>\n  )\n}\n\nconst Story = ({ debugScrolling = false }) => {\n  const [currentViewState, setCurrentViewState] = useState({})\n  const [viewState, setViewState] = useState({})\n  useEffect(() => () => cleanupLeaderLines(), [])\n\n  const onStepEnter = ({ data }) =>\n    setCurrentViewState({ view: data, visible: true })\n\n  const onStepExit = ({ data }) =>\n    setCurrentViewState({ view: data, visible: false })\n\n  const onStepProgress = ({ data, progress }) =>\n    setCurrentViewState({ view: data, visible: true, progress })\n\n  useEffect(\n    () =>\n      currentViewState.view\n        ? setViewState({\n            ...viewState,\n            [currentViewState.view]: {\n              ...viewState[currentViewState.view],\n              ...currentViewState,\n            },\n            currentView: currentViewState.view,\n          })\n        : null, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentViewState]\n  )\n\n  return (\n    <>\n      <ScrollerContainer>\n        <Scroller>\n          <Scrollama\n            onStepEnter={onStepEnter}\n            onStepExit={onStepExit}\n            progress\n            onStepProgress={onStepProgress}\n            offset={0.4}\n            debug={debugScrolling}\n          >\n            <Step data=\"weakness\">\n              <StepContainer>\n                <WeaknessWithAI status={viewState[\"weakness\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"puppies-or-food\">\n              <StepContainer>\n                <PuppiesOrFood status={viewState[\"puppies-or-food\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"mia\">\n              <StepContainer>\n                <MembershipInferenceAttack status={viewState[\"mia\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"20q\">\n              <StepContainer>\n                <TwentyQuestions status={viewState[\"20q\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"dot-matrix\">\n              <StepContainer>\n                <DotMatrix status={viewState[\"dot-matrix\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"model-inversion-attack\">\n              <StepContainer>\n                <ModelInversionAttack\n                  status={viewState[\"model-inversion-attack\"]}\n                />\n              </StepContainer>\n            </Step>\n          </Scrollama>\n        </Scroller>\n        <Debugger hide={!debugScrolling} viewState={viewState} />\n      </ScrollerContainer>\n    </>\n  )\n}\n\nexport default Story\n","import { GameContextProvider } from \"../context/GameContext\"\nimport { useState } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport { Fab, Action } from \"react-tiny-fab\"\nimport \"react-tiny-fab/dist/styles.css\"\nimport TwentyQuestions from \"../components/game/TwentyQuestions\"\nimport Match from \"../components/game/Match\"\nimport TwentyQuestionsPractice from \"../components/game/TwentyQuestionsPractice\"\nimport Menu from \"../components/game/Menu\"\nimport Story from \"../components/Story\"\nimport { Emoji } from \"../components/game/Util\"\nimport Modal from \"react-modal\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\n\nModal.setAppElement(\"#root\")\n\nconst PageHeader = ({ title, subtitle }) => {\n  const styles = {\n    container: {\n      marginBottom: 5,\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n    },\n    subtitle: {\n      fontSize: 14,\n      color: \"gray\",\n    },\n  }\n  return (\n    <div style={styles.container}>\n      <div style={styles.title}>{title}</div>\n      <span style={styles.subtitle}>{subtitle}</span>\n    </div>\n  )\n}\n\nconst GameModal = withRouter(({ history }) => {\n  const [isModalOpen, setModalOpen] = useState(false)\n  const toggleModal = () => setModalOpen(!isModalOpen)\n  const returnToMenu = () => history.push(\"/\")\n\n  return (\n    <>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n      >\n        <PageHeader\n          title=\"A game of 16 questions…beat Carnac!\"\n          subtitle=\"AI Jimmy is really good at identifying the object in images that he\n            has seen before. Select (check) which of the following images you\n            think Jimmy remembers. You will be playing against Carnac and who\n            ever gets more correct, wins!\"\n        />\n        <button\n          onClick={toggleModal}\n          style={{\n            position: \"absolute\",\n            top: 5,\n            right: 5,\n            border: 0,\n            background: \"none\",\n          }}\n        >\n          <CheckButton color=\"black\" isSelected={true} />\n        </button>\n      </Modal>\n      <Fab\n        alwaysShowTitle={true}\n        mainButtonStyles={{\n          backgroundColor: \"slategray\",\n        }}\n        icon=\". . .\"\n      >\n        <Action text=\"Back to Game Menu\" onClick={returnToMenu}>\n          <Emoji symbol=\"0x21A9\" />\n        </Action>\n      </Fab>\n    </>\n  )\n})\n\nconst GameView = () => {\n  return (\n    <GameContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/20q/learn\">\n            <TwentyQuestionsPractice />\n          </Route>\n          <Route path=\"/20q/easy\">\n            <TwentyQuestions gameMode=\"easy\" />\n          </Route>\n          <Route path=\"/20q/hard\">\n            <TwentyQuestions gameMode=\"hard\" />\n          </Route>\n          <Route path=\"/match/learn\">\n            <Match gameMode=\"learn\" />\n          </Route>\n          <Route path=\"/match/easy\">\n            <Match gameMode=\"easy\" />\n          </Route>\n          <Route path=\"/match/hard\">\n            <Match gameMode=\"hard\" />\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <Story />\n          </Route>\n        </Switch>\n        <GameModal />\n      </Router>\n    </GameContextProvider>\n  )\n}\n\nexport default GameView\n","import \"./App.css\"\n// import PickView from \"./views/PickView\"\nimport GameView from \"./views/GameView\"\n\nconst App = () => {\n  return (\n    <GameView />\n    // <PickView />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}