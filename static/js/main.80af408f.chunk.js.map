{"version":3,"sources":["context/GameContext.js","components/Scoreboard.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","GameContextProvider","props","useState","players","name","color","selections","score","images","gameSettings","setGameSettings","Provider","value","children","ScoreBoard","home","away","bottomDisplay","totalPossible","styles","container","marginTop","backgroundColor","display","flexDirection","fontFamily","minWidth","maxWidth","width","scoreboard","margin","border","borderRadius","sideContainer","side","flex","textAlign","team","padding","fontSize","borderBottom","fontWeight","scoreContainer","scoreDivider","bottom","borderTop","ScoreboardSide","player","style","scoreDisplay","percentageDisplay","borderLeft","Modal","setAppElement","IMAGES","0","guess","path","probability","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","CORRECT_ANSWERS","labelStyle","background","toDeerImage","index","img","size","tags","src","thumbnail","thumbnailWidth","thumbnailHeight","correct","includes","parseInt","customOverlay","toImage","_img","title","findYouPlayer","length","findCarnacPlayer","SelectionsOverlay","x","useContext","_carnac","_you","position","top","right","undefined","height","isSelected","Choices","useEffect","resetGame","onSelectImage","updated","you","hasOwnProperty","map","filter","className","showLightboxThumbnails","enableImageSelection","onClickThumbnail","enableLightbox","tagStyle","Object","keys","calculateScore","_selections","wrongAnswers","omittedAnswers","ChallengeCarnac","onClick","selectionCount","buttonClasses","disabled","Information","carnac","marginLeft","Results","wide","alignItems","justifyContent","_winner","PageHeader","subtitle","marginBottom","Game","isModalOpen","setModalOpen","toggleModal","flexGrow","isOpen","onRequestClose","contentLabel","alwaysShowTitle","mainButtonStyles","icon","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80af408f.chunk.js","sourcesContent":["import { useState, createContext } from \"react\"\n\nexport const GameContext = createContext()\n\nexport const GameContextProvider = (props) => {\n  const [gameSettings, setGameSettings] = useState({\n    players: [\n      { name: \"YOU\", color: \"green\", selections: [], score: null },\n      {\n        name: \"CARNAC\",\n        color: \"red\",\n        selections: [0, 1, 2, 5, 7, 11, 12, 13],\n        score: null,\n      },\n    ],\n    images: [],\n  })\n\n  return (\n    <GameContext.Provider value={[gameSettings, setGameSettings]}>\n      {props.children}\n    </GameContext.Provider>\n  )\n}\n","const ScoreBoard = ({\n  home,\n  away,\n  bottomDisplay = () => \"\",\n  totalPossible = 0,\n}) => {\n  const styles = {\n    container: {\n      marginTop: 2,\n      backgroundColor: \"#444\",\n      color: \"white\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      fontFamily: \"Helvetica Neue\",\n      minWidth: 500,\n      maxWidth: 500,\n      width: 500,\n    },\n    scoreboard: {\n      flexDirection: \"row\",\n      margin: 6,\n      border: \"5px solid white\",\n      borderRadius: 10,\n    },\n    sideContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    side: {\n      flex: 1,\n      textAlign: \"center\",\n    },\n    team: {\n      padding: 10,\n      textAlign: \"center\",\n      fontSize: 32,\n      borderBottom: \"5px solid white\",\n      margin: 0,\n      fontWeight: \"bold\",\n    },\n    scoreContainer: { padding: 10 },\n    score: { fontSize: 64, fontFamily: \"Impact, sans-serif\" },\n    scoreDivider: { fontSize: 64 },\n    bottom: {\n      fontSize: 18,\n      padding: 5,\n      borderTop: \"5px solid white\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n    },\n  }\n\n  const ScoreboardSide = ({ player, style = {} }) => {\n    const scoreDisplay =\n      totalPossible > 0 ? `${player.score} / ${totalPossible}` : player.score\n    const percentageDisplay =\n      totalPossible > 0 ? (\n        <div>({(player.score / totalPossible) * 100}%)</div>\n      ) : null\n    return (\n      <div style={{ ...style, ...styles.side }}>\n        <div style={{ ...styles.team, color: player.color }}>{player.name}</div>\n        <div style={styles.scoreContainer}>\n          <div style={styles.score}>{scoreDisplay}</div>\n          {percentageDisplay}\n        </div>\n      </div>\n    )\n  }\n\n  const bottom = bottomDisplay()\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.scoreboard}>\n        <div style={styles.sideContainer}>\n          <ScoreboardSide player={home} />\n          <ScoreboardSide\n            player={away}\n            style={{ borderLeft: \"3px solid white\" }}\n          />\n        </div>\n        {bottom ? <div style={styles.bottom}>{bottom}</div> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreBoard\n","import { GameContextProvider, GameContext } from \"../context/GameContext\"\nimport { useContext, useEffect, useState } from \"react\"\nimport Gallery from \"react-grid-gallery\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport { Fab, Action } from \"react-tiny-fab\"\nimport \"react-tiny-fab/dist/styles.css\"\nimport ScoreBoard from \"./Scoreboard\"\nimport Modal from \"react-modal\"\n\nModal.setAppElement(\"#root\")\n\nconst IMAGES = {\n  0: { guess: \"dog\", path: \"deer_14.png\", probability: 80 },\n  1: { guess: \"deer\", path: \"deer_23.png\", probability: 90 },\n  2: { guess: \"deer\", path: \"deer_27.png\", probability: 88 },\n  3: { guess: \"horse\", path: \"deer_24.png\", probability: 99 },\n  4: { guess: \"cat\", path: \"deer_36.png\", probability: 82 },\n  5: { guess: \"deer\", path: \"deer_29.png\", probability: 81 },\n  6: { guess: \"dog\", path: \"deer_39.png\", probability: 89 },\n  7: { guess: \"deer\", path: \"deer_30.png\", probability: 98 },\n  8: { guess: \"horse\", path: \"deer_45.png\", probability: 93 },\n  9: { guess: \"cat\", path: \"deer_48.png\", probability: 91 },\n  10: { guess: \"dog\", path: \"deer_11.png\", probability: 99 },\n  11: { guess: \"deer\", path: \"deer_2.png\", probability: 93 },\n  12: { guess: \"deer\", path: \"deer_4.png\", probability: 84 },\n  13: { guess: \"deer\", path: \"deer_7.png\", probability: 89 },\n  14: { guess: \"deer\", path: \"deer_12.png\", probability: 100 },\n  15: { guess: \"horse\", path: \"deer_13.png\", probability: 99 },\n}\n\nconst CORRECT_ANSWERS = [0, 1, 2, 5, 7, 11, 12, 13]\n// const CORRECT_ANSWERS = Object.keys(IMAGES)\n//   .filter((i) => IMAGES[i].guess === \"deer\")\n//   .map((i) => parseInt(i))\n\nconst labelStyle = {\n  padding: \"5px\",\n  fontFamily: \"Arial\",\n  fontSize: \"75%\",\n  color: \"white\",\n  background: \"rgba(0,0,0,0.5)\",\n}\n\nconst toImage = (path, size, index, tags = () => []) => {\n  const img = {\n    src: `img/${path}`,\n    thumbnail: `img/${path}`,\n    thumbnailWidth: size,\n    thumbnailHeight: size,\n    index,\n    correct: CORRECT_ANSWERS.includes(parseInt(index)),\n    customOverlay: <SelectionsOverlay index={index} />,\n  }\n  img.tags = tags(img) || []\n  return img\n}\nconst toDeerImage = (index) => {\n  const img = IMAGES[index]\n  return toImage(img.path, 32, index, (_img) => [\n    {\n      value: `${img.guess} (${img.probability}%)`,\n      // value: `${img.guess} (${img.probability}%) ${_img.correct ? \" YES\" : \"\"}`,\n      title: `AI Jimmy Says: ${img.guess}`,\n    },\n  ])\n}\n\nconst findYouPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[0]\n    : null\n\nconst findCarnacPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[1]\n    : null\n\nconst isDefined = (x) => x !== null && x !== undefined\n\nconst SelectionsOverlay = ({ index }) => {\n  const [gameSettings] = useContext(GameContext)\n  const _carnac = findCarnacPlayer(gameSettings)\n  const _you = findYouPlayer(gameSettings)\n  return (\n    <div\n      style={{\n        color: \"red\",\n        fontWeight: \"bold\",\n        textAlign: \"right\",\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        backgroundColor:\n          isDefined(_you.score) && !gameSettings.images[index].correct\n            ? \"rgba(75, 75, 75, 0.8)\"\n            : \"rgba(75, 75, 75, 0.0)\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      {_carnac.score && _carnac.selections.includes(parseInt(index)) ? (\n        <div style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <CheckButton color={_carnac.color} isSelected={true} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst Choices = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n\n  useEffect(() => {\n    setGameSettings(resetGame(gameSettings)) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onSelectImage = (index) => {\n    const updated = { ...gameSettings }\n    const you = findYouPlayer(updated)\n    if (you.score) return\n    var img = updated.images[index]\n    if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected\n    else img.isSelected = true\n    you.selections = updated.images\n      .map((x, index) => ({ ...x, index }))\n      .filter((x) => x.isSelected)\n      .map((x) => x.index)\n    setGameSettings(updated)\n  }\n\n  const you = findYouPlayer(gameSettings)\n  return (\n    <div className={!you.score ? \"\" : \"scored\"}>\n      <Gallery\n        showLightboxThumbnails={true}\n        images={gameSettings.images}\n        enableImageSelection={!you.score}\n        onSelectImage={onSelectImage}\n        onClickThumbnail={onSelectImage}\n        enableLightbox={false}\n        tagStyle={labelStyle}\n      />\n    </div>\n  )\n}\n\nconst resetGame = (gameSettings) => {\n  const updated = { ...gameSettings }\n  updated.images = Object.keys(IMAGES).map(toDeerImage)\n  const _carnac = findCarnacPlayer(updated)\n  const _you = findYouPlayer(updated)\n  _carnac.score = null\n  _you.score = null\n  _you.selections = []\n  return updated\n}\n\nconst calculateScore = (selections) => {\n  const _selections = selections || []\n  const wrongAnswers = _selections.filter((x) => !CORRECT_ANSWERS.includes(x))\n  const omittedAnswers = CORRECT_ANSWERS.filter((x) => !_selections.includes(x))\n\n  return (\n    Object.keys(IMAGES).length - wrongAnswers.length - omittedAnswers.length\n  )\n}\n\nconst ChallengeCarnac = ({ onClick }) => {\n  const [gameSettings] = useContext(GameContext)\n  const selectionCount = gameSettings.players[0].selections.length\n  const playGame = selectionCount > 0\n  const buttonClasses = playGame ? \"game\" : \"game disabled\"\n  return (\n    <>\n      <p>\n        AI Jimmy has seen a lot of deer images before, and he is really good at\n        identifying a deer when he sees one.\n      </p>\n      <p>\n        Can you tell which of the following deer images AI Jimmy may have seen?\n        There is at least one.\n      </p>\n      <p>Select them and then hit the \"Challenge Carnac\" button (below).</p>\n      <p>\n        You will be playing against Carnac and whomever gets more correct, wins!\n      </p>\n      <p style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n        {selectionCount > 0\n          ? `${selectionCount} picture(s) selected`\n          : \"1 or more selections required to play\"}\n      </p>\n      <button\n        style={{ width: \"100%\" }}\n        onClick={onClick}\n        disabled={selectionCount === 0}\n        className={buttonClasses}\n      >\n        Challenge Carnac!\n      </button>\n    </>\n  )\n}\n\nconst Information = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n\n  const loadScores = () => {\n    const updated = { ...gameSettings }\n    const _carnac = findCarnacPlayer(updated)\n    const _you = findYouPlayer(updated)\n    _carnac.score = calculateScore(_carnac.selections)\n    _you.score = calculateScore(_you.selections)\n    setGameSettings(updated)\n  }\n  return (\n    <div style={{ marginLeft: 10 }}>\n      {carnac.score ? <Results /> : <ChallengeCarnac onClick={loadScores} />}\n    </div>\n  )\n}\n\nconst Results = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n  const you = findYouPlayer(gameSettings)\n  const playAgain = () => setGameSettings(resetGame(gameSettings))\n  const styles = {\n    wide: {\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  }\n  const winner = () =>\n    you.score > carnac.score ? you : you.score < carnac.score ? carnac : null\n  const winnerMessage = () => {\n    const _winner = winner()\n    return _winner\n      ? `The winner is ${_winner.name}!`\n      : `${you.name} tied ${carnac.name}!`\n  }\n  return (\n    <div style={styles.wide}>\n      <ScoreBoard\n        home={you}\n        away={carnac}\n        bottomDisplay={winnerMessage}\n        totalPossible={16}\n      />\n      <button onClick={playAgain} style={styles.wide} className=\"game\">\n        Play Again!\n      </button>\n    </div>\n  )\n}\n\nconst PageHeader = ({ title, subtitle }) => {\n  const styles = {\n    container: {\n      marginBottom: 5,\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n    },\n    subtitle: {\n      fontSize: 14,\n      color: \"gray\",\n    },\n  }\n  return (\n    <div style={styles.container}>\n      <div style={styles.title}>{title}</div>\n      <span style={styles.subtitle}>{subtitle}</span>\n    </div>\n  )\n}\n\nconst Game = () => {\n  const [isModalOpen, setModalOpen] = useState(false)\n  const toggleModal = () => setModalOpen(!isModalOpen)\n  return (\n    <GameContextProvider>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ minWidth: 710, maxWidth: 710 }}>\n            <Choices />\n          </div>\n          <div style={{ flexGrow: 1 }}>\n            <Information />\n          </div>\n        </div>\n      </div>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n      >\n        <PageHeader\n          title=\"A game of 16 questions…beat Carnac!\"\n          subtitle=\"AI Jimmy is really good at identifying the object in images that he\n            has seen before. Select (check) which of the following images you\n            think Jimmy remembers. You will be playing against Carnac and who\n            ever gets more correct, wins!\"\n        />\n        <button\n          onClick={toggleModal}\n          style={{\n            position: \"absolute\",\n            top: 5,\n            right: 5,\n            border: 0,\n            background: \"none\",\n          }}\n        >\n          <CheckButton color=\"black\" isSelected={true} />\n        </button>\n      </Modal>\n      <Fab\n        alwaysShowTitle={true}\n        mainButtonStyles={{\n          backgroundColor: \"#00b5ad\",\n        }}\n        icon=\". . .\"\n      >\n        <Action text=\"Info\" onClick={toggleModal}>\n          i\n        </Action>\n      </Fab>\n    </GameContextProvider>\n  )\n}\n\nexport default Game\n","import \"./App.css\"\n// import Pick from \"./components/Pick\"\nimport Game from \"./components/Game\"\n// import { useEffect } from \"react\"\n// import Reveal from \"reveal.js\"\n// import \"reveal.js/dist/reveal.css\"\n// import \"reveal.js/dist/theme/solarized.css\"\n\nconst App = () => {\n  // useEffect(() => {\n  //   Reveal.initialize({\n  //     center: true,\n  //     history: true,\n  //     controls: false,\n  //     keyboard: false,\n  //   })\n  // }, [])\n  return (\n    <Game />\n    // <div className=\"reveal\">\n    //   <div className=\"slides\">\n    //     <Pick />\n    //   </div>\n    // </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}