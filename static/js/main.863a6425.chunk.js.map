{"version":3,"sources":["context/GameContext.js","components/game/Scoreboard.js","util/data.js","util/misc.js","components/game/InformationTooltip.js","components/game/Util.js","components/game/TwentyQuestions.js","components/game/Match.js","components/game/TwentyQuestionsPractice.js","components/game/Menu.js","components/chart/LabelOnlyDistanceChartSet.js","components/chart/ExperimentLabelOnlyCharts.js","components/ImageNoise.js","components/story/ImageClasses.js","components/story/TargetModel.js","components/ImageAnimation.js","components/story/InputOutput.js","components/story/ReverseEngineeringDataPrototypesDiagram.js","components/story/FlowChart.js","components/story/MiaFlowChart.js","components/Story.js","views/GameView.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","GameContextProvider","props","useState","players","name","color","selections","score","images","previousPracticeRounds","practiceRound","gameSettings","setGameSettings","Provider","value","children","styled","div","scoreDisplays","player","totalPossible","percentage","toFixed","sample","items","size","map","x","r","Math","random","sort","a","b","slice","length","sanitizeJson","obj","Object","keys","reduce","all","p","toLowerCase","cleanObject","filter","key","allGroups","data","Set","groups","practiceSet","groupNumber","includes","gameData","path","snippetId","fetchPath","fetch","allOptions","json","correctData","practiceOptions","gameOptions","matchData","match","easy","hard","isDefined","undefined","filterObject","predicate","k","clean","styleDiv","getDiv","style","forEach","isDef","shuffle","arr","reduceRight","res","_","__","s","push","splice","chain","console","log","bind","fns","duration","delay","t","Promise","resolve","setTimeout","StyledInstructions","Instructions","StyledInformationButton","button","InformationTooltip","triggerText","triggerStyle","id","Date","now","floor","getContent","effect","place","data-for","data-tip","CenteredOuter","CenteredInner","Centered","ToggleButtonCheckBoxWrapper","CheckButton","checked","backgroundColor","left","ToggleButton","trueLabel","falseLabel","trueBgColor","falseBgColor","onToggle","defaultValue","onClick","right","GameButton","Emoji","className","label","symbol","symbols","Array","isArray","role","aria-label","String","fromCodePoint","Sidecar","StyledRangeSlider","ControlLabel","position","RangeTrack","RangeHandle","RangeSlider","min","max","onChange","step","labelPosition","handleStyle","_label","values","_value","renderTrack","renderThumb","marginTop","height","StyledGameTitle","GameTitle","information","fadeIn","keyframes","StyledAnswerSvg","WrongAnswerX","width","strokeWidth","stroke","fill","rx","strokeLinecap","cornerPadding","viewBox","y","x1","y1","x2","y2","RightAnswerCheck","strokeLinejoin","checkPoints","cx","cy","points","join","SIZES","generateGameData","gameMode","gameDataModel","_gameData","i","correctAnswers","correct","parseInt","labelStyle","padding","fontSize","background","toDeerImage","img","index","image","tags","src","thumbnail","thumbnailWidth","thumbnailHeight","customOverlay","toImage","_img","title","findYouPlayer","StyledAnswersOverlay","AnswerOverlay","AnswersOverlay","useContext","_you","shouldShowAnswers","Choices","noise","settings","useEffect","resetGame","originalImages","noiseKey","variant","variants","hasVariant","onSelectImage","updated","you","hasOwnProperty","isSelected","enableImageSelection","onClickThumbnail","tagStyle","showLightboxThumbnails","enableLightbox","mode","original","updateFn","currentGameData","StyledControls","StyledControlEnd","Score","Controls","onSettingsUpdated","noiseLevel","setNoiseLevel","setScore","showRetryButton","setShowRetryButton","selectionCount","level","_selections","wrongAnswers","omittedAnswers","calculateScore","disabled","StyledGame","Game","GameInformation","TwentyQuestions","setSettings","marginBottom","_settings","DraggableImageBase","StyledDraggableImage","DraggableImage","correctTargets","onGuess","draggableId","useDrag","type","item","end","monitor","dropResult","getDropResult","guess","source","target","collect","isDragging","drag","opacity","alt","ref","DraggableContainer","ClearImageSelectionButton","DraggableTargetDrop","DraggableTarget","matches","onClearSelection","useDrop","accept","drop","canDrop","isOver","isActive","from","find","to","display","flexDirection","backgroundImage","marginLeft","SideContainer","MiddleSection","GameInfo","learn","matchCount","choiceCount","ScoreBoard","guesses","textAlign","incorrect","RetryButton","won","Options","onGameOver","onRetry","setWon","buttonText","setButtonText","document","getElementsByClassName","total","text","maxStrikes","toKey","MatchLayout","model","setDisabled","targets","useMemo","sources","setMatches","resetGuesses","useCallback","setGuesses","sourceId","prev","lastGuess","targetHasGuess","onClearGuess","getTime","start","animateDrawing","Match","retries","setRetries","setModel","allImages","setAllImages","resetModel","initialMatches","initialChoices","extraCount","flat","extraChoices","attempt","_matchData","getMatchData","DndProvider","backend","HTML5Backend","PRACTICE_IMAGE_SIZE","AI_NAME","COLORS","setCurrentIndex","demo","version","practiceRoundNumber","scrollingImages","url","allQuestionsAnswered","seenbefore","StyledPracticeResult","current","PracticeResultTitle","PracticeResult","question","agree","questionNumber","isCurrentImage","answer","waiting","StyledEndButtons","EndButtons","StylePracticeResults","PracticeResultsTitle","PracticeResultsSubtitle","h4","PracticeResults","currentImageIndex","ImageSliderOverrideStyles","currentIndex","Selectors","imageSize","imagePercent","paddingLeft","paddingTop","dangerouslySetInnerHTML","__html","property","colors","border","_bulletStyle","StyledQuestionWithButtons","StyledQuestionWithButtonsButton","QuestionText","QuestionWithButtons","onAnswer","StyledTuningSideTile","TuningSideTile","StyledProbability","Probability","previousLabel","percent","PictureLabel","changed","margin","animate","reveal","hideLabel","totalValue","lineWidth","dataEntry","StyledTuningsOuter","StyledTuningSelect","TuningSelect","selectStyles","container","provided","indicatorSeparator","option","whiteSpace","content","icon","menu","singleValue","styles","isSearchable","Tunings","getImageDiv","onLoadImageVariant","defaultStyle","setStyles","selectedVariant","setSelectedVariant","changeImage","transition","variantLabel","updateImage","additionalStyles","toggle","probability","augmentVariants","startsWith","optionDecorations","hflip","vflip","replace","noop","decorate","object","decoration","options","fn","defaults","decorationKey","noiseLevelVariants","noiseLevels","Caption","StyledSwitchMode","SwitchModeButton","selected","SwitchMode","onSwitchMode","labels","trick","toModes","toMode","StyledPracticeVoteButtons","ImageControls","displayMode","setDisplayMode","loadedImage","setLoadedImage","defaultLoadedImageState","onSeenBeforeClick","guessed","caption","StyledPractice","StyledPracticeGame","TwentyQuestionsPractice","hideSideBar","imageState","setImageState","reset","sliderRef","useRef","querySelectorAll","showBullets","showNavs","navStyle","onStartSlide","idx","borderBottomLeftRadius","borderTopLeftRadius","Container","Title","h1","GameCards","GameCardContainer","GameCardTitle","GameCardButton","ButtonContainer","GameCard","links","games","Stack","OrScroll","Menu","ChartData","results","starter","g","range","threshold","totalFn","result","ChartContainer","reducePropWithFn","propKey","cumulative","v","d","Thresholds","maxXValue","maxYValue","minXValue","minYValue","pointsAtThreshold","series","Threshold","dataRange","xScale","yScale","columnWidth","columnX1","columnY1","columnX2","columnY2","minXEdge","maxXEdge","linePadding","columnPolyPoints","leftAreaPolyPoints","rightAreaPolyPoints","polyPoints","leftOfSliderLabel","rightOfSliderLabel","outsideAreaColor","rightLabelX","leftLabelX","isNaN","textAnchor","Fragment","dominantBaseline","Lines","top","bottom","datum","enablePoints","enableSlices","axisLeft","tickValues","legend","legendOffset","legendPosition","layers","StyledChartTitle","WaffleDot","borderWidth","borderColor","onHover","onLeave","onMouseEnter","onMouseMove","onMouseLeave","Waffle","rows","sqrt","columns","cellComponent","fillDirection","emptyColor","PieCenter","dataWithArc","centerX","centerY","PieCenterPercent","Pie","showTotal","innerRadius","enableRadialLabels","padAngle","sliceLabel","sliceLabelsTextColor","QuadChart","LegendPart","swatch","borderRadius","colorPosition","justifyContent","Legend","gridTemplateColumns","FlexDiv","FlexColumns","FlexRows","ChartSet","models","sliderStep","sliderLabel","setThreshold","legendModel","mainChartWidth","smallChartHeight","main","outline","quad1","quad2","quad3","quad4","Colors","LegendModel","correctRate","test_results","target_test_fgs_incorrect","train_results","target_train_fgs_correct","ChartModels","target_train_fgs_acc","target_test_fgs_acc","target_train_fgs_incorrect","target_test_fgs_correct","ExperimentLabelOnlyDisanceChartSet","nodeSize","defaultNoise","bottomLabel","rawData","setRawData","setModels","setNoise","zeroResult","target_train_acc","target_train_correct","target_train_incorrect","target_test_acc","target_test_correct","target_test_incorrect","getRawData","LabelOnlyDistanceChartSet","toNoiseImage","StyledImageTile","StyledImageTileImage","rounded","StyledImageLabel","ImageTile","ImageTiles","tileSize","ImageNoise","imageSetNumber","rawImages","setRawImages","setImages","noiseLevelRange","setNoiseLevelRange","_rawImages","getImageData","noisyImages","sliderMin","sliderMax","Model","tagSize","count","StyledImg","Image","details","imageWidth","onSelect","hovered","setHovered","onMouseOver","onMouseOut","boxShadow","Images","Tag","ImageClasses","setSelected","alignItems","alignContent","minSize","maxSize","renderer","tag","customRenderer","Models","PuppiesToFood","yValues","arrows","MIA","defaultCircleProps","circleProps","column","override","rowIndex","Column","clickables","defaultProps","clickable","circleIsClickable","cursor","TargetModelArrow","col","_model","lineY","yValue","lineEndX","markerEnd","TargetModelDiagram","additionalShapes","clickableCircles","onClickCircle","xmlns","markerWidth","markerHeight","refX","refY","orient","c","PictureAndInformation","Picture","Information","Slides","Slide","Rotated","rotation","transform","RotatedText","StyledAnimateButton","ButtonSymbols","play","pause","AnimateButton","status","stateSymbols","stopped","playing","StyledAnimateSlider","ImageAnimation","imageAlt","info","onChangeImage","ImageWrapper","selectedIndex","setSelectedIndex","animating","setAnimating","selectIndex","nextIndex","onInput","e","StyledOutputDiagram","Columns","0","middlex","1","2","3","OutputDiagramColumn","heightOffset","OutputDiagram","selectedColumn","columnHeight","colIndex","ry","font","Output","lineProps","StyledImageWrapper","LineLabel","CircleArrowSourcePositions","bottomness","default","InputOutput","onColumnIndexChanged","circleArrowSource","setCircleArrowSource","setSelectedColumn","circleArrowSourceProps","minWidth","TargetModel","split","_y","marginRight","startAnchor","offset","rightness","imageNumbers","imageSets","_class","Component","selectedClass","setSelectedClass","selectedImage","setSelectedImage","RowFlexContainer","valign","defaultLinkConfig","head","FlowCharts","validate","elements","issues","hasPosition","hasPositionedElements","hasUserDefinedLinks","buildLinks","l","config","StyledFlowChartElement","FlowChart","startAnimating","visible","chainLinkAnimation","betweenLinkDelay","shouldAnimate","setLinks","error","linkId","containerStyle","flex","elementStyle","element","startSocket","endAnchor","endSocket","headSize","ImageTitle","TitledElement","bordered","MiaFlowChart","endLabel","ScrollerContainer","Scroller","ScrollContainer","ScrollyHeaderSection","h2","ScrollyContentSection","ScrollyStickySection","ScrollySectionWithBackgroundImage","sizePercent","imageOpacity","progress","WeaknessWithAI","stepOpacityStyle","LabelTile","PuppiesToFoodFlowChart","PuppiesVsCroissantsImages","before","after","slider","VerticalSpacer","PuppiesOrFoodImage","cover","Covers","securityPrivacyConcerns","clipPath","hoverShape","hoverTexture","hoverColor","_default","StyledHoverLink","HoverLink","offHover","PuppiesOrFoodHoverLink","setCover","StepContainer","PuppiesOrFoodStepContainer","currentView","viewName","PuppiesOrFood","setCurrentView","flexBasis","onStepEnter","onStepExit","MembershipInferenceAttack","ModelInversionAttack","ReverseEngineeringDataPrototypes","ReverseEngineeringDataPrototypesDiagram","LabelOnlyAttackThreshold","ExperimentLabelOnlyCharts","DebuggerTitle","Debugger","viewState","hide","zIndex","Story","debugScrolling","currentViewState","setCurrentViewState","setViewState","view","onStepProgress","debug","Modal","setAppElement","PageHeader","subtitle","fontWeight","GameModal","withRouter","history","isModalOpen","setModalOpen","toggleModal","isOpen","onRequestClose","contentLabel","alwaysShowTitle","mainButtonStyles","window","location","hash","scrollTo","behavior","GameView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,IACxB,CAAEF,KAAM,CAAC,EAAG,GAAIE,GAAI,CAAC,EAAG,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","file":"static/js/main.863a6425.chunk.js","sourcesContent":["import { useState, createContext } from \"react\"\n\nexport const GameContext = createContext()\n\nexport const GameContextProvider = (props) => {\n  const [gameSettings, setGameSettings] = useState({\n    players: [\n      { name: \"YOU\", color: \"green\", selections: [], score: null },\n      {\n        name: \"CARNAC\",\n        color: \"red\",\n        selections: [],\n        score: null,\n      },\n    ],\n    images: [],\n    previousPracticeRounds: [],\n    practiceRound: {},\n  })\n\n  return (\n    <GameContext.Provider value={[gameSettings, setGameSettings]}>\n      {props.children}\n    </GameContext.Provider>\n  )\n}\n","import styled from \"styled-components\"\n\nconst Container = styled.div`\n  margin-top: 2px;\n  background-color: #444;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-family: Futura;\n  min-width: 400px;\n  max-width: 400px;\n  width: 400px;\n`\n\nconst Board = styled.div`\n  margin: 6px;\n  border: 5px solid white;\n  border-radius: 10px;\n  flex-direction: row;\n`\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst Side = styled.div`\n  flex: 1;\n  text-align: center;\n`\nconst Team = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 24pt;\n  border-bottom: 5px solid white;\n  margin: 0;\n  font-weight: bold;\n`\nconst ScoreContainer = styled.div`\n  padding: 10px;\n`\nconst Score = styled.div`\n  font-size: 48pt;\n  font-family: Impact, sans-serif;\n`\nconst Bottom = styled.div`\n  font-size: 18;\n  padding: 5px;\n  border-top: 5px solid white;\n  font-weight: bold;\n  text-align: center;\n`\n\nexport const scoreDisplays = (player, totalPossible) =>\n  player.score\n    ? {\n        score:\n          totalPossible > 0 ? `${player.score}/${totalPossible}` : player.score,\n        percentage:\n          totalPossible > 0\n            ? ((player.score / totalPossible) * 100).toFixed()\n            : null,\n      }\n    : null\n\nconst ScoreBoard = ({\n  home,\n  away,\n  bottomDisplay = () => \"\",\n  totalPossible = 0,\n}) => {\n  const ScoreboardSide = ({ player, style = {} }) => {\n    const displays = scoreDisplays(player, totalPossible)\n    return (\n      <Side style={style}>\n        <Team style={{ color: player.color }}>{player.name}</Team>\n        <ScoreContainer>\n          <Score>{displays.score}</Score>\n          {displays.percentage}\n        </ScoreContainer>\n      </Side>\n    )\n  }\n\n  const bottom = bottomDisplay()\n\n  return (\n    <Container>\n      <Board>\n        <SideContainer>\n          <ScoreboardSide player={home} />\n          <ScoreboardSide\n            player={away}\n            style={{ borderLeft: \"3px solid white\" }}\n          />\n        </SideContainer>\n        {bottom ? <Bottom>{bottom}</Bottom> : null}\n      </Board>\n    </Container>\n  )\n}\n\nexport default ScoreBoard\n","const colors = [\"0,0,255\", \"255,0,0\", \"0,255,0\", \"255,0,255\"]\n\nconst defaultDataSet = {\n  borderWidth: 1,\n}\n\nconst dataSet = (index) => {\n  const color = colors[index]\n  const backgroundColor = `rgba(${color},0.4)`\n  const borderColor = `rgba(${color},0.7)`\n  return {\n    ...defaultDataSet,\n    backgroundColor,\n    borderColor,\n  }\n}\n\nconst selectionData = (data) =>\n  Object.keys(data.MI_class_results || {}).reduce(\n    (all, x) => ({ ...all, [x]: data.MI_class_results[x].mi_auc }),\n    {}\n  )\n\nexport const configurationKeys = (configurations) =>\n  Object.keys(configurations).filter(\n    (x) => typeof configurations[x] === \"object\"\n  )\n\nconst fetchConfigurationData = async (configuration) => {\n  const key = (x) => `${x.flavor}_${x.dataset}_${x.architecture}_${x.train}`\n  const filepath = (name) => `./data/${name}.json`\n  const filekey = key(configuration)\n  let results\n  try {\n    const response = await fetch(filepath(filekey))\n    results = await response.json()\n  } catch (e) {\n    console.log(`No data file available for configuration ${filekey}`)\n    const response = await fetch(filepath(\"missing_data\"))\n    results = await response.json()\n  }\n  return [filekey, results]\n}\n\nexport const configurationData = async (configuration) => {\n  const [key, json] = await fetchConfigurationData(configuration)\n  return {\n    key,\n    data: selectionData(json),\n  }\n}\n\nexport const chartData = (selections) => {\n  const selectionKeys = configurationKeys(selections)\n  const hasData = selectionKeys.reduce(\n    (all, x) => all && \"data\" in selections[x],\n    true\n  )\n  if (hasData) {\n    const labels = [\n      ...new Set(\n        selectionKeys.reduce(\n          (all, x) => [...all, ...Object.keys(selections[x].data || {})],\n          []\n        )\n      ),\n    ].sort((a, b) => parseInt(a) > parseInt(b))\n    const keyData = selectionKeys.reduce(\n      (all, x) => ({\n        ...all,\n        [selections[x].key]: {\n          data: selections[x].data,\n          label: `MI AUC (${selections[x].flavor}/${selections[x].dataset}/${selections[x].architecture}/${selections[x].train})`.toUpperCase(),\n        },\n      }),\n      {}\n    )\n    return {\n      labels,\n      datasets: Object.keys(keyData).map((x, i) => {\n        return {\n          ...dataSet(i),\n          label: keyData[x].label,\n          data: labels.map((y) => keyData[x].data[y]),\n        }\n      }),\n    }\n  } else return {}\n}\n\nconst sample = (items, size) =>\n  items\n    .map((x) => ({ x, r: Math.random() }))\n    .sort((a, b) => a.r - b.r)\n    .map((a) => a.x)\n    .slice(0, size || items.length)\n\nexport const PRACTICE_ROUND_IMAGE_COUNT = 5\nexport const GAME_IMAGE_COUNT = 12\n\nconst sanitizeJson = (obj) => {\n  const stringToBooleanOrOriginal = (p) =>\n    p && (p === \"true\" || p === \"false\") ? p.toLowerCase() === \"true\" : p\n  return Object.keys(obj).reduce(\n    (all, x) => ({\n      ...all,\n      [x]: stringToBooleanOrOriginal(obj[x]),\n    }),\n    {}\n  )\n}\n\nexport const cleanObject = (x) =>\n  Object.keys(x || {})\n    .filter((key) => x[key])\n    .reduce((all, key) => ({ ...all, [key]: x[key] }), {})\n\n// const PRACTICE_SETS = [1, 2]\n// const PRACTICE_SETS = [1, 2, 3, 4, 5]\n\nconst allGroups = (data) =>\n  data.reduce((all, x) => [...new Set([...all, ...(x.groups || [])])], [])\n\nconst practiceSet = (images, groupNumber) => {\n  // setIndex = isDef(setIndex)\n  //   ? setIndex\n  //   : PRACTICE_SETS[Math.floor(Math.random() * PRACTICE_SETS.length)]\n  return images.filter((x) => x.groups && x.groups.includes(groupNumber))\n}\n\nexport const gameData = async ({\n  path = \"./data/game-data.json\",\n  snippetId = null,\n} = {}) => {\n  const fetchPath = snippetId\n    ? `https://gitlab-int.ctc.com/api/v4/snippets/${snippetId}/raw`\n    : path\n  const allOptions = await fetch(fetchPath)\n  const data = await allOptions.json()\n  const correctData = data.map(sanitizeJson)\n  return {\n    practiceOptions: allGroups(correctData).reduce(\n      (all, x) => ({ ...all, [x]: practiceSet(correctData, x) }),\n      {}\n    ),\n    gameOptions: sample(correctData, GAME_IMAGE_COUNT),\n  }\n}\n\nexport const matchData = async () => ({\n  \"bird_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_bird_threshold_512.png\",\n        \"match_game_cifar_robust_images_bird_0.png\",\n        \"match_game_cifar_robust_images_bird_1.png\",\n        \"match_game_cifar_robust_images_bird_2.png\",\n        \"match_game_cifar_robust_images_bird_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_bird_threshold_512.png\",\n        \"match_game_cifar_diluted_robust_images_bird_0.png\",\n        \"match_game_cifar_diluted_robust_images_bird_1.png\",\n        \"match_game_cifar_diluted_robust_images_bird_2.png\",\n        \"match_game_cifar_diluted_robust_images_bird_3.png\",\n      ],\n    },\n  },\n  \"cat_image_18.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_cat_threshold_512.png\",\n        \"match_game_cifar_robust_images_cat_0.png\",\n        \"match_game_cifar_robust_images_cat_1.png\",\n        \"match_game_cifar_robust_images_cat_2.png\",\n        \"match_game_cifar_robust_images_cat_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_cat_threshold_512.png\",\n        \"match_game_cifar_diluted_robust_images_cat_0.png\",\n        \"match_game_cifar_diluted_robust_images_cat_1.png\",\n        \"match_game_cifar_diluted_robust_images_cat_2.png\",\n        \"match_game_cifar_diluted_robust_images_cat_3.png\",\n      ],\n    },\n  },\n  \"deer_image_13.png\": {\n    match: {\n      easy: [\"match_game_cifar_robust_images_deer_threshold_512.png\"],\n      hard: [\"match_game_cifar_diluted_robust_images_deer_threshold_512.png\"],\n    },\n  },\n  \"dog_image_16.png\": {\n    match: {\n      easy: [\"match_game_cifar_robust_images_dog_threshold_512.png\"],\n      hard: [\"match_game_cifar_diluted_robust_images_dog_threshold_512.png\"],\n    },\n  },\n  \"boat_image_10.png\": {\n    match: {\n      easy: [\"match_game_cifar_robust_images_boat_threshold_512.png\"],\n      hard: [\"match_game_cifar_diluted_robust_images_boat_threshold_512.png\"],\n    },\n  },\n  \"car_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_car_threshold_512.png\",\n        \"match_game_cifar_robust_images_car_0.png\",\n        \"match_game_cifar_robust_images_car_1.png\",\n        \"match_game_cifar_robust_images_car_2.png\",\n        \"match_game_cifar_robust_images_car_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_car_threshold_512.png\",\n        \"match_game_cifar_diluted_robust_images_car_0.png\",\n        \"match_game_cifar_diluted_robust_images_car_1.png\",\n        \"match_game_cifar_diluted_robust_images_car_2.png\",\n        \"match_game_cifar_diluted_robust_images_car_3.png\",\n      ],\n    },\n  },\n  \"plane_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_plane_0.png\",\n        \"match_game_cifar_robust_images_plane_1.png\",\n        \"match_game_cifar_robust_images_plane_2.png\",\n        \"match_game_cifar_robust_images_plane_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_plane_0.png\",\n        \"match_game_cifar_diluted_robust_images_plane_1.png\",\n        \"match_game_cifar_diluted_robust_images_plane_2.png\",\n        \"match_game_cifar_diluted_robust_images_plane_3.png\",\n      ],\n    },\n  },\n  \"frog_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_frog_1.png\",\n        \"match_game_cifar_robust_images_frog_1.png\",\n        \"match_game_cifar_robust_images_frog_2.png\",\n        \"match_game_cifar_robust_images_frog_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_frog_0.png\",\n        \"match_game_cifar_diluted_robust_images_frog_1.png\",\n        \"match_game_cifar_diluted_robust_images_frog_2.png\",\n        \"match_game_cifar_diluted_robust_images_frog_3.png\",\n      ],\n    },\n  },\n  \"horse_image_16.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_horse_threshold_512.png\",\n        \"match_game_cifar_robust_images_horse_0.png\",\n        \"match_game_cifar_robust_images_horse_1.png\",\n        \"match_game_cifar_robust_images_horse_2.png\",\n        \"match_game_cifar_robust_images_horse_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_horse_threshold_512.png\",\n        \"match_game_cifar_diluted_robust_images_horse_threshold_512-2.png\",\n        \"match_game_cifar_diluted_robust_images_horse_0.png\",\n        \"match_game_cifar_diluted_robust_images_horse_1.png\",\n        \"match_game_cifar_diluted_robust_images_horse_2.png\",\n        \"match_game_cifar_diluted_robust_images_horse_3.png\",\n      ],\n    },\n  },\n  \"horse_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_horse_threshold_512.png\",\n        \"match_game_cifar_robust_images_horse_0.png\",\n        \"match_game_cifar_robust_images_horse_1.png\",\n        \"match_game_cifar_robust_images_horse_2.png\",\n        \"match_game_cifar_robust_images_horse_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_horse_threshold_512.png\",\n        \"match_game_cifar_diluted_robust_images_horse_threshold_512-2.png\",\n        \"match_game_cifar_diluted_robust_images_horse_0.png\",\n        \"match_game_cifar_diluted_robust_images_horse_1.png\",\n        \"match_game_cifar_diluted_robust_images_horse_2.png\",\n        \"match_game_cifar_diluted_robust_images_horse_3.png\",\n      ],\n    },\n  },\n  \"truck_image_1.png\": {\n    match: {\n      easy: [\n        \"match_game_cifar_robust_images_truck_0.png\",\n        \"match_game_cifar_robust_images_truck_1.png\",\n        \"match_game_cifar_robust_images_truck_2.png\",\n        \"match_game_cifar_robust_images_truck_3.png\",\n      ],\n      hard: [\n        \"match_game_cifar_diluted_robust_images_truck_0.png\",\n        \"match_game_cifar_diluted_robust_images_truck_1.png\",\n        \"match_game_cifar_diluted_robust_images_truck_2.png\",\n        \"match_game_cifar_diluted_robust_images_truck_3.png\",\n      ],\n    },\n  },\n})\n\nexport const isDefined = (x) => x !== null && x !== undefined\n","export const filterObject = (obj, predicate) =>\n  Object.keys(obj)\n    .filter(predicate)\n    .reduce((a, k) => ({ ...a, [k]: obj[k] }), {})\n\nexport const clean = (obj) => filterObject(obj, (k) => obj[k] != null)\n\nexport const styleDiv = (getDiv, style) => {\n  const div = getDiv()\n  Object.keys(style).forEach((k) => (div.style[k] = style[k]))\n}\n\nexport const isDef = (x) => x !== null && x !== undefined\n\n// https://stackoverflow.com/a/56749849/1072068\nexport const shuffle = (arr) =>\n  [...arr].reduceRight(\n    (\n      res,\n      _,\n      __,\n      s // eslint-disable-next-line no-sequences\n    ) => (res.push(s.splice(0 | (Math.random() * s.length), 1)[0]), res),\n    []\n  )\n\nexport const randomItem = (values) => shuffle(values).slice(0, 1)[0]\nexport const unique = (values) => [...new Set(values)]\nexport const print = console.log.bind(console)\nexport const isObject = (x) => typeof x === \"object\" && x !== null\nexport const chain = async (fns, duration) => {\n  const delay = (t) => new Promise((resolve) => setTimeout(() => resolve(), t))\n  for (let x of fns) {\n    x()\n    await delay(duration || 0)\n  }\n}\n\nexport const prettyGoodId = (prefix) =>\n  `${prefix}${Date.now()}${Math.floor(Math.random() * 100)}`\n","import styled from \"styled-components\"\nimport ReactTooltip from \"react-tooltip\"\nimport { prettyGoodId } from \"../../util/misc\"\n\nconst StyledInstructions = styled.div`\n  background-color: antiquewhite;\n  margin: -3px -16px;\n  padding: 5px;\n  border-radius: 2px;\n  text-shadow: none;\n  color: black;\n`\n\nconst Instructions = ({ children }) => (\n  <StyledInstructions>{children}</StyledInstructions>\n)\n\nconst StyledInformationButton = styled.button`\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid cornflowerblue;\n  color: cornflowerblue;\n  height: 100%;\n  width: auto;\n  cursor: help;\n  margin: 10px;\n  padding: 0 0.45em;\n  font-size: 0.5em;\n  outline: none;\n`\n\nconst InformationTooltip = ({ children, triggerText = \"i\", triggerStyle }) => {\n  const id = prettyGoodId(\"tooltip\")\n  return (\n    <>\n      <ReactTooltip\n        id={id}\n        getContent={() => <Instructions>{children}</Instructions>}\n        effect=\"solid\"\n        place=\"bottom\"\n      />\n      <StyledInformationButton data-for={id} data-tip style={triggerStyle}>\n        {triggerText}\n      </StyledInformationButton>\n    </>\n  )\n}\n\nexport default InformationTooltip\n","import PropTypes from \"prop-types\"\nimport styled, { keyframes } from \"styled-components\"\nimport \"./Game.css\"\nimport { isDefined } from \"../../util/data\"\nimport { Range } from \"react-range\"\nimport InformationTooltip from \"./InformationTooltip\"\n\nconst CenteredOuter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  height: 100%;\n`\nconst CenteredInner = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  width: 100%;\n`\n\nexport const Centered = ({ children }) => (\n  <CenteredOuter>\n    <CenteredInner>{children}</CenteredInner>\n  </CenteredOuter>\n)\n\nconst ToggleButtonCheckBoxWrapper = styled.div`\n  position: relative;\n  background-color: lightgray;\n  padding: 5px;\n  border-radius: 4px;\n`\n\nconst CheckButton = styled.button`\n  background: ${({ checked, backgroundColor }) =>\n    checked ? backgroundColor : \"gray\"};\n  padding: 5px;\n  color: ${({ checked, color }) => (checked ? color : \"#444\")};\n  outline: none;\n  border: none;\n  border-radius: ${({ left }) => (left ? \"4px 0 0 4px\" : \"0 4px 4px 0\")};\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: ${({ checked }) =>\n      checked ? \"1px 1px 1px black;\" : \"1px 1px 1px lightgray;\"};\n  }\n`\n\nexport const ToggleButton = ({\n  trueLabel = \"YES\",\n  falseLabel = \"NO\",\n  trueBgColor,\n  falseBgColor,\n  onToggle,\n  defaultValue,\n}) => {\n  return (\n    <ToggleButtonCheckBoxWrapper>\n      <CheckButton\n        checked={isDefined(defaultValue) && defaultValue}\n        backgroundColor={trueBgColor}\n        onClick={() => onToggle(true)}\n        left={true}\n      >\n        {trueLabel}\n      </CheckButton>\n      <CheckButton\n        checked={isDefined(defaultValue) && !defaultValue}\n        backgroundColor={falseBgColor}\n        onClick={() => onToggle(false)}\n        right={true}\n      >\n        {falseLabel}\n      </CheckButton>\n    </ToggleButtonCheckBoxWrapper>\n  )\n}\n\nToggleButton.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  trueLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  falseLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n}\n\nexport const GameButton = styled.button`\n  border: 1px solid lightgray;\n  text-transform: uppercase;\n  font-family: Futura, sans-serif;\n  font-size: 1.4rem;\n  padding: 5px;\n  border-bottom: 7px solid grey;\n  color: darkslategray;\n  border-radius: 10px 10px 2px 2px;\n  outline: none;\n  cursor: pointer;\n  &:disabled {\n    cursor: default;\n    color: lightgray;\n  }\n  &:hover:enabled {\n    text-shadow: 1px 1px 1px #aaa;\n  }\n`\n\nexport const Emoji = ({ className, style, label, symbol }) => {\n  const symbols = Array.isArray(symbol) ? symbol : [symbol]\n  return (\n    <span className={className} style={style} role=\"img\" aria-label={label}>\n      {symbols.map((x) => String.fromCodePoint(x))}\n    </span>\n  )\n}\n\nexport const Sidecar = styled.div`\n  background-color: white;\n`\n\nconst StyledRangeSlider = styled.div`\n  margin: 10px 10px 0 10px;\n  outline: none;\n`\n\nexport const ControlLabel = styled.div`\n  ${({ position = \"top\" }) =>\n    position === \"top\" ? `margin-bottom: 10px;` : `margin-top: 10px;`}\n  font-size: 0.9rem;\n  text-align: center;\n`\n\nconst RangeTrack = styled.div`\n  height: 6px;\n  width: 100%;\n  background-color: #ccc;\n  border-radius: 3px;\n`\n\nconst RangeHandle = styled.div`\n  height: 18px;\n  width: 18px;\n  color: white;\n  background-color: #999;\n  border: 1px solid #555;\n  font-size: 0.7rem;\n  text-align: center;\n  line-height: 1.7;\n  outline: none;\n  border-radius: 4px;\n`\n\nexport const RangeSlider = ({\n  value,\n  min,\n  max,\n  onChange,\n  style,\n  step = 1,\n  label = null,\n  labelPosition = \"top\",\n  handleStyle,\n}) => {\n  const _label = label ? (\n    <ControlLabel position={labelPosition}>{label}</ControlLabel>\n  ) : null\n  return (\n    <StyledRangeSlider style={style}>\n      {_label && labelPosition === \"top\" ? _label : null}\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        values={[value]}\n        onChange={(values) => {\n          const [_value] = values\n          if (_value !== value) {\n            onChange(_value)\n          }\n        }}\n        renderTrack={({ props, children }) => (\n          <RangeTrack {...props}>{children}</RangeTrack>\n        )}\n        renderThumb={({ props }) => (\n          <RangeHandle {...props} style={handleStyle}>\n            {value}\n          </RangeHandle>\n        )}\n      />\n      {_label && labelPosition === \"bottom\" ? (\n        <div style={{ marginTop: 10 }}>{_label}</div>\n      ) : (\n        <div style={{ height: 7 }}></div>\n      )}\n    </StyledRangeSlider>\n  )\n}\n\nconst StyledGameTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  text-shadow: 2px 2px 2px slategray;\n  text-align: center;\n`\n\nexport const GameTitle = ({ children, information, style }) => (\n  <StyledGameTitle style={style}>\n    {children}\n    {information ? (\n      <InformationTooltip>{information}</InformationTooltip>\n    ) : null}\n  </StyledGameTitle>\n)\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`\n\nconst StyledAnswerSvg = styled.div`\n  display: inline-block;\n  animation: ${fadeIn} 0.1s linear;\n`\n\nexport const WrongAnswerX = ({\n  width = 75,\n  height = 100,\n  strokeWidth = 8,\n  color = \"red\",\n}) => {\n  const style = {\n    stroke: color,\n    fill: \"none\",\n    strokeWidth,\n    rx: 1,\n    strokeLinecap: \"round\",\n  }\n  const cornerPadding = strokeWidth * 2.5\n  return (\n    <StyledAnswerSvg style={{ width, height }}>\n      <svg viewBox={`0 0 ${width} ${height}`}>\n        <rect\n          style={style}\n          x={strokeWidth}\n          y={strokeWidth}\n          width={width - strokeWidth * 2}\n          height={height - strokeWidth * 2}\n        />\n        <line\n          x1={cornerPadding}\n          y1={cornerPadding}\n          x2={width - cornerPadding}\n          y2={height - cornerPadding}\n          style={style}\n        />\n        <line\n          x1={width - cornerPadding}\n          y1={cornerPadding}\n          x2={cornerPadding}\n          y2={height - cornerPadding}\n          style={style}\n        />\n      </svg>\n    </StyledAnswerSvg>\n  )\n}\n\nexport const RightAnswerCheck = ({\n  width = 50,\n  height = 50,\n  strokeWidth = 6,\n  color = \"green\",\n}) => {\n  const style = {\n    stroke: color,\n    fill: \"none\",\n    strokeWidth,\n    strokeLinejoin: \"round\",\n  }\n  const checkPoints = [\n    `${width * 0.3},${height * 0.5}`,\n    `${width * 0.45},${height * 0.65}`,\n    `${width * 0.7},${height * 0.32}`,\n  ]\n  return (\n    <StyledAnswerSvg style={{ width, height }}>\n      <svg viewBox={`0 0 ${width} ${height}`}>\n        <circle\n          style={style}\n          cx={width / 2}\n          cy={height / 2}\n          r={width / 2 - 5}\n        />\n        <polyline style={style} points={checkPoints.join(\" \")} />\n      </svg>\n    </StyledAnswerSvg>\n  )\n}\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport Gallery from \"react-grid-gallery\"\nimport { scoreDisplays } from \"./Scoreboard\"\nimport {\n  Centered,\n  GameButton,\n  RangeSlider,\n  WrongAnswerX,\n  RightAnswerCheck,\n} from \"./Util\"\nimport {\n  gameData,\n  isDefined,\n  cleanObject,\n  GAME_IMAGE_COUNT,\n} from \"../../util/data\"\nimport { GameTitle } from \"./Util\"\nimport \"./Game.css\"\n\nconst SIZES = {\n  thumbnail: {\n    height: 32,\n    width: 32,\n  },\n  grid: {\n    width: 710,\n  },\n}\n\nconst generateGameData = async (gameMode) => {\n  const gameDataModels = {\n    easy: { path: \"./data/game-data.json\" },\n    hard: { path: \"./data/game-data-20q-hard.json\" },\n  }\n  const gameDataModel = gameDataModels[gameMode || \"easy\"]\n  const _gameData = await gameData(gameDataModel)\n  const images = _gameData.gameOptions.reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  return {\n    gameData: _gameData,\n    images,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst labelStyle = {\n  padding: \"5px\",\n  fontSize: \"75%\",\n  color: \"white\",\n  background: \"rgba(0,0,0,0.5)\",\n}\n\nconst toImage = (image, index, tags = () => []) => {\n  const img = {\n    src: `img/${image.path}`,\n    thumbnail: `img/${image.path}`,\n    thumbnailWidth: SIZES.thumbnail.width,\n    thumbnailHeight: SIZES.thumbnail.height,\n    index,\n    correct: image.correct,\n    customOverlay: <AnswersOverlay index={index} />,\n  }\n  img.tags = tags(img) || []\n  return cleanObject(img)\n}\nconst toDeerImage = (img, index) =>\n  toImage(img, index, (_img) => [\n    {\n      value: `${img.label}`,\n      title: `COMPY Says: ${img.label}`,\n    },\n  ])\n\nconst findYouPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[0]\n    : null\n\nconst StyledAnswersOverlay = styled.div`\n  color: red;\n  font-weight: bold;\n  text-align: right;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ correct }) =>\n    correct ? \"rgba(75, 75, 75, 0.8)\" : \"rgba(75, 75, 75, 0.0)\"};\n  width: 100%;\n  height: 100%;\n`\n\nconst AnswerOverlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  height: 100%;\n`\n\nconst AnswersOverlay = ({ index }) => {\n  const [gameSettings] = useContext(GameContext)\n  const _you = findYouPlayer(gameSettings)\n  const shouldShowAnswers = isDefined(_you.score)\n  const correct =\n    (_you.selections.includes(index) && gameSettings.images[index].correct) ||\n    (!_you.selections.includes(index) && !gameSettings.images[index].correct)\n  return (\n    <StyledAnswersOverlay\n      correct={isDefined(_you.score) && !gameSettings.images[index].correct}\n    >\n      <AnswerOverlay>\n        {shouldShowAnswers ? (\n          correct ? (\n            <RightAnswerCheck />\n          ) : (\n            <WrongAnswerX />\n          )\n        ) : null}\n      </AnswerOverlay>\n    </StyledAnswersOverlay>\n  )\n}\n\nconst Choices = ({ settings: { noise }, gameMode }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n\n  useEffect(() => {\n    resetGame(gameMode, gameSettings, setGameSettings) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (gameSettings.originalImages) {\n      const noiseKey = `noise${noise}`\n      const hasVariant = (image, variant) =>\n        \"variants\" in image && variant in image.variants\n      setGameSettings({\n        ...gameSettings,\n        images: gameSettings.originalImages\n          .map((image) =>\n            hasVariant(image, noiseKey) ? image.variants[noiseKey] : image\n          )\n          .map((image, i) => ({\n            ...gameSettings.images[i],\n            ...toDeerImage(image, i),\n          })),\n      })\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noise])\n\n  const onSelectImage = (index) => {\n    const updated = { ...gameSettings }\n    const you = findYouPlayer(updated)\n    if (you.score) return\n    var img = updated.images[index]\n    if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected\n    else img.isSelected = true\n    you.selections = updated.images\n      .map((x, index) => ({ ...x, index }))\n      .filter((x) => x.isSelected)\n      .map((x) => x.index)\n    setGameSettings(updated)\n  }\n\n  const you = findYouPlayer(gameSettings)\n  return (\n    <div style={{ height: 550 }}>\n      <Gallery\n        images={gameSettings.images}\n        enableImageSelection={!you.score}\n        onSelectImage={onSelectImage}\n        onClickThumbnail={onSelectImage}\n        tagStyle={labelStyle}\n        showLightboxThumbnails={true}\n        enableLightbox={false}\n      />\n    </div>\n  )\n}\n\nconst resetGame = async (mode, original, updateFn) => {\n  const updated = { ...original }\n  const currentGameData = await generateGameData(mode)\n  updated.currentGameData = currentGameData\n  updated.originalImages = Object.keys(currentGameData.images).map(\n    (k) => currentGameData.images[k]\n  )\n  updated.images = updated.originalImages.map(toDeerImage)\n  const _you = findYouPlayer(updated)\n  _you.score = null\n  _you.selections = []\n  updateFn(updated)\n}\n\nconst calculateScore = (gameData, selections) => {\n  const _selections = selections || []\n  const wrongAnswers = _selections.filter(\n    (x) => !gameData.correctAnswers.includes(x)\n  )\n  const omittedAnswers = gameData.correctAnswers.filter(\n    (x) => !_selections.includes(x)\n  )\n\n  return (\n    Object.keys(gameData.images).length -\n    wrongAnswers.length -\n    omittedAnswers.length\n  )\n}\n\nconst StyledControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 2px;\n  padding: 15px;\n  border: 1px solid lightgray;\n  background-color: white;\n  border-bottom-left-radius: 15px;\n  border-bottom-right-radius: 15px;\n`\n\nconst StyledControlEnd = styled.div`\n  width: 150px;\n  margin: 0 15px;\n  min-height: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`\n\nconst Score = styled.div`\n  color: white;\n  font-weight: bold;\n  background-color: black;\n  border-radius: 3px;\n  font-size: 1.2rem;\n  padding: 10px;\n`\n\nconst Controls = ({ gameMode, onSettingsUpdated = () => null }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const [noiseLevel, setNoiseLevel] = useState(0)\n  const [score, setScore] = useState()\n  const [showRetryButton, setShowRetryButton] = useState(false)\n  const changeNoiseLevel = (level) => {\n    setNoiseLevel(level)\n    onSettingsUpdated({ noise: level })\n  }\n\n  const selectionCount = gameSettings.players[0].selections.length\n  const loadScores = () => {\n    const updated = { ...gameSettings }\n    const _you = findYouPlayer(updated)\n    _you.score = calculateScore(gameSettings.currentGameData, _you.selections)\n    setScore(scoreDisplays(_you, GAME_IMAGE_COUNT))\n    setGameSettings(updated)\n    setShowRetryButton(true)\n  }\n  const playAgain = () => {\n    resetGame(gameMode, gameSettings, setGameSettings)\n    setScore(null)\n    setShowRetryButton(false)\n  }\n\n  return (\n    <StyledControls>\n      <StyledControlEnd>\n        {gameMode === \"hard\" ? (\n          <RangeSlider\n            label=\"Add Noise\"\n            labelPosition=\"bottom\"\n            min={0}\n            max={6}\n            step={1}\n            value={noiseLevel}\n            onChange={changeNoiseLevel}\n            style={{ width: \"100%\" }}\n          />\n        ) : null}\n      </StyledControlEnd>\n      {showRetryButton ? (\n        <GameButton onClick={playAgain}>Play Again!</GameButton>\n      ) : (\n        <GameButton onClick={loadScores} disabled={selectionCount === 0}>\n          Submit Answers\n        </GameButton>\n      )}\n      <StyledControlEnd>\n        {score ? (\n          <Score>\n            {score.score} ({score.percentage}%)\n          </Score>\n        ) : null}\n      </StyledControlEnd>\n    </StyledControls>\n  )\n}\n\nconst StyledGame = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst Game = styled.div`\n  min-width: ${SIZES.grid.width}px;\n  max-width: ${SIZES.grid.width}px;\n`\n\nconst GameInformation = () => (\n  <>\n    <p>\n      COMPY has seen a lot of deer images before, and he is really good at\n      identifying a deer when he sees one.\n    </p>\n    <p>\n      Can you tell which of the following deer images COMPY may have seen? There\n      is at least one.\n    </p>\n    <p>Select them and then hit the \"Submit Answers\" button (below).</p>\n    <p>If you were to guess randomly, you would expect to get half correct.</p>\n  </>\n)\n\nconst TwentyQuestions = ({ gameMode }) => {\n  const [settings, setSettings] = useState(0)\n  const settingsUpdated = (_settings) => setSettings(_settings)\n\n  return (\n    <Centered>\n      <StyledGame>\n        <Game>\n          <GameTitle\n            information={<GameInformation />}\n            style={{ marginBottom: 10 }}\n          >\n            20 Questions\n          </GameTitle>\n          <Choices settings={settings} gameMode={gameMode} />\n          <Controls gameMode={gameMode} onSettingsUpdated={settingsUpdated} />\n        </Game>\n      </StyledGame>\n    </Centered>\n  )\n}\n\nexport default TwentyQuestions\n","import { useEffect, useCallback, useMemo, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { shuffle, randomItem, isDef, filterObject } from \"../../util/misc\"\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\"\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\nimport Xarrow from \"react-xarrows\"\nimport { matchData } from \"../../util/data\"\nimport { GameTitle, WrongAnswerX } from \"./Util\"\n\nconst SIZES = {\n  tile: {\n    height: 100,\n    width: 100,\n  },\n}\n\nconst DraggableImageBase = styled.div`\n  height: ${SIZES.tile.height}px;\n  width: ${SIZES.tile.width}px;\n  border: 1px solid slategray;\n  border-radius: 5px;\n  background-image: ${({ src }) => `url(${src})`};\n  background-size: cover;\n`\nconst StyledDraggableImage = styled(DraggableImageBase)`\n  border-color: black;\n`\nconst DraggableImage = ({\n  index,\n  image,\n  correctTargets,\n  disabled,\n  onGuess = () => null,\n}) => {\n  const draggableId = `draggable${index}`\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: \"draggable\",\n    item: { name: image },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult()\n      if (item && dropResult) {\n        onGuess(draggableId, {\n          guess: correctTargets.includes(dropResult.name),\n          source: { id: draggableId, img: item.name },\n          target: { id: dropResult.name, img: dropResult.name },\n        })\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }))\n  const opacity = isDragging ? 0.4 : 1\n  return (\n    <StyledDraggableImage\n      id={draggableId}\n      role=\"draggable\"\n      src={`match-img/${image}`}\n      alt={image}\n      ref={disabled ? null : drag}\n      style={{ opacity }}\n    />\n  )\n}\n\nconst DraggableContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`\nconst ClearImageSelectionButton = styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: -10px;\n  right: -10px;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  border: 1px solid #777;\n  &::after {\n    content: \"x\";\n    text-align: center;\n    margin: auto;\n  }\n`\nconst DraggableTargetDrop = styled(DraggableImageBase)`\n  background-color: #ddd;\n  border: 1px dashed black;\n  position: relative;\n`\nconst DraggableTarget = ({\n  id,\n  image,\n  matches,\n  onClearSelection,\n  disabled,\n}) => {\n  const [{ canDrop, isOver }, drop] = useDrop(() => ({\n    accept: \"draggable\",\n    drop: () => ({ name: id }),\n    collect: (monitor) => {\n      let canDrop = true\n      try {\n        canDrop = monitor.canDrop()\n      } catch {\n        // https://github.com/react-dnd/react-dnd/issues/236\n        // Unsure of a workaround at this point\n        canDrop = true\n      }\n      return {\n        isOver: monitor.isOver(),\n        canDrop,\n      }\n    },\n  }))\n  const isActive = canDrop && isOver\n  const from = Object.values(matches).find((x) => x.to.id === id)?.from\n  const backgroundColor = from\n    ? null\n    : isActive\n    ? \"#aaa\"\n    : canDrop\n    ? \"#ddd\"\n    : \"white\"\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <DraggableTargetDrop\n        id={id}\n        ref={drop}\n        className=\"drop-target\"\n        from={from}\n        style={{\n          backgroundColor,\n          backgroundImage: from ? `url(match-img/${from.img})` : null,\n        }}\n      >\n        {from && !disabled ? (\n          <ClearImageSelectionButton onClick={() => onClearSelection(id)} />\n        ) : null}\n      </DraggableTargetDrop>\n      <DraggableImageBase\n        src={`match-img/${image}`}\n        alt={image}\n        style={{\n          marginLeft: 10,\n        }}\n      />\n    </div>\n  )\n}\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  background-color: steelblue;\n  padding: 25px;\n  border-radius: 10px;\n  border: 1px solid gray;\n  margin: 20px 0;\n`\n\nconst MiddleSection = styled.div`\n  width: 500px;\n`\nconst GameInformation = () => (\n  <>\n    <p>On the left are image represenations for class labels of a data set</p>\n    <p>used to train a machine learning model.</p>\n    <p>\n      Drag each class prototype image on the left to their match on the right.\n    </p>\n    <p>\n      <b> You have three strikes before you are out! </b>\n    </p>\n    <p></p>\n  </>\n)\n\nconst GameInfo = {\n  learn: { title: \"Learn to Match\", matchCount: 3 },\n  easy: { title: \"Easy Match Game\", matchCount: 5 },\n  hard: { title: \"Hard Match Game\", matchCount: 3, choiceCount: 6 },\n}\n\nconst Centered = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`\n\nconst ScoreBoard = ({ guesses }) => (\n  <div style={{ textAlign: \"center\", height: 100, marginTop: 5 }}>\n    {new Array(guesses.incorrect).fill().map((_, i) => (\n      <WrongAnswerX key={`incorrect-x-${i}`} />\n    ))}\n  </div>\n)\n\nconst RetryButton = styled.button`\n  height: 50px;\n  border: 3px solid #111;\n  border-radius: 25px;\n  font-size: 1.5rem;\n  padding: 0 20px;\n  font-family: Futura;\n  background-color: ${({ won }) => (won ? \"green\" : \"slategray\")};\n  color: white;\n  cursor: pointer;\n  outline: none;\n  position: relative;\n  z-index: 9999;\n`\n\nconst everythingHasAGuess = () =>\n  [...document.getElementsByClassName(\"drop-target\")].reduce(\n    (all, x) =>\n      all && isDef(x.style.backgroundImage) && x.style.backgroundImage !== \"\",\n    true\n  )\n\nconst Options = ({ guesses, onGameOver, onRetry }) => {\n  const [won, setWon] = useState(false)\n  const [buttonText, setButtonText] = useState(null)\n  useEffect(() => {\n    const winner = () =>\n      everythingHasAGuess() &&\n      guesses.total > 0 &&\n      Object.keys(guesses.correct).filter((x) => guesses.correct[x]).length >=\n        guesses.total\n    const loser = () => guesses.incorrect >= guesses.maxStrikes\n    const won = winner()\n    setWon(won)\n    const text = loser() ? \"Try again?\" : won ? \"You won! Play again?\" : null\n    setButtonText(text)\n    if (text) onGameOver()\n  }, [guesses, onGameOver])\n  return buttonText ? (\n    <Centered>\n      <RetryButton onClick={onRetry} won={won}>\n        {buttonText}\n      </RetryButton>\n    </Centered>\n  ) : null\n}\n\nconst toKey = (x, index) => `${x}_${index}`\nconst MatchLayout = ({ model, gameMode, onRetry, maxStrikes = 3 }) => {\n  const [disabled, setDisabled] = useState(false)\n  // console.log(JSON.stringify(model, null, 2))\n\n  const onGameOver = () => setDisabled((_) => true)\n  const _onRetry = () => {\n    setGuesses(resetGuesses())\n    setMatches({})\n    onRetry()\n  }\n  const targetHasGuess = (target, matches) =>\n    Object.values(matches).reduce(\n      (all, x) => all || target.id === x.to.id,\n      false\n    )\n\n  const targets = useMemo(() => model?.targets || [], [model])\n  const sources = useMemo(() => model?.sources || [], [model])\n  const [matches, setMatches] = useState({})\n  const resetGuesses = useCallback(\n    () => ({\n      maxStrikes,\n      total: targets.length,\n      correct: {},\n      incorrect: 0,\n    }),\n    [targets, maxStrikes]\n  )\n\n  useEffect(() => {\n    setDisabled(false)\n    setGuesses(resetGuesses())\n  }, [model, resetGuesses])\n\n  const [guesses, setGuesses] = useState(resetGuesses())\n  const onGuess = (sourceId, { guess, source, target }) => {\n    setGuesses((prev) => ({\n      ...prev,\n      lastGuess: {\n        sourceId,\n        guess,\n        source,\n        target,\n      },\n      correct:\n        guess === true\n          ? { ...prev.correct, [sourceId]: guess }\n          : guess === null\n          ? { ...prev.correct, [sourceId]: false }\n          : prev.correct,\n      incorrect:\n        guess === false\n          ? Math.min(prev.incorrect + 1, prev.total)\n          : prev.incorrect,\n    }))\n  }\n\n  useEffect(() => {\n    setMatches((prev) => {\n      if (!guesses || !guesses.lastGuess) return prev\n      const { sourceId, guess, source, target } = guesses.lastGuess\n      if (targetHasGuess(target, prev)) return prev\n      return {\n        ...prev,\n        [sourceId]: {\n          from: source,\n          to: target,\n          color: guess ? \"green\" : \"red\",\n        },\n      }\n    })\n  }, [guesses])\n\n  const onClearGuess = (image) => {\n    setMatches((prev) => {\n      const match = Object.keys(prev).find((x) => prev[x].to.id === image)\n      return filterObject(prev, (k) => k !== match)\n    })\n  }\n\n  return (\n    <DraggableContainer>\n      <SideContainer>\n        {sources.map((x, i) => (\n          <DraggableImage\n            key={toKey(x, i)}\n            index={i}\n            image={x}\n            disabled={disabled}\n            correctTargets={model.matches[x]}\n            onGuess={onGuess}\n          />\n        ))}\n      </SideContainer>\n      <MiddleSection>\n        <ScoreBoard guesses={guesses} />\n        <GameTitle information={<GameInformation />}>\n          {GameInfo[gameMode].title || \"Match Game\"}\n        </GameTitle>\n        <Options guesses={guesses} onRetry={_onRetry} onGameOver={onGameOver} />\n      </MiddleSection>\n      <SideContainer key={new Date().getTime()}>\n        {targets.map((x, i) => (\n          <DraggableTarget\n            key={toKey(x, i)}\n            id={x}\n            image={x}\n            disabled={disabled}\n            matches={matches}\n            onClearSelection={onClearGuess}\n          />\n        ))}\n      </SideContainer>\n      {Object.values(matches).map((x) => (\n        <Xarrow\n          key={`line-${x.from.id}-${x.to.id}`}\n          start={`${x.from.id}`}\n          end={`${x.to.id}`}\n          color={x.color}\n          path=\"straight\"\n          animateDrawing=\"200ms\"\n        />\n      ))}\n    </DraggableContainer>\n  )\n}\n\nconst Match = ({\n  gameMode = \"easy\",\n  matchCount = GameInfo[gameMode].matchCount,\n  choiceCount = GameInfo[gameMode].choiceCount || GameInfo[gameMode].matchCount,\n}) => {\n  const [retries, setRetries] = useState(0)\n  const [model, setModel] = useState({})\n  const [allImages, setAllImages] = useState({})\n  const resetModel = useCallback(() => {\n    const targets = shuffle(Object.keys(allImages)).slice(0, matchCount)\n    const findMatch = (key) =>\n      allImages[key].match[gameMode] && allImages[key].match[gameMode].length\n        ? randomItem(allImages[key].match[gameMode])\n        : key\n\n    const allGameTypeMatches = () =>\n      Object.keys(allImages)\n        .map((x) => allImages[x].match[gameMode])\n        .flat()\n\n    const extraChoices = (initialChoices) => {\n      const extraCount = choiceCount - matchCount\n      return extraCount > 0\n        ? shuffle(\n            allGameTypeMatches().filter((x) => !initialChoices.includes(x))\n          ).slice(0, extraCount)\n        : []\n    }\n    const findTargets = (source) =>\n      Object.keys(allImages).filter((key) =>\n        (allImages[key].match[gameMode] || [key]).includes(source)\n      )\n\n    const initialMatches = targets.map(findMatch)\n    const sources = shuffle([\n      ...initialMatches,\n      ...extraChoices(initialMatches),\n    ])\n    const matches = sources.reduce(\n      (all, x) => ({ ...all, [x]: findTargets(x) }),\n      {}\n    )\n    return {\n      attempt: retries,\n      targets,\n      sources,\n      matches,\n    }\n  }, [allImages, matchCount, retries, gameMode, choiceCount])\n\n  useEffect(() => {\n    const getMatchData = async () => {\n      const _matchData = await matchData()\n      setAllImages(_matchData)\n    }\n\n    getMatchData() // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    setModel(resetModel())\n  }, [retries, resetModel])\n\n  if (matchCount > choiceCount) {\n    return <div>choiceCount must be the same or more than matchCount</div>\n  }\n\n  const retryGame = () => setRetries((prev) => prev + 1)\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <MatchLayout model={model} gameMode={gameMode} onRetry={retryGame} />\n    </DndProvider>\n  )\n}\n\nexport default Match\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useState, useEffect, useRef, useMemo } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { gameData, isDefined } from \"../../util/data\"\nimport { clean, styleDiv, isDef } from \"../../util/misc\"\nimport {\n  Centered,\n  ToggleButton,\n  GameButton,\n  Sidecar,\n  RangeSlider,\n  ControlLabel,\n} from \"./Util\"\nimport { PieChart } from \"react-minimal-pie-chart\"\nimport SimpleImageSlider from \"react-simple-image-slider\"\nimport Select from \"react-select\"\nimport \"./Game.css\"\n\nconst PRACTICE_IMAGE_SIZE = {\n  container: {\n    width: 661,\n    height: 600,\n  },\n  image: {\n    width: 300,\n    height: 300,\n  },\n}\n\nconst AI_NAME = \"COMPY\"\nconst COLORS = {\n  yes: \"#4caf50\",\n  no: \"#dc004d\",\n  neutral: \"antiquewhite\",\n}\n\nconst resetGame = async (original, updateFn, setCurrentIndex, demo) => {\n  const updated = { ...original }\n  updated.version = isDefined(updated.version) ? updated.version + 1 : 1\n  updated.practiceRoundNumber = demo\n    ? 3\n    : updated.practiceRoundNumber === 1\n    ? 2\n    : 1\n  console.log(`Practice reset to Round ${updated.practiceRoundNumber}`)\n  const currentGameData = await generateGameData(updated.practiceRoundNumber)\n  if (updated.practiceRound && Object.keys(updated.practiceRound).length) {\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n  }\n  updated.currentGameData = currentGameData\n  setCurrentIndex(0)\n  updated.practiceRound = currentGameData.scrollingImages.reduce(\n    (all, x, i) => ({\n      ...all,\n      [x.path]: { ...x },\n    }),\n    {}\n  )\n  updateFn(updated)\n}\n\nconst generateGameData = async (practiceRoundNumber) => {\n  const _gameData = await gameData()\n  const images = _gameData.practiceOptions[practiceRoundNumber].reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  const scrollingImages = Object.keys(images).map((i) => ({\n    ...images[i],\n    url: `img/${images[i].path}`,\n  }))\n  return {\n    gameData: _gameData,\n    images,\n    scrollingImages,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst answer = (property, gameSettings, img) =>\n  !(img in gameSettings.practiceRound)\n    ? null\n    : gameSettings.practiceRound[img][property]\n\nconst allQuestionsAnswered = (gameSettings) =>\n  Object.keys(gameSettings.practiceRound).reduce(\n    (all, x) => all && isDefined(gameSettings.practiceRound[x].seenbefore),\n    true\n  )\n\nconst StyledPracticeResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0 10px 10px;\n  border-top: 1px solid lightgray;\n  background-color: ${(props) => (props.current ? \"lightgray\" : \"none\")};\n  transition: background-color 1s ease;\n`\n\nconst PracticeResultTitle = styled.b`\n  color: ${(props) => props.color};\n  &:before {\n    content: \"${(props) => (props.current ? \"> \" : \"\")}\";\n  }\n`\n\nconst PracticeResult = ({\n  question: { path, correct, agree, seenbefore },\n  questionNumber,\n  isCurrentImage,\n}) => {\n  const answer = !isDefined(seenbefore)\n    ? \"waiting\"\n    : (seenbefore && correct) || (!seenbefore && !correct)\n    ? \"correct\"\n    : \"incorrect\"\n  const displaySettings = {\n    waiting: {\n      text: \"Waiting on your guess...\",\n    },\n    correct: {\n      text: `You know ${AI_NAME} pretty well!`,\n      color: COLORS.yes,\n    },\n    incorrect: {\n      text: `Sorry, you don't know ${AI_NAME} very well.`,\n      color: COLORS.no,\n    },\n  }\n  const display = displaySettings[answer]\n  return (\n    <StyledPracticeResult current={isCurrentImage}>\n      <PracticeResultTitle\n        color={display.color}\n        current={isCurrentImage}\n        title={path}\n      >\n        Image {questionNumber}\n      </PracticeResultTitle>\n      <div>{display.text}</div>\n    </StyledPracticeResult>\n  )\n}\n\nconst StyledEndButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  button {\n    margin-top: 5px;\n  }\n`\nconst EndButtons = ({ resetGame }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const playGame = () => {\n    const updated = { ...gameSettings }\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n    updated.practiceRound = {}\n    setGameSettings(updated)\n  }\n  return (\n    <StyledEndButtons>\n      <GameButton onClick={resetGame}>More Practice</GameButton>\n      <Link to=\"/20q/easy\">\n        <GameButton onClick={playGame}>Play Game!</GameButton>\n      </Link>\n    </StyledEndButtons>\n  )\n}\n\nconst StylePracticeResults = styled(Sidecar)`\n  border-top: 1px solid slategray;\n  border-bottom: 1px solid slategray;\n  border-right: 1px solid slategray;\n  border-top-right-radius: 15px;\n  padding: 10px;\n  border-bottom-right-radius: 15px;\n  min-width: 350px;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst PracticeResultsTitle = styled.div`\n  border-bottom: 2px solid darkgray;\n  font-size: 1.9rem;\n  font-weight: 500;\n  text-align: center;\n  padding-bottom: 12px;\n  margin: 10px 0;\n  text-shadow: 2px 2px 2px slategray;\n`\n\nconst PracticeResultsSubtitle = styled.h4`\n  margin: 10px;\n`\n\nconst PracticeResults = ({ resetGame, currentImageIndex, demo }) => {\n  const [gameSettings] = useContext(GameContext)\n  return (\n    <StylePracticeResults>\n      <div>\n        <PracticeResultsTitle>\n          Practice Round {!demo ? gameSettings.practiceRoundNumber : null}\n        </PracticeResultsTitle>\n        <PracticeResultsSubtitle>\n          Make a selection for each image:\n        </PracticeResultsSubtitle>\n        {Object.keys(gameSettings.practiceRound).map((x, i) => (\n          <PracticeResult\n            key={i}\n            questionNumber={i + 1}\n            isCurrentImage={i === currentImageIndex}\n            question={gameSettings.practiceRound[x]}\n          />\n        ))}\n      </div>\n      <div>\n        {!demo && allQuestionsAnswered(gameSettings) ? (\n          <EndButtons resetGame={resetGame} />\n        ) : null}\n      </div>\n    </StylePracticeResults>\n  )\n}\n\nconst ImageSliderOverrideStyles = ({ images, currentIndex }) => {\n  const [gameSettings] = useContext(GameContext)\n  const Selectors = {\n    bullet: (index) =>\n      `#practice-container button[data-id*=\"bullet\"]:nth-child(${index + 1})`,\n    image: () =>\n      '#practice-container div[style*=\"background-size: cover\"][style*=\"background-image:\"][style*=\".png\"]',\n  }\n\n  const _bulletStyle = (index, colors) => {\n    const border =\n      currentIndex === index ? \"; border: 2px solid blue !important;\" : \"\"\n    return `${Selectors.bullet(index)} { background-color: ${\n      colors[0]\n    } !important; ${border} }\n        `\n  }\n  const bulletStyles = () =>\n    images.map((_, i) => {\n      const seenbefore = answer(\"seenbefore\", gameSettings, images[i].path)\n      const toColor = (x) => (x == null ? \"white\" : x ? COLORS.yes : COLORS.no)\n      return _bulletStyle(i, [toColor(seenbefore)])\n    })\n\n  const imageSize = {\n    width:\n      PRACTICE_IMAGE_SIZE.image.width / PRACTICE_IMAGE_SIZE.container.width,\n    height:\n      PRACTICE_IMAGE_SIZE.image.height / PRACTICE_IMAGE_SIZE.container.height,\n  }\n  const imagePercent = {\n    width: parseInt(imageSize.width * 100),\n    height: parseInt(imageSize.height * 100),\n  }\n  const paddingLeft =\n    (PRACTICE_IMAGE_SIZE.container.width - PRACTICE_IMAGE_SIZE.image.width) / 2\n  const paddingTop =\n    (PRACTICE_IMAGE_SIZE.container.height - PRACTICE_IMAGE_SIZE.image.height) /\n    2\n\n  const imageStyles = () => [\n    `${Selectors.image()} {left: ${paddingLeft}px !important; top: ${paddingTop}px !important; width: ${\n      imagePercent.width\n    }% !important; height: ${\n      imagePercent.height\n    }% !important; border-radius: 5px; box-shadow: 0 0 5px #000000;}`,\n  ]\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: [...bulletStyles(), ...imageStyles()].join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst StyledQuestionWithButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  height: 60px;\n  margin-bottom: 45px;\n  pointer-events: all;\n  &:first-child {\n    margin-left: 15px;\n  }\n  &:last-child {\n    margin-right: 15px;\n  }\n`\nconst StyledQuestionWithButtonsButton = styled.div`\n  padding-top: 5px;\n  padding-bottom: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\nconst QuestionText = styled.div`\n  font-size: 0.9rem;\n`\nconst QuestionWithButtons = ({ question, onAnswer, defaultValue }) => (\n  <StyledQuestionWithButtons>\n    <QuestionText>{question}</QuestionText>\n    <StyledQuestionWithButtonsButton>\n      <ToggleButton\n        defaultValue={defaultValue}\n        onToggle={onAnswer}\n        trueBgColor=\"white\"\n        falseBgColor=\"white\"\n        trueLabel=\"YES\"\n        falseLabel=\"NO\"\n      />\n    </StyledQuestionWithButtonsButton>\n  </StyledQuestionWithButtons>\n)\n\nconst StyledTuningSideTile = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 130px;\n  width: 180px;\n  height: 295px;\n`\n\nconst TuningSideTile = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  padding: 10px;\n  color: white;\n  border-radius: 15px;\n  width: 75%;\n  text-align: center;\n`\n\nconst StyledProbability = styled(StyledTuningSideTile)`\n  right: 0px;\n`\n\nconst Probability = ({ previousLabel, label, value }) => {\n  const percent = (value * 100).toFixed(1)\n  return (\n    <StyledProbability>\n      <Centered>\n        <TuningSideTile>\n          <div>\n            {AI_NAME} says <br />\n            <PictureLabel\n              changed={isDef(previousLabel) && label !== previousLabel}\n            >\n              {label}\n            </PictureLabel>{\" \"}\n            with a confidence of\n          </div>\n          <div style={{ margin: \"0 30px 0 30px\" }}>\n            <PieChart\n              animate\n              reveal={100}\n              data={[\n                { value: percent, color: \"#ccc\" },\n                { value: 100 - percent, color: \"#777\", hideLabel: true },\n              ]}\n              totalValue={100}\n              lineWidth={30}\n              label={({ dataEntry }) =>\n                dataEntry.hideLabel ? null : `${dataEntry.value}%`\n              }\n              labelStyle={{\n                fontSize: \"1.1rem\",\n                fill: \"white\",\n              }}\n              labelPosition={0}\n            />\n          </div>\n        </TuningSideTile>\n      </Centered>\n    </StyledProbability>\n  )\n}\n\nconst StyledTuningsOuter = styled(StyledTuningSideTile)`\n  left: 0px;\n`\n\nconst StyledTuningSelect = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`\n\nconst TuningSelect = (props) => {\n  const selectStyles = {\n    container: (provided) => ({ ...provided, width: \"100%\" }),\n    indicatorSeparator: (provided) => ({ ...provided, display: \"none\" }),\n    option: (provided, { data }) => ({\n      ...provided,\n      textAlign: \"left\",\n      whiteSpace: \"nowrap\",\n      color: \"black\",\n      fontSize: \"0.9rem\",\n      \":before\": {\n        content: `${data.icon ? `'${data.icon}'` : \"''\"}`,\n        width: \"15px\",\n        padding: \"0 5px 0 0 !important\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n      },\n    }),\n    menu: (provided) => ({\n      ...provided,\n      width: \"fit-content\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      fontSize: \"0.8rem\",\n    }),\n  }\n\n  return <Select styles={selectStyles} isSearchable={false} {...props} />\n}\n\nconst Tunings = ({ image, getImageDiv, onLoadImageVariant }) => {\n  const defaultStyle = {\n    noise: 0,\n  }\n  const [styles, setStyles] = useState(defaultStyle)\n  const [selectedVariant, setSelectedVariant] = useState(null)\n  const changeImage = (key) =>\n    styleDiv(getImageDiv, {\n      transition: \"none\",\n      \"background-image\":\n        !styles[key] && key in image.variants && \"path\" in image.variants[key]\n          ? `url(\"img/${image.variants[key].path}\")`\n          : `url(\"img/${image.path}\")`,\n    })\n\n  const variantLabel = (key) => {\n    return (image.variants[key] || image).label\n  }\n  const resetImage = () => {\n    console.log(\"Resetting image....\")\n    changeImage(\"unknown\")\n    onLoadImageVariant({})\n    setStyles({ ...defaultStyle })\n  }\n\n  const updateImage = (key, additionalStyles = {}) => {\n    const toggle = !styles[key]\n    changeImage(key)\n    onLoadImageVariant(\n      clean({\n        probability: toggle\n          ? key in image.variants\n            ? image.variants[key].probability\n            : null\n          : null,\n        label: variantLabel(key),\n      })\n    )\n    setStyles({ ...defaultStyle, [key]: toggle, ...additionalStyles })\n  }\n  const addNoise = (noiseLevel) =>\n    updateImage(`noise${noiseLevel}`, { noise: noiseLevel })\n\n  const augmentVariants = Object.keys(image.variants || {}).filter(\n    (x) => !x.startsWith(\"noise\")\n  )\n  const optionDecorations = {\n    hflip: {\n      label: () => \"Horizontal Flip\",\n      icon: () => \"\\\\21C4\",\n    },\n    vflip: {\n      label: () => \"Vertical Flip\",\n      icon: () => \"\\\\21C5\",\n    },\n    \"rot*\": {\n      label: (x) => `${x.replace(\"rot\", \"Rotate \")}°`,\n      icon: () => \"\\\\21BB\",\n    },\n  }\n\n  const noop = () => undefined\n  const decorate = (object, property, decoration, key) =>\n    (object[property] = (decoration[property] || noop)(key))\n\n  const decorateOption = (key) => {\n    const defaults = {\n      value: key,\n      label: key,\n      fn: updateImage.bind(null, key),\n    }\n    let decoration = undefined\n    if (key in optionDecorations) {\n      decoration = optionDecorations[key]\n    } else {\n      const decorationKey = Object.keys(optionDecorations)\n        .filter((x) => x.includes(\"*\"))\n        .find((x) => key.startsWith(x.replace(\"*\", \"\")))\n      if (decorationKey) {\n        decoration = optionDecorations[decorationKey]\n      }\n    }\n\n    if (decoration) {\n      decorate(defaults, \"label\", decoration, key)\n      decorate(defaults, \"icon\", decoration, key)\n    }\n\n    return defaults\n  }\n\n  const options = [\n    {\n      value: \"normal\",\n      label: \"Normal\",\n      fn: resetImage,\n    },\n    ...augmentVariants.map(decorateOption),\n  ]\n\n  const noiseLevelVariants = Object.keys(image.variants || {})\n    .filter((x) => x.startsWith(\"noise\"))\n    .map((x) => parseInt(x.replace(\"noise\", \"\")))\n  const noiseLevels = [0, ...noiseLevelVariants]\n\n  return (\n    <StyledTuningsOuter>\n      <Centered>\n        <TuningSideTile>\n          <ControlLabel>Apply Filter:</ControlLabel>\n          <StyledTuningSelect>\n            <TuningSelect\n              options={options}\n              value={selectedVariant || options[0]}\n              onChange={(x) => {\n                setSelectedVariant(x)\n                x.fn()\n              }}\n            />\n          </StyledTuningSelect>\n          <RangeSlider\n            label=\"Add Noise:\"\n            step={1}\n            min={0}\n            max={Math.max(...noiseLevels)}\n            value={styles.noise}\n            onChange={(level) => {\n              setSelectedVariant(null)\n              addNoise(level)\n            }}\n          />\n        </TuningSideTile>\n      </Centered>\n    </StyledTuningsOuter>\n  )\n}\n\nconst Caption = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  height: 35px;\n  border-bottom-right-radius: 8px;\n  border-top-left-radius: 15px;\n  font-size: 1.4rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\nconst StyledSwitchMode = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  border-bottom-left-radius: 8px;\n  font-size: 1.2rem;\n  height: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\nconst SwitchModeButton = styled.button`\n  border: 0;\n  outline: none;\n  background: none;\n  font-size: 1.2rem;\n  color: ${({ selected }) => (selected ? \"black\" : \"white\")};\n  flex: 1;\n  font-family: Futura;\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: 1px 1px 1px black;\n  }\n`\n\nconst SwitchMode = ({ mode, onSwitchMode }) => {\n  const labels = {\n    trick: \"Back to Game\",\n  }\n  // const label = mode in labels ? labels[mode] : `Trick ${AI_NAME}?`\n  const label = mode in labels ? labels[mode] : `Learn More`\n  const toModes = {\n    trick: null,\n  }\n  const toMode = mode in toModes ? toModes[mode] : \"trick\"\n  return (\n    <StyledSwitchMode>\n      <SwitchModeButton onClick={() => onSwitchMode(toMode)}>\n        {label}\n      </SwitchModeButton>\n    </StyledSwitchMode>\n  )\n}\n\nconst StyledPracticeVoteButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  position: absolute;\n  pointer-events: none;\n  width: 100%;\n  bottom: 0px;\n  z-index: 1;\n`\n\nconst PictureLabel = styled.div`\n  border-radius: 5px;\n  display: inline-block;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: ${(props) => (props.changed ? \"white\" : \"#333\")};\n  background-color: ${(props) => (props.changed ? \"#dc004d\" : \"white\")};\n  border: 1px solid lightgray;\n  border-color: ${(props) => (props.changed ? \"antiquewhite\" : \"lightgray\")};\n  transition: background-color 1s ease;\n  font-style: italic;\n`\n\nconst ImageControls = ({ getImageDiv, images, index, onChange }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const fallbackProbability = 0.5\n  const [displayMode, setDisplayMode] = useState(null)\n  const [loadedImage, setLoadedImage] = useState({})\n  const image = images[index]\n  const defaultLoadedImageState = useMemo(\n    () =>\n      image\n        ? {\n            probability: image.probability || fallbackProbability,\n            label: image.label,\n          }\n        : { probability: fallbackProbability, label: \"unknown\" },\n    [image]\n  )\n  useEffect(() => {\n    setLoadedImage(defaultLoadedImageState)\n  }, [index, defaultLoadedImageState])\n\n  if (!images) return null\n\n  const resetImage = () => {\n    styleDiv(getImageDiv, {\n      \"background-image\": `url(\"img/${image.path}\")`,\n    })\n    setLoadedImage(defaultLoadedImageState)\n  }\n  const onClickUpdateProperty = (property, guessed) => {\n    const updated = { ...gameSettings }\n    updated.practiceRound[images[index].path][property] = guessed\n    setGameSettings(updated)\n  }\n  const onSeenBeforeClick = onClickUpdateProperty.bind(null, \"seenbefore\")\n\n  const question = gameSettings.practiceRound[images[index].path]\n  const caption =\n    loadedImage.label === \"deer\" ? (\n      <div>This is a deer, and {AI_NAME} agrees</div>\n    ) : (\n      <div>\n        This is a deer, but {AI_NAME} thinks its a{\" \"}\n        <PictureLabel\n          changed={\n            isDef(loadedImage.previousLabel) &&\n            loadedImage.label !== loadedImage.previousLabel\n          }\n          title={`Previous: ${loadedImage.previousLabel || \"none\"}`}\n        >\n          {loadedImage.label}\n        </PictureLabel>\n      </div>\n    )\n  return (\n    <>\n      {displayMode !== \"trick\" ? <Caption>{caption}</Caption> : null}\n      {images[index].variants ? (\n        <SwitchMode\n          mode={displayMode}\n          onSwitchMode={(mode) => {\n            resetImage()\n            setDisplayMode(mode)\n            onChange(clean({ displayMode: mode }))\n          }}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Tunings\n          image={images[index]}\n          getImageDiv={getImageDiv}\n          onLoadImageVariant={(x) => {\n            setLoadedImage({\n              ...defaultLoadedImageState,\n              ...x,\n              previousLabel: loadedImage.label,\n            })\n            onChange({ ...defaultLoadedImageState, ...x, displayMode })\n          }}\n          probability={loadedImage.probability}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Probability\n          value={loadedImage.probability}\n          previousLabel={loadedImage.previousLabel}\n          label={loadedImage.label}\n        />\n      ) : null}\n      <ImageSliderOverrideStyles images={images} currentIndex={index} />\n      {displayMode !== \"trick\" ? (\n        <StyledPracticeVoteButtons>\n          <QuestionWithButtons\n            question={`Do you think ${AI_NAME} was trained on this image?`}\n            onAnswer={onSeenBeforeClick.bind(null)}\n            defaultValue={question.seenbefore}\n          />\n        </StyledPracticeVoteButtons>\n      ) : null}\n    </>\n  )\n}\n\nconst StyledPractice = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst StyledPracticeGame = styled.div`\n  position: relative;\n`\n\nconst TwentyQuestionsPractice = ({ demo, hideSideBar }) => {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const [imageState, setImageState] = useState({})\n  const reset = () =>\n    resetGame(gameSettings, setGameSettings, setCurrentIndex, demo)\n  const sliderRef = useRef()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(reset, [])\n\n  const currentImage = () => {\n    const img = sliderRef.current.querySelectorAll(\n      'div[style*=\"background-image:\"][style*=\".png\"]'\n    )[1] // Take the second image, the first is the transition image\n    return img\n  }\n\n  if (\n    !gameSettings.currentGameData ||\n    !gameSettings.currentGameData.scrollingImages\n  )\n    return null\n\n  return gameSettings.currentGameData ? (\n    <Centered>\n      <StyledPractice id=\"practice-container\">\n        <StyledPracticeGame ref={sliderRef}>\n          <ImageControls\n            getImageDiv={currentImage}\n            images={gameSettings.currentGameData.scrollingImages}\n            index={currentIndex}\n            onChange={setImageState}\n          />\n          <SimpleImageSlider\n            key={gameSettings.version}\n            width={PRACTICE_IMAGE_SIZE.container.width}\n            height={PRACTICE_IMAGE_SIZE.container.height}\n            images={gameSettings.currentGameData.scrollingImages}\n            showBullets={false}\n            showNavs={imageState.displayMode !== \"trick\"}\n            navStyle={2}\n            onStartSlide={(idx) => {\n              setCurrentIndex(idx - 1)\n            }}\n            style={{\n              borderBottomLeftRadius: !hideSideBar ? 15 : null,\n              borderTopLeftRadius: !hideSideBar ? 15 : null,\n              backgroundColor: null,\n              border: \"1px solid slategray\",\n            }}\n          />\n        </StyledPracticeGame>\n        {!hideSideBar ? (\n          <PracticeResults\n            resetGame={reset}\n            currentImageIndex={currentIndex}\n            demo={demo}\n          />\n        ) : null}\n      </StyledPractice>\n    </Centered>\n  ) : null\n}\n\nexport default TwentyQuestionsPractice\n","import { Centered, GameButton } from \"./Util\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background-color: antiquewhite;\n  box-shadow: 0 0 4px gray;\n  text-align: center;\n  padding: 40px;\n`\n\nconst Title = styled.h1`\n  font-family: Futura;\n  font-size: 4rem;\n`\n\nconst GameCards = styled.div`\n  display: inline;\n`\n\nconst GameCardContainer = styled.div`\n  display: inline-block;\n  border: 1px solid gray;\n  background-color: lightslategray;\n  color: white;\n  text-shadow: 2px 2px 2px darkslategray;\n  border-radius: 15px;\n  padding: 10px;\n  /* width: 180px; */\n  margin-right: 10px;\n  box-shadow: 1px 1px 4px grey;\n`\n\nconst GameCardTitle = styled.div`\n  font-size: 1.6rem;\n  margin: 15px;\n`\n\nconst GameCardButton = styled(GameButton)`\n  margin-right: 10px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  margin-right: -10px;\n`\n\nconst GameCard = ({ title, links }) => {\n  return (\n    <GameCardContainer>\n      <GameCardTitle>{title}</GameCardTitle>\n      <ButtonContainer>\n        {links.map((x) => (\n          <Link key={x.to} to={x.to}>\n            <GameCardButton\n              {...{ \"data-tip\": x.disabled ? \"Coming soon\" : null }}\n            >\n              {x.title || \"Play\"}\n            </GameCardButton>\n          </Link>\n        ))}\n      </ButtonContainer>\n    </GameCardContainer>\n  )\n}\n\nconst games = [\n  {\n    title: \"20 Questions\",\n    links: [\n      { title: \"Learn\", to: \"/20q/learn\" },\n      { title: \"Easy\", to: \"/20q/easy\" },\n      { title: \"Hard\", to: \"/20q/hard\" },\n    ],\n  },\n  {\n    title: \"Match Game\",\n    links: [\n      { title: \"Learn\", to: \"/match/learn\" },\n      { title: \"Easy\", to: \"/match/easy\" },\n      { title: \"Hard\", to: \"/match/hard\" },\n    ],\n  },\n]\n\nconst Stack = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst OrScroll = styled.div`\n  margin: 20px;\n  text-align: center;\n  &::after {\n    font-size: 1.4rem;\n    content: \"or scroll down to learn the story behind the games...\";\n  }\n`\n\nconst Menu = () => {\n  return (\n    <>\n      <Centered>\n        <Stack>\n          <Container>\n            <Title>Play A Game</Title>\n            <GameCards>\n              {games.map((x) => (\n                <GameCard key={x.title} {...x} />\n              ))}\n            </GameCards>\n            {/* <p title={`Running in ${process.env.NODE_ENV} mode`}>\n          COMPY has seen a lot of deer images before, and he is really good at\n          identifying a deer when he sees one.\n        </p>\n        <p>\n          Can you tell which of the following deer images COMPY may have seen?\n        </p>\n        <p>\n          Click Practice to scroll through the pictures one at a time and test\n          your knowledge about COMPY.\n        </p>\n        <p>\n          When you are ready, you can click Play to play a game of who knows\n          COMPY best.\n        </p>\n        */}\n          </Container>\n          <OrScroll />\n        </Stack>\n      </Centered>\n    </>\n  )\n}\n\nexport default Menu\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { ResponsiveWaffle } from \"@nivo/waffle\"\nimport { ResponsivePie } from \"@nivo/pie\"\nimport { ResponsiveLine } from \"@nivo/line\"\nimport { isDef } from \"../../util/misc\"\nimport { RangeSlider } from \"../game/Util\"\n\nexport const ChartData = {\n  line: (results, { groups }) => {\n    const starter = groups.reduce(\n      (all, g) => ({\n        ...all,\n        [g.label]: { id: g.label, color: g.color, data: [] },\n      }),\n      {}\n    )\n    const range = {\n      x: {\n        min: 99999,\n        max: -99999,\n      },\n      y: {\n        min: 99999,\n        max: -99999,\n      },\n    }\n    const data = Object.values(\n      (results || []).reduce((all, item, i) => {\n        const toData = (y) => ({\n          x: i,\n          y,\n        })\n        groups.forEach((g) => {\n          const data = toData(g.fn(item))\n          range.x.min = Math.min(range.x.min, data.x)\n          range.y.min = Math.min(range.y.min, data.y)\n          range.x.max = Math.max(range.x.min, data.x)\n          range.y.max = Math.max(range.y.max, data.y)\n          all[g.label].data.push(data)\n        })\n        return all\n      }, starter)\n    )\n    return {\n      range,\n      data,\n    }\n  },\n  rollup: (results, { title, type, groups, totalFn }, threshold) => {\n    const result = results[threshold]\n    return {\n      groups,\n      title,\n      type,\n      colors: groups.map((x) => x.color),\n      data: [\n        ...groups.map((g) => ({\n          id: g.label,\n          label: g.label,\n          value: g.fn(result),\n        })),\n      ],\n      total: totalFn ? totalFn(result) : 0,\n    }\n  },\n}\n\nconst ChartContainer = styled.div`\n  height: ${({ height = 150 }) => `${height}px`};\n  width: ${({ width = 150 }) => `${width}px`};\n  background-color: white;\n  border: 1px solid lightgray;\n  border-radius: 5px;\n  margin: 5px;\n`\n\nconst reducePropWithFn = (fn, propKey, data) =>\n  data && data.length\n    ? data.reduce(\n        (cumulative, v) => fn(...v.data.map((d) => d[propKey]), cumulative),\n        0\n      )\n    : 0\n\nconst Thresholds = {\n  maxXValue: reducePropWithFn.bind(null, Math.max, \"x\"),\n  maxYValue: reducePropWithFn.bind(null, Math.max, \"y\"),\n  minXValue: reducePropWithFn.bind(null, Math.min, \"x\"),\n  minYValue: reducePropWithFn.bind(null, Math.min, \"y\"),\n}\n\nconst pointsAtThreshold = (series, threshold) =>\n  series.map((s) => ({\n    ...s.data[threshold].position,\n    color: s.color,\n    label: s.id,\n  }))\n\nconst Threshold = ({\n  data,\n  dataRange,\n  threshold,\n  xScale,\n  yScale,\n  columnWidth,\n  series,\n}) => {\n  if (!isDef(data) || !isDef(threshold) || !isDef(columnWidth)) return null\n  const beyondYBuffer = 5\n  const [columnX1, columnY1, columnX2, columnY2] = [\n    xScale(threshold),\n    yScale(-beyondYBuffer),\n    xScale(threshold),\n    yScale(Thresholds.maxYValue(data) + beyondYBuffer),\n  ]\n\n  const minXEdge = xScale(dataRange?.x?.min) - xScale(2)\n  const maxXEdge = xScale(dataRange?.x?.max) + xScale(1)\n  const linePadding = columnWidth / 2.0 + 1\n  const columnPolyPoints = [\n    `${columnX1 - linePadding},${columnY1}`,\n    `${columnX1 - linePadding},${columnY2}`,\n    `${columnX2 + linePadding},${columnY2}`,\n    `${columnX2 + linePadding},${columnY1}`,\n  ]\n  const leftAreaPolyPoints = [\n    `${minXEdge},${columnY1}`,\n    `${minXEdge},${columnY2}`,\n    `${columnX1 - linePadding},${columnY2}`,\n    `${columnX1 - linePadding},${columnY1}`,\n  ]\n  const rightAreaPolyPoints = [\n    `${columnX2 + linePadding},${columnY2}`,\n    `${columnX2 + linePadding},${columnY1}`,\n    `${maxXEdge},${columnY1}`,\n    `${maxXEdge},${columnY2}`,\n  ]\n  const polyPoints = (points) => points.join(\" \")\n\n  const leftOfSliderLabel = \"LESS\"\n  const rightOfSliderLabel = \"MORE\"\n  const outsideAreaColor = \"rgba(100,100,100,.2)\"\n  const sliderTopLabel = null\n\n  const rightLabelX = maxXEdge - (maxXEdge - columnX2) / 2.0\n  const leftLabelX = columnX1 / 2 + minXEdge / 2\n  return isNaN(columnX1) ||\n    isNaN(columnX2) ||\n    isNaN(columnY1) ||\n    isNaN(columnY2) ? null : (\n    <>\n      <>\n        {leftOfSliderLabel && threshold > dataRange.x.min ? (\n          <text\n            x={leftLabelX}\n            y={-7}\n            textAnchor=\"middle\"\n            style={{ fontSize: \".7rem\" }}\n          >\n            &#8592; {leftOfSliderLabel}\n          </text>\n        ) : null}\n        {sliderTopLabel ? (\n          <text\n            x={columnX1}\n            y={-7}\n            textAnchor=\"middle\"\n            style={{ fontSize: \".63rem\" }}\n          >\n            {sliderTopLabel}\n          </text>\n        ) : null}\n        {rightOfSliderLabel && threshold < dataRange.x.max ? (\n          <text\n            x={rightLabelX}\n            y={-7}\n            textAnchor=\"middle\"\n            style={{ fontSize: \".7rem\" }}\n          >\n            {rightOfSliderLabel} &#8594;\n          </text>\n        ) : null}\n      </>\n      <polygon\n        points={polyPoints(columnPolyPoints)}\n        fill=\"rgba(0,0,0,0)\"\n        stroke=\"rgba(20,20,20,1)\"\n        strokeWidth=\"1.5\"\n      />\n      <polygon\n        points={polyPoints(leftAreaPolyPoints)}\n        fill={outsideAreaColor}\n      />\n      <polygon\n        points={polyPoints(rightAreaPolyPoints)}\n        fill={outsideAreaColor}\n      />\n      {pointsAtThreshold(series, threshold).map((p, i) => (\n        <React.Fragment key={`highlighted-point-${p.label}`}>\n          <circle cx={p.x} cy={p.y} r={6} fill={p.color} />\n          <text\n            x={p.x + 11}\n            y={p.y}\n            dominantBaseline={\n              i % 2 === 0 ? \"text-after-edge\" : \"text-before-edge\"\n            }\n            style={{ fontSize: \".9rem\" }}\n          >\n            {p.label}\n          </text>\n        </React.Fragment>\n      ))}\n    </>\n  )\n}\n\nconst Lines = ({ model, columnWidth = 15, threshold, left = 45 }) => {\n  return model ? (\n    <ResponsiveLine\n      data={model.data}\n      margin={{ top: 20, bottom: 30, right: 20, left }}\n      colors={{ datum: \"color\" }}\n      threshold={threshold}\n      columnWidth={columnWidth}\n      dataRange={model.range}\n      enablePoints={false}\n      enableSlices=\"x\"\n      axisLeft={{\n        tickValues: 5,\n        legend: \"Model Accuracy\",\n        legendOffset: -37,\n        legendPosition: \"middle\",\n      }}\n      yScale={{\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n      }}\n      layers={[\n        \"grid\",\n        \"markers\",\n        \"axes\",\n        \"lines\",\n        \"points\",\n        Threshold,\n        \"slices\",\n        \"crosshair\",\n      ]}\n    />\n  ) : null\n}\n\nconst StyledChartTitle = styled.div`\n  font-weight: bold;\n  font-size: 0.8rem;\n  text-align: center;\n  margin: 5px 0;\n`\nconst WaffleDot = ({\n  size,\n  x,\n  y,\n  color,\n  fill,\n  opacity,\n  borderWidth,\n  borderColor,\n  onHover,\n  onLeave,\n}) => (\n  <circle\n    r={size / 2}\n    cx={x + size / 2}\n    cy={y + size / 2}\n    fill={fill || color}\n    strokeWidth={borderWidth}\n    stroke={borderColor}\n    opacity={opacity}\n    onMouseEnter={onHover}\n    onMouseMove={onHover}\n    onMouseLeave={onLeave}\n  />\n)\nconst Waffle = ({ model }) => {\n  if (!model.data) return null\n  const total = 100 // Hard coded to get the desired dot mapping\n  return (\n    <>\n      {model.title ? <StyledChartTitle>{model.title}</StyledChartTitle> : null}\n      <ResponsiveWaffle\n        data={model.data}\n        total={total}\n        rows={Math.sqrt(total)}\n        columns={Math.sqrt(total)}\n        colors={model.colors}\n        margin={{ top: 0, left: 10, right: 10 }}\n        cellComponent={WaffleDot}\n        fillDirection=\"top\"\n        emptyColor=\"rgba(0,0,0,0)\"\n      />\n    </>\n  )\n}\n\nconst PieCenter = ({\n  dataWithArc,\n  centerX,\n  centerY,\n  fn = () => 0,\n  fontSize = \"1.5rem\",\n}) => (\n  <text\n    x={centerX}\n    y={centerY}\n    textAnchor=\"middle\"\n    dominantBaseline=\"central\"\n    style={{\n      fontSize,\n    }}\n  >\n    {fn(dataWithArc)}\n  </text>\n)\n\n// const PieCenterTotal = (props) => (\n//   <PieCenter\n//     {...props}\n//     fn={(data) => data.reduce((all, x) => all + x.value, 0)}\n//   />\n// )\n\nconst PieCenterPercent = (props) => (\n  <PieCenter\n    {...props}\n    fn={(data) => {\n      const total = data.reduce((all, x) => all + x.value, 0)\n      const percent = ((data[0].value / total) * 100).toFixed()\n      return `${percent}%`\n    }}\n    fontSize=\"1rem\"\n  />\n)\n\nconst Pie = ({ model, showTotal = true }) => {\n  return (\n    <>\n      {model.title ? <StyledChartTitle>{model.title}</StyledChartTitle> : null}\n      <ResponsivePie\n        data={model.data}\n        margin={{ top: 35, right: 120, bottom: 80, left: 120 }}\n        colors={model.colors}\n        innerRadius={0.5}\n        enableRadialLabels={false}\n        padAngle={0.5}\n        // cornerRadius={2}\n        layers={[\n          \"slices\",\n          \"sliceLabels\",\n          \"radialLabels\",\n          \"legends\",\n          showTotal ? PieCenterPercent : null,\n        ]}\n        // sliceLabel={(x) => (x.value ? x.value : null)}\n        sliceLabel={(x) => null}\n        sliceLabelsTextColor=\"white\"\n      />\n    </>\n  )\n}\n\nconst QuadChart = ({ model }) =>\n  model.type === \"pie\" ? (\n    <Pie model={model} />\n  ) : model.type === \"waffle\" ? (\n    <Waffle model={model} />\n  ) : null\n\nconst LegendPart = ({ color, text, index }) => {\n  const swatch = (\n    <div\n      style={{\n        width: 14,\n        height: 14,\n        borderRadius: \"50%\",\n        backgroundColor: color,\n        margin: \"0 5px\",\n      }}\n    />\n  )\n  const colorPosition = index % 2 === 0 ? \"right\" : \"left\"\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        textAlign: colorPosition,\n        justifyContent: colorPosition === \"left\" ? \"flex-start\" : \"flex-end\",\n        padding: \"1px 0\",\n      }}\n    >\n      {colorPosition === \"left\" ? swatch : null}\n      <span style={{ fontSize: \".6rem\" }}>{text}</span>\n      {colorPosition === \"right\" ? swatch : null}\n    </div>\n  )\n}\n\nconst Legend = ({ model }) => (\n  <div\n    style={{\n      display: \"grid\",\n      gridTemplateColumns: \"50% 50%\",\n    }}\n  >\n    {model.map((x, i) => (\n      <LegendPart key={`legend-part-${i}`} index={i} {...x} />\n    ))}\n  </div>\n)\n\nconst FlexDiv = styled.div`\n  display: flex;\n`\nconst FlexColumns = styled(FlexDiv)`\n  flex-direction: column;\n`\nconst FlexRows = styled(FlexDiv)`\n  flex-direction: row;\n`\nconst ChartSet = ({\n  height = 300,\n  width = 600,\n  threshold,\n  models,\n  sliderStep = 1,\n  sliderLabel,\n  setThreshold,\n  legendModel,\n}) => {\n  const mainChartWidth = width / 2\n  const smallChartHeight = height / 2 - 6\n  const marginLeft = 45\n  return (\n    <FlexDiv>\n      {models?.main?.range?.x?.max ? (\n        <FlexColumns>\n          <ChartContainer height={height} width={mainChartWidth}>\n            <Lines\n              model={models.main}\n              threshold={threshold}\n              left={marginLeft}\n            />\n          </ChartContainer>\n          <RangeSlider\n            label={sliderLabel}\n            labelPosition=\"bottom\"\n            min={models?.main.range.x.min}\n            max={models?.main.range.x.max}\n            step={sliderStep}\n            value={threshold}\n            style={{\n              outline: \"none\",\n              width: mainChartWidth - marginLeft - 20,\n              marginLeft: marginLeft + 6,\n              marginTop: 4,\n            }}\n            handleStyle={{\n              padding: 3,\n              borderRadius: \"0 0 50% 50%\",\n            }}\n            onChange={(level) => setThreshold(level)}\n          />\n        </FlexColumns>\n      ) : null}\n      <FlexColumns>\n        <FlexRows>\n          <ChartContainer height={smallChartHeight}>\n            <QuadChart model={models.quad1} />\n          </ChartContainer>\n          <ChartContainer height={smallChartHeight}>\n            <QuadChart model={models.quad2} />\n          </ChartContainer>\n        </FlexRows>\n        <FlexRows>\n          <ChartContainer height={smallChartHeight}>\n            <QuadChart model={models.quad3} />\n          </ChartContainer>\n          <ChartContainer height={smallChartHeight}>\n            <QuadChart model={models.quad4} />\n          </ChartContainer>\n        </FlexRows>\n        <Legend model={legendModel} />\n      </FlexColumns>\n    </FlexDiv>\n  )\n}\n\nexport default ChartSet\n","import { useEffect, useState } from \"react\"\nimport LabelOnlyDistanceChartSet, {\n  ChartData,\n} from \"./LabelOnlyDistanceChartSet\"\n\nconst Colors = {\n  red: \"#FF4136\",\n  blue: \"#0074D9\",\n  gray: \"gray\",\n  test: \"orange\",\n  train: \"cornflowerblue\",\n}\n\nconst LegendModel = [\n  { color: Colors.red, text: \"TEST\" },\n  { color: Colors.blue, text: \"TRAIN\" },\n]\n\nconst IN_RATE_DIVISOR = 50\nconst CORRECT_RATE_DIVISOR = 100\n\nconst correctRate = (x) =>\n  (x?.test_results?.target_test_fgs_incorrect || 0) +\n  (x?.train_results?.target_train_fgs_correct || 0)\n\nconst ChartModels = {\n  main: {\n    groups: [\n      {\n        label: \"Train\",\n        fn: (x) => x.train_results.target_train_fgs_acc,\n        color: Colors.blue,\n      },\n      {\n        label: \"Test\",\n        fn: (x) => x.test_results.target_test_fgs_acc,\n        color: Colors.red,\n      },\n    ],\n  },\n  quad1: {\n    title: \"Attacked Correctly\",\n    type: \"waffle\",\n    groups: [\n      {\n        label: \"Test\",\n        fn: (x) => x?.test_results?.target_test_fgs_incorrect || 0,\n        color: Colors.red,\n      },\n      {\n        label: \"Train\",\n        fn: (x) => x?.train_results?.target_train_fgs_correct || 0,\n        color: Colors.blue,\n      },\n    ],\n  },\n  quad2: {\n    title: \"Attacked Incorrectly\",\n    type: \"waffle\",\n    groups: [\n      {\n        label: \"Train\",\n        fn: (x) => x?.train_results?.target_train_fgs_incorrect || 0,\n        color: Colors.blue,\n      },\n      {\n        label: \"Test\",\n        fn: (x) => x?.test_results?.target_test_fgs_correct || 0,\n        color: Colors.red,\n      },\n    ],\n  },\n  quad3: {\n    title: \"True IN Rate\",\n    type: \"pie\",\n    groups: [\n      {\n        label: \"IN\",\n        fn: (x) => x?.train_results?.target_train_fgs_correct || 0,\n        color: Colors.blue,\n      },\n      {\n        label: \"OUT\",\n        fn: (x) =>\n          IN_RATE_DIVISOR - (x?.train_results?.target_train_fgs_correct || 0),\n        color: Colors.gray,\n      },\n    ],\n  },\n  quad4: {\n    title: \"Correct Rate\",\n    type: \"pie\",\n    groups: [\n      {\n        label: \"Correct\",\n        fn: (x) => correctRate(x),\n        color: Colors.blue,\n      },\n      {\n        label: \"Incorrect\",\n        fn: (x) => CORRECT_RATE_DIVISOR - correctRate(x),\n        color: Colors.gray,\n      },\n    ],\n  },\n}\nconst ExperimentLabelOnlyDisanceChartSet = ({\n  nodeSize = 10,\n  defaultNoise = 5,\n  height = 300,\n  width = 600,\n  bottomLabel,\n  sliderLabel,\n}) => {\n  const [rawData, setRawData] = useState([])\n  const [models, setModels] = useState({\n    main: { data: [] },\n    quad1: { data: [], total: 0 },\n    quad2: { data: [], total: 0 },\n    quad3: { data: [], total: 0 },\n    quad4: { data: [], total: 0 },\n  })\n  // const [dotPlotMaxX, setDotPlotMaxX] = useState(0)\n  const [noise, setNoise] = useState(defaultNoise)\n\n  useEffect(() => {\n    const getRawData = async () => {\n      const result = await fetch(\"./data/label-only-distance-data.json\")\n      const data = await result.json()\n      const zeroResult = {\n        train_results: {\n          target_train_fgs_acc: data.target_train_acc,\n          target_train_fgs_correct: data.target_train_correct,\n          target_train_fgs_incorrect: data.target_train_incorrect,\n        },\n        test_results: {\n          target_test_fgs_acc: data.target_test_acc,\n          target_test_fgs_correct: data.target_test_correct,\n          target_test_fgs_incorrect: data.target_test_incorrect,\n        },\n      }\n      setRawData([zeroResult, ...data.results])\n    }\n\n    getRawData()\n  }, [])\n\n  useEffect(() => {\n    setModels({\n      main: ChartData.line(rawData, ChartModels.main),\n      quad1: ChartData.rollup(rawData, ChartModels.quad1, defaultNoise),\n      quad2: ChartData.rollup(rawData, ChartModels.quad2, defaultNoise),\n      quad3: ChartData.rollup(rawData, ChartModels.quad3, defaultNoise),\n      quad4: ChartData.rollup(rawData, ChartModels.quad4, defaultNoise),\n    })\n\n    // if (_dotPlotData.maxX) setDotPlotMaxX(_dotPlotData.maxX + 1)\n  }, [rawData, defaultNoise])\n\n  useEffect(() => {\n    setModels({\n      ...models,\n      quad1: ChartData.rollup(rawData, ChartModels.quad1, noise),\n      quad2: ChartData.rollup(rawData, ChartModels.quad2, noise),\n      quad3: ChartData.rollup(rawData, ChartModels.quad3, noise),\n      quad4: ChartData.rollup(rawData, ChartModels.quad4, noise),\n    }) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noise])\n  // return null\n  return (\n    <LabelOnlyDistanceChartSet\n      models={models}\n      sliderLabel={sliderLabel}\n      threshold={noise}\n      setThreshold={setNoise}\n      legendModel={LegendModel}\n    />\n  )\n}\n\nexport default ExperimentLabelOnlyDisanceChartSet\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { Centered, RangeSlider } from \"./game/Util\"\nimport { gameData } from \"../util/data\"\n\nconst toNoiseImage = (image, index) => ({\n  index,\n  src: `img/${image.path}`,\n  label: image.label,\n})\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: whitesmoke;\n  padding: 10px;\n  border: 1px solid gray;\n  border-radius: 5px;\n`\n\nconst StyledImageTile = styled.div`\n  position: relative;\n  display: inline-block;\n  height: ${({ size = {} }) => size.height || \"180px\"};\n  width: ${({ size = {} }) => size.width || \"180px\"};\n  margin: 2px;\n`\n\nconst StyledImageTileImage = styled.img`\n  height: 100%;\n  width: 100%;\n  border-radius: ${({ rounded }) => (rounded ? \"5px\" : \"none\")};\n`\n\nconst StyledImageLabel = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 5px;\n  font-size: 75%;\n  color: white;\n  background: rgba(0, 0, 0, 0.5);\n  border-top-left-radius: 3px;\n  border-bottom-right-radius: ${({ rounded }) => (rounded ? \"5px\" : \"none\")};\n`\n\nconst ImageTile = ({ image, size, rounded }) => (\n  <StyledImageTile size={size}>\n    <StyledImageLabel title={image.title} rounded={rounded}>\n      {image.label}\n    </StyledImageLabel>\n    <StyledImageTileImage src={image.src} alt=\"\" rounded={rounded} />\n  </StyledImageTile>\n)\n\nconst ImageTiles = ({ images, tileSize, rounded }) => (\n  <div>\n    {images.map((x, i) => (\n      <ImageTile\n        key={`image-tile-${x}-${i}`}\n        image={x}\n        size={tileSize}\n        rounded={rounded}\n      />\n    ))}\n  </div>\n)\n\nconst ImageNoise = ({ imageSetNumber = 3, rounded = true }) => {\n  const [rawImages, setRawImages] = useState([])\n  const [images, setImages] = useState([])\n  const [noiseLevel, setNoiseLevel] = useState(0)\n  const [noiseLevelRange, setNoiseLevelRange] = useState([0, 0])\n  useEffect(() => {\n    const getImageData = async () => {\n      const _gameData = await gameData()\n      const _rawImages = _gameData.practiceOptions[imageSetNumber]\n      setRawImages(_rawImages)\n      const noiseLevels = [\n        ...new Set(\n          _rawImages.reduce(\n            (all, x) => [\n              ...all,\n              ...Object.keys(x.variants || {})\n                .filter((x) => x.startsWith(\"noise\"))\n                .map((x) => parseInt(x.replace(\"noise\", \"\"))),\n            ],\n            []\n          )\n        ),\n      ]\n      setNoiseLevelRange([0, Math.max(...noiseLevels)])\n      setImages(_rawImages.map(toNoiseImage))\n    }\n\n    getImageData() // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (noiseLevel === 0) return\n    const noisyImages = rawImages.map(\n      (x, i) => toNoiseImage(x.variants[`noise${noiseLevel}`], i) // TODO What if there is no noise level for this image?\n    )\n    setImages(noisyImages) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noiseLevel])\n\n  const [sliderMin, sliderMax] = noiseLevelRange\n  return images && images.length ? (\n    <Centered>\n      <Container>\n        <ImageTiles\n          images={images}\n          tileSize={{ height: \"180px\", width: \"180px\" }}\n          rounded={rounded}\n        />\n        {sliderMax > 0 ? (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <RangeSlider\n              label=\"Add Noise\"\n              labelPosition=\"bottom\"\n              min={sliderMin}\n              max={sliderMax}\n              step={1}\n              value={noiseLevel}\n              style={{\n                outline: \"none\",\n                width: \"100%\",\n              }}\n              onChange={setNoiseLevel}\n            />\n          </div>\n        ) : null}\n      </Container>\n    </Centered>\n  ) : null\n}\n\nexport default ImageNoise\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { TagCloud } from \"react-tagcloud\"\n\nconst Model = [\n  { img: \"story-img/class-arch.png\", label: \"Arch\", tagSize: 25 },\n  { img: \"story-img/class-barn.png\", label: \"Barn\", tagSize: 35 },\n  { img: \"story-img/class-beach.png\", label: \"Beach\", tagSize: 25 },\n  { img: \"story-img/class-beetle.png\", label: \"Beetle\", tagSize: 35 },\n  { img: \"story-img/class-broom.png\", label: \"Broom\", tagSize: 25 },\n  { img: \"story-img/class-candle.png\", label: \"Candle\", tagSize: 35 },\n  { img: \"story-img/class-lamp.png\", label: \"Lamp\", tagSize: 25 },\n  { img: \"story-img/class-phone.png\", label: \"Phone\", tagSize: 35 },\n  { img: \"story-img/class-pool-table.png\", label: \"Pool Table\", tagSize: 25 },\n  { img: \"story-img/class-ship.png\", label: \"Ship\", tagSize: 35 },\n  { img: \"story-img/class-skunk.png\", label: \"Skunk\", tagSize: 35 },\n  { img: \"story-img/class-toaster.png\", label: \"Toaster\", tagSize: 25 },\n]\n\nconst data = Model.map((x, i) => ({ value: x.label, count: x.tagSize }))\n\nconst StyledImg = styled.img`\n  border-radius: 5px;\n  margin: 0 2px 0 2px;\n  display: inline-block;\n`\n\nconst Image = ({\n  details: { img, label },\n  imageWidth,\n  onSelect = () => null,\n}) => {\n  const [hovered, setHovered] = useState(false)\n  const onMouseOver = (label) => {\n    setHovered(label ? true : false)\n    onSelect(label)\n  }\n\n  const style = () => ({\n    width: imageWidth,\n    height: \"auto\",\n    boxShadow: hovered ? \"1px 1px 5px gray\" : \"none\",\n  })\n\n  return (\n    <StyledImg\n      onMouseOver={() => onMouseOver(label)}\n      onMouseOut={() => onMouseOver()}\n      src={img}\n      alt={label}\n      style={style()}\n    />\n  )\n}\n\nconst Images = ({ images, width = 640, imageWidth = 130, onSelect }) => {\n  return (\n    <div style={{ width }}>\n      {images.map((x) => (\n        <Image\n          key={`card-${x.label}`}\n          details={x}\n          imageWidth={imageWidth}\n          onSelect={onSelect}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst Tag = styled.div`\n  display: inline-block;\n  margin: 3px 10px;\n  padding: 0 4px;\n  border: 3px solid ${({ color }) => color};\n  border-radius: 3px;\n  font-size: ${({ size }) => size}pt;\n  transition: border 0.2s linear;\n`\n\nconst customRenderer = (tag, size, color) => {\n  return (\n    <Tag key={tag.value} size={size} color={color}>\n      {tag.value}\n    </Tag>\n  )\n}\nconst ImageClasses = ({ model = Model }) => {\n  const [selected, setSelected] = useState()\n  const [images, setImages] = useState([])\n\n  useEffect(() => {\n    setImages(model) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Images images={images} onSelect={(label) => setSelected(label)} />\n      <div style={{ display: \"flex\", alignContent: \"center\" }}>\n        <TagCloud\n          style={{ width: 400, textAlign: \"center\" }}\n          tags={data}\n          minSize={25}\n          maxSize={35}\n          renderer={(tag) =>\n            customRenderer(\n              tag,\n              tag.count,\n              tag.value === selected ? \"orange\" : \"rgba(0,0,0,0)\"\n            )\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ImageClasses\n","const Models = {\n  PuppiesToFood: {\n    columns: [\n      { cx: 10, fill: \"rgb(157,157,144)\", yValues: [10, 30, 50, 70, 90] },\n      { cx: 40, fill: \"rgb(158,170,190)\", yValues: [30, 50, 70] },\n      { cx: 70, fill: \"rgb(240,161,112)\", yValues: [40, 60] },\n      {\n        cx: 100,\n        yValues: [\n          { cy: 10, fill: \"rgb(176,0,4)\" },\n          { cy: 26, r: 1 },\n          { cy: 30, r: 1 },\n          { cy: 34, r: 1 },\n          { cy: 50, fill: \"rgb(0,0,0)\" },\n          { cy: 70, fill: \"rgb(255,226,129)\" },\n          { cy: 90, fill: \"rgb(130,201,63)\" },\n        ],\n      },\n      {\n        cx: 130,\n        yValues: [\n          { cy: 10, fill: \"rgb(222,93,97)\" },\n          { cy: 26, r: 1 },\n          { cy: 30, r: 1 },\n          { cy: 34, r: 1 },\n          { cy: 50, fill: \"rgb(129,134,133)\" },\n          { cy: 70, fill: \"rgb(255,239,185)\" },\n          { cy: 90, fill: \"rgb(186,227,146)\" },\n        ],\n      },\n    ],\n    arrows: [\n      { from: [0, 0], to: [1, 0] },\n      { from: [0, 0], to: [1, 1] },\n      { from: [0, 1], to: [1, 0] },\n      { from: [0, 1], to: [1, 1] },\n      { from: [0, 1], to: [1, 2] },\n      { from: [0, 2], to: [1, 0] },\n      { from: [0, 2], to: [1, 1] },\n      { from: [0, 2], to: [1, 2] },\n      { from: [0, 3], to: [1, 0] },\n      { from: [0, 3], to: [1, 1] },\n      { from: [0, 3], to: [1, 2] },\n      { from: [0, 4], to: [1, 1] },\n      { from: [0, 4], to: [1, 2] },\n      { from: [1, 0], to: [2, 0] },\n      { from: [1, 0], to: [2, 1] },\n      { from: [1, 1], to: [2, 0] },\n      { from: [1, 1], to: [2, 1] },\n      { from: [1, 2], to: [2, 0] },\n      { from: [1, 2], to: [2, 1] },\n      { from: [2, 0], to: [3, 0] },\n      { from: [2, 0], to: [3, 4] },\n      { from: [2, 0], to: [3, 5] },\n      { from: [2, 0], to: [3, 6] },\n      { from: [2, 1], to: [3, 0] },\n      { from: [2, 1], to: [3, 4] },\n      { from: [2, 1], to: [3, 5] },\n      { from: [2, 1], to: [3, 6] },\n    ],\n  },\n  MIA: {\n    columns: [\n      {\n        r: 9,\n        cx: 10,\n        fill: \"rgb(157,157,144)\",\n        yValues: [10, 30, 50, 70, 90],\n      },\n      { r: 9, cx: 50, fill: \"cornflowerblue\", yValues: [20, 40, 60, 80] },\n      { r: 9, cx: 90, fill: \"goldenrod\", yValues: [25, 50, 75] },\n      { r: 9, cx: 130, fill: \"#FF4136\", yValues: [25, 50, 75] },\n    ],\n    arrows: [\n      { from: [0, 0], to: [1, 0] },\n      { from: [0, 0], to: [1, 1] },\n      { from: [0, 0], to: [1, 2] },\n      { from: [0, 0], to: [1, 3] },\n      { from: [0, 1], to: [1, 0] },\n      { from: [0, 1], to: [1, 1] },\n      { from: [0, 1], to: [1, 2] },\n      { from: [0, 1], to: [1, 3] },\n      { from: [0, 2], to: [1, 0] },\n      { from: [0, 2], to: [1, 1] },\n      { from: [0, 2], to: [1, 2] },\n      { from: [0, 2], to: [1, 3] },\n      { from: [0, 3], to: [1, 0] },\n      { from: [0, 3], to: [1, 1] },\n      { from: [0, 3], to: [1, 2] },\n      { from: [0, 3], to: [1, 3] },\n      { from: [0, 4], to: [1, 0] },\n      { from: [0, 4], to: [1, 1] },\n      { from: [0, 4], to: [1, 2] },\n      { from: [0, 4], to: [1, 3] },\n      { from: [1, 0], to: [2, 0] },\n      { from: [1, 0], to: [2, 1] },\n      { from: [1, 0], to: [2, 2] },\n      { from: [1, 1], to: [2, 0] },\n      { from: [1, 1], to: [2, 1] },\n      { from: [1, 1], to: [2, 2] },\n      { from: [1, 2], to: [2, 0] },\n      { from: [1, 2], to: [2, 1] },\n      { from: [1, 2], to: [2, 2] },\n      { from: [1, 3], to: [2, 0] },\n      { from: [1, 3], to: [2, 1] },\n      { from: [1, 3], to: [2, 2] },\n      { from: [2, 0], to: [3, 0] },\n      { from: [2, 0], to: [3, 1] },\n      { from: [2, 0], to: [3, 2] },\n      { from: [2, 1], to: [3, 0] },\n      { from: [2, 1], to: [3, 1] },\n      { from: [2, 1], to: [3, 2] },\n      { from: [2, 2], to: [3, 0] },\n      { from: [2, 2], to: [3, 1] },\n      { from: [2, 2], to: [3, 2] },\n    ],\n  },\n}\n\nconst defaultCircleProps = {\n  r: 7,\n  fill: \"black\",\n}\n\nconst circleIsClickable = (clickables, { column, rowIndex }) => {\n  return (clickables || []).find((x) => x === `${column}:${rowIndex}`)\n}\n\nconst circleProps = ({ column, override, rowIndex }) => ({\n  ...defaultCircleProps,\n  key: `circle-${column}-${override.cy}`,\n  id: `circle-${column}-${rowIndex}`,\n  ...override,\n})\n\nconst Column = ({\n  index,\n  cx,\n  yValues,\n  r = 7,\n  fill,\n  clickables = [],\n  onClick,\n}) =>\n  yValues.map((cy, i) => {\n    const defaultProps = { column: index, rowIndex: i }\n    const props =\n      typeof cy === \"object\"\n        ? circleProps({ ...defaultProps, override: { cx, ...cy } })\n        : circleProps({ ...defaultProps, override: { cx, cy, r, fill } })\n    const clickable = circleIsClickable(clickables, defaultProps)\n    props.onClick = clickable ? (x) => onClick(x) : null\n    props.style = clickable ? { cursor: \"pointer\" } : null\n    return <circle {...props} />\n  })\n\nconst TargetModelArrow = ({ model, from, to }) => {\n  const _model = Models[model]\n  const lineY = (col, i) => {\n    const yValue = _model.columns[col].yValues[i]\n    return typeof yValue === \"object\" ? yValue.cy : yValue\n  }\n  const lineX = (col) => _model.columns[col].cx + defaultCircleProps.r\n  const lineEndX = (col) => _model.columns[col].cx - defaultCircleProps.r\n  return (\n    <line\n      x1={lineX(from[0])}\n      y1={lineY(from[0], from[1])}\n      x2={lineEndX(to[0])}\n      y2={lineY(to[0], to[1])}\n      stroke=\"#000\"\n      strokeWidth={0.7}\n      markerEnd=\"url(#arrowhead)\"\n    />\n  )\n}\n\nconst TargetModelDiagram = ({\n  model = \"PuppiesToFood\",\n  style,\n  id,\n  additionalShapes = [],\n  clickableCircles = [],\n  onClickCircle = () => null,\n}) => (\n  <div style={style} id={id}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 140 100\">\n      <defs>\n        <marker\n          id=\"arrowhead\"\n          markerWidth=\"6\"\n          markerHeight=\"6\"\n          refX=\"12\"\n          refY=\"3\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 6 3, 0 6\" />\n        </marker>\n      </defs>\n      {Models[model].columns.map((c, i) => (\n        <Column\n          key={`column-${i}`}\n          index={i}\n          clickables={clickableCircles}\n          onClick={onClickCircle}\n          {...c}\n        />\n      ))}\n\n      {Models[model].arrows.map((a, i) => (\n        <TargetModelArrow\n          key={`target-model-arrow-${i}`}\n          model={model}\n          {...a}\n        />\n      ))}\n\n      {additionalShapes}\n    </svg>\n  </div>\n)\n\nexport default TargetModelDiagram\n","import { useState, useEffect, useCallback } from \"react\"\nimport styled from \"styled-components\"\nimport { Emoji } from \"./game/Util\"\n\n// Inspired by https://github.com/distillpub/post--communicating-with-interactive-articles/blob/master/src/diagrams/horse.svelte\n\nconst Container = styled.div`\n  border: 1px solid gray;\n  border-radius: 5px;\n  background-color: whitesmoke;\n`\nconst PictureAndInformation = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\nconst Picture = styled.img`\n  margin: 25px;\n  height: 125px;\n  width: auto;\n  border-radius: 5px;\n`\nconst Information = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin: 0 15px 15px 0;\n  /* padding: 15px; */\n`\nconst Controls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  margin-bottom: 10px;\n`\nconst Slides = styled.div`\n  text-align: center;\n  padding: 10px;\n  border-top: 1px solid gray;\n  white-space: nowrap;\n`\nconst Slide = styled.img`\n  height: 85px;\n  width: auto;\n  margin-right: 5px;\n  cursor: crosshair;\n  padding-bottom: 1px;\n  border-bottom: ${({ selected }) =>\n    selected ? \"5px solid midnightblue\" : \"5px solid rgba(0,0,0,0)\"};\n  :last-child {\n    margin-right: 0;\n  }\n`\n\nconst Rotated = ({ rotation = 90, children, style }) => (\n  <div style={{ ...style, transform: `rotate(${rotation}deg)` }}>\n    {children}\n  </div>\n)\n\nconst RotatedText = (props) => (\n  <Rotated style={{ fontSize: props.size }} {...props}></Rotated>\n)\n\nconst StyledAnimateButton = styled.button`\n  border: 2px solid slategray;\n  border-radius: 50%;\n  outline: none;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ButtonSymbols = {\n  play: <Emoji symbol=\"0x25B6\" style={{ paddingLeft: 3 }} />,\n  pause: <RotatedText size={23}>=</RotatedText>,\n}\n\nconst AnimateButton = ({ status = \"stopped\", onClick }) => {\n  const stateSymbols = {\n    stopped: ButtonSymbols.play,\n    playing: ButtonSymbols.pause,\n  }\n  return (\n    <StyledAnimateButton onClick={onClick}>\n      {stateSymbols[status]}\n    </StyledAnimateButton>\n  )\n}\n\nconst StyledAnimateSlider = styled.div`\n  display: flex;\n  align-content: center;\n`\n\nconst ImageAnimation = ({\n  images,\n  imageAlt = \"\",\n  info,\n  width,\n  delay = 150,\n  onChangeImage = (i) => console.log(i),\n  ImageWrapper = ({ children }) => <>{children}</>,\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [animating, setAnimating] = useState(false)\n  const selectIndex = useCallback(\n    (index) => {\n      setSelectedIndex(index)\n      onChangeImage(index)\n    },\n    [setSelectedIndex, onChangeImage]\n  )\n  useEffect(() => {\n    if (animating) {\n      const nextIndex =\n        selectedIndex < images.length - 1 ? selectedIndex + 1 : 0\n      setTimeout(() => selectIndex(nextIndex), delay)\n    }\n  }, [animating, selectedIndex, selectIndex, images, delay])\n\n  return (\n    <Container style={{ width }}>\n      <PictureAndInformation>\n        <ImageWrapper index={selectedIndex}>\n          <Picture src={images[selectedIndex]} alt={imageAlt} />\n        </ImageWrapper>\n        <Information>{info}</Information>\n      </PictureAndInformation>\n      <Controls>\n        <StyledAnimateSlider>\n          <AnimateButton\n            selectedIndex={selectedIndex}\n            status={animating ? \"playing\" : \"stopped\"}\n            onClick={() => setAnimating(!animating)}\n          />\n          <input\n            type=\"range\"\n            min={0}\n            max={images.length - 1}\n            step={1}\n            value={selectedIndex}\n            style={{ outline: \"none\" }}\n            onInput={(e) => selectIndex(parseInt(e.target.value))}\n          />\n        </StyledAnimateSlider>\n      </Controls>\n      <Slides>\n        {images.map((x, i) => (\n          <Slide\n            key={`slide-${i}`}\n            src={x}\n            onMouseOver={() => {\n              if (!animating) selectIndex(i)\n            }}\n            selected={i === selectedIndex}\n          />\n        ))}\n      </Slides>\n    </Container>\n  )\n}\n\nexport default ImageAnimation\n","import { useState } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport TargetModelDiagram from \"./TargetModel\"\nimport { Emoji } from \"../game/Util\"\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`\n\nconst Input = styled.div`\n  height: 100px;\n  width: 100px;\n  background-color: gray;\n  margin: 10px;\n  margin-left: 35px;\n  font-size: 1.2rem;\n  &::before {\n    content: \"x\\\\208${({ index }) => index}\";\n    position: relative;\n    left: -65%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n  }\n`\n\nconst Inputs = ({ count, images }) => {\n  const inputs = new Array(count).fill(0)\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {inputs.map((_, i) => (\n        <Input\n          key={`input-${i + 1}`}\n          index={i + 1}\n          id={`input-${i + 1}`}\n          style={{\n            backgroundImage: images[i] ? `url(story-img/${images[i]})` : null,\n          }}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst StyledOutputDiagram = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  animation: ${fadeIn} 0.1s linear;\n`\n\nconst Columns = {\n  0: {\n    middlex: 10,\n  },\n  1: {\n    middlex: 50,\n  },\n  2: {\n    middlex: 70,\n  },\n  3: {\n    middlex: 89,\n  },\n}\n\nconst columnStyle = (heightOffset) => ({\n  height: 10 + (heightOffset || 0),\n  rx: 1,\n  y: 40 - (heightOffset || 0),\n})\n\nconst OutputDiagramColumn = ({ height, fill, x, width }) => (\n  <rect fill={fill} style={columnStyle(height)} x={x} width={width} />\n)\n\nexport const OutputDiagram = ({\n  width = \"100%\",\n  height = \"100%\",\n  index,\n  selectedColumn = 2,\n}) => {\n  const ellipseStyle = {\n    stroke: \"rgb(63,108,175)\",\n    strokeWidth: 4,\n    fill: \"none\",\n  }\n  const columnHeight = (colIndex) =>\n    selectedColumn === colIndex ? (index - 1) * 5 : null\n\n  return (\n    <StyledOutputDiagram\n      style={{ width, height, position: \"absolute\" }}\n      id={`output-${index}`}\n    >\n      <svg viewBox={`0 0 99 99`}>\n        <OutputDiagramColumn\n          height={columnHeight(0)}\n          fill=\"rgb(176,0,4)\"\n          x={2}\n          width={17}\n        />\n        <rect fill=\"black\" x={21} y={44} height={2} width={2} />\n        <rect fill=\"black\" x={25} y={44} height={2} width={2} />\n        <rect fill=\"black\" x={29} y={44} height={2} width={2} />\n        <OutputDiagramColumn\n          height={columnHeight(1)}\n          fill=\"black\"\n          x={42}\n          width={16}\n        />\n        <OutputDiagramColumn\n          height={columnHeight(2)}\n          fill=\"rgb(255,226,129)\"\n          x={61}\n          width={17}\n        />\n        <OutputDiagramColumn\n          height={columnHeight(3)}\n          fill=\"rgb(130,201,63)\"\n          x={80}\n          width={17}\n        />\n        <ellipse\n          cx={Columns[selectedColumn].middlex}\n          cy=\"50\"\n          rx=\"15\"\n          ry=\"46\"\n          style={ellipseStyle}\n        />\n        <text\n          x={Columns[selectedColumn].middlex}\n          y=\"82\"\n          textAnchor=\"middle\"\n          style={{ font: \"24px arial\" }}\n        >\n          ?\n        </text>\n      </svg>\n    </StyledOutputDiagram>\n  )\n}\n\nexport const Output = styled.div`\n  position: relative;\n  height: 100px;\n  min-height: 100px;\n  margin-top: -25px;\n  padding: 0.25em;\n  width: 120px;\n  border: 3px solid #333;\n  background-color: white;\n  font-size: 1.3rem;\n  &::before {\n    position: relative;\n    left: -80%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n  }\n  &:nth-child(odd) {\n    left: 150px;\n    margin-left: 30px;\n  }\n  &:nth-child(even) {\n    left: 35px;\n  }\n`\n\nconst Outputs = ({ count }) => {\n  const inputs = new Array(count).fill(0)\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxHeight: 200,\n        paddingTop: 25,\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      {inputs.map((_, i) => (\n        <Output index={i + 1} key={`output-${i + 1}`}>\n          <OutputDiagram index={i + 1} />\n        </Output>\n      ))}\n    </div>\n  )\n}\n\nconst ActionButton = styled.button`\n  background-color: rgb(63, 108, 175);\n  color: white;\n  border: none;\n  padding: 8px;\n  border-radius: 5px;\n  font-size: 16pt;\n  outline: none;\n  vertical-align: top;\n  height: 42px;\n  &:disabled {\n    pointer-events: none;\n    color: gray;\n  }\n  &:hover {\n    text-shadow: 1px 1px 1px black;\n  }\n  &:nth-child(odd) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 2px solid gray;\n  }\n  &:nth-child(even) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`\n\nconst Buttons = ({ onClick, actionDisabled }) => {\n  return (\n    <div style={{ textAlign: \"center\", marginBottom: 15 }}>\n      <ActionButton onClick={() => onClick(1)} disabled={actionDisabled}>\n        <Emoji symbol=\"0x203A\" /> Step Inversion\n      </ActionButton>\n      <ActionButton onClick={() => onClick()} title=\"Reset\">\n        <Emoji symbol=\"0x21BB\" />\n      </ActionButton>\n    </div>\n  )\n}\n\nconst InputOutput = ({ inputImages = [] }) => {\n  const [inputCount, setInputCount] = useState(0)\n  const updateInputCount = (delta) =>\n    setInputCount((prev) => {\n      if (delta === null || delta === undefined) setInputCount(1)\n      else {\n        const updated = prev + delta\n        setInputCount(Math.min(Math.max(1, updated), 4))\n      }\n    })\n\n  return (\n    <div style={{ marginBottom: 300 }}>\n      <Buttons onClick={updateInputCount} actionDisabled={inputCount === 4} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          minWidth: 900,\n          maxWidth: \"90%\",\n        }}\n      >\n        <Inputs count={inputCount} images={inputImages} />\n        <TargetModelDiagram\n          style={{ width: 275 }}\n          id=\"target-model\"\n          additionalShapes={[\n            <circle\n              key=\"circled-output-shape\"\n              cx=\"100\"\n              cy=\"50\"\n              r=\"12\"\n              stroke=\"rgb(63,108,175)\"\n              strokeWidth={2}\n              fill=\"none\"\n            />,\n          ]}\n        />\n        <Outputs count={inputCount} />\n      </div>\n    </div>\n  )\n}\n\nexport default InputOutput\n","import { useState } from \"react\"\nimport ImageAnimation from \"../ImageAnimation\"\nimport Xarrow from \"react-xarrows\"\nimport TargetModelDiagram from \"./TargetModel\"\nimport { Output, OutputDiagram } from \"./InputOutput\"\nimport styled from \"styled-components\"\n\nconst lineProps = {\n  color: \"#FF4136\",\n  stroke: \"#FF4136\",\n  strokeWidth: 2,\n}\n\nconst StyledImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst ImageWrapper = ({ children, index }) => (\n  <StyledImageWrapper id=\"redp-image\">\n    <div\n      style={{\n        position: \"absolute\",\n        left: 10,\n        ...lineProps,\n      }}\n    >\n      x<sub>{index}</sub>\n    </div>\n    {children}\n  </StyledImageWrapper>\n)\n\nconst LineLabel = ({ index }) => (\n  <div style={{ marginTop: 12, ...lineProps }}>\n    𝑓(x<sub>{index}</sub>)\n  </div>\n)\n\nconst CircleArrowSourcePositions = {\n  \"3:0\": {\n    cx: 100,\n    cy: 10,\n    bottomness: -52,\n  },\n  \"3:4\": {\n    cx: 100,\n    cy: 50,\n    bottomness: -2,\n  },\n  \"3:5\": {\n    cx: 100,\n    cy: 70,\n    bottomness: 22,\n  },\n  \"3:6\": {\n    cx: 100,\n    cy: 90,\n    bottomness: 48,\n  },\n  default: {\n    cx: 100,\n    cy: 50,\n    bottomness: -2,\n  },\n}\n\nconst InputOutput = ({ index, onColumnIndexChanged }) => {\n  const onClickCircle = (e) => {\n    const [, x, y] = e.target.id.split(\"-\")\n    const key = `${x}:${y}`\n    setCircleArrowSource(key in CircleArrowSourcePositions ? key : \"default\")\n    const _y = parseInt(y)\n    const column = _y !== 0 ? _y - 3 : _y // Skip the small dots\n    setSelectedColumn(column)\n    if (onColumnIndexChanged) onColumnIndexChanged(column)\n  }\n  const [circleArrowSource, setCircleArrowSource] = useState(\"3:4\")\n  const [selectedColumn, setSelectedColumn] = useState(1)\n  const circleArrowSourceProps = () =>\n    CircleArrowSourcePositions[circleArrowSource] ||\n    CircleArrowSourcePositions.default\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        minWidth: 350,\n        marginTop: 15,\n      }}\n    >\n      <TargetModelDiagram\n        style={{ width: 175 }}\n        id=\"redp-target-model\"\n        onClickCircle={onClickCircle}\n        clickableCircles={[\"3:0\", \"3:4\", \"3:5\", \"3:6\"]}\n        additionalShapes={[\n          <circle\n            key=\"circled-output-shape\"\n            r=\"9\"\n            fill=\"none\"\n            {...circleArrowSourceProps()}\n            {...lineProps}\n          />,\n        ]}\n      />\n      <Output\n        id=\"redp-output\"\n        style={{ marginTop: -5, width: 100, marginRight: 10 }}\n      >\n        <OutputDiagram index={index} selectedColumn={selectedColumn} />\n      </Output>\n      <Xarrow\n        start=\"redp-image\"\n        end=\"redp-target-model\"\n        startAnchor={{ position: \"auto\", offset: { rightness: -25 } }}\n        {...lineProps}\n      />\n      <Xarrow\n        start=\"redp-target-model\"\n        end=\"redp-output\"\n        startAnchor={{\n          position: \"auto\",\n          offset: {\n            rightness: -37,\n            ...circleArrowSourceProps(),\n          },\n        }}\n        label={{\n          end: <LineLabel index={index} />,\n        }}\n        {...lineProps}\n      />\n    </div>\n  )\n}\n\nconst imageNumbers = [1, 16, 32, 64, 128, 256]\nconst toImageSet = (_class) =>\n  imageNumbers.map(\n    (x) =>\n      `story-img/match_game_cifar_robust_images_${_class}_threshold_${x}.png`\n  )\nconst imageSets = [\"deer\", \"plane\", \"horse\", \"boat\"].map(toImageSet)\n\nconst Component = (props) => {\n  const [selectedClass, setSelectedClass] = useState(1)\n  const [selectedImage, setSelectedImage] = useState(0)\n  return (\n    <ImageAnimation\n      images={imageSets[selectedClass]}\n      info={\n        <InputOutput\n          index={selectedImage}\n          onColumnIndexChanged={setSelectedClass}\n        />\n      }\n      ImageWrapper={ImageWrapper}\n      onChangeImage={setSelectedImage}\n      delay={300}\n      {...props}\n    />\n  )\n}\n\nexport default Component\n","import { useState, useEffect } from \"react\"\nimport { chain } from \"../../util/misc\"\nimport styled from \"styled-components\"\nimport Xarrow from \"react-xarrows\"\n// import { usePrevious } from \"../../hooks\"\n\nconst RowFlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: ${({ valign = \"center\" }) => valign};\n`\n\nconst defaultLinkConfig = {\n  size: 4,\n  head: 3,\n  color: \"coral\",\n}\n\nconst FlowCharts = {\n  validate: (elements) => {\n    const issues = []\n    elements.forEach((x) => {\n      if (!x.id && !x.props.id)\n        issues.push(`FlowChart element [${x.type}] is missing id`)\n    })\n    return issues\n  },\n  hasPosition: (x) =>\n    x.style &&\n    (\"top\" in x.style ||\n      \"bottom\" in x.style ||\n      \"left\" in x.style ||\n      \"right\" in x.style),\n  hasPositionedElements: (elements) =>\n    elements.reduce((all, x) => all || FlowCharts.hasPosition(x), false),\n  hasUserDefinedLinks: (elements) =>\n    elements.reduce((all, x) => all || \"links\" in x, false),\n  buildLinks: (elements) => {\n    const userDefined = FlowCharts.hasUserDefinedLinks(elements)\n    if (userDefined) {\n      return elements\n        .map((x) =>\n          (Object.keys(x.links || {}) || []).map((l) => ({\n            from: x.id,\n            to: l,\n            config: { ...defaultLinkConfig, ...x.links[l] },\n          }))\n        )\n        .flat()\n    } else {\n      // Build links from element to element in order given\n      return elements.reduce((all, x, i) => {\n        if (i === elements.length - 1) return all\n        return [\n          ...all,\n          {\n            from: x.props.id,\n            to: elements[i + 1].props.id,\n            config: defaultLinkConfig,\n          },\n        ]\n      }, [])\n    }\n  },\n}\n\nconst StyledFlowChartElement = styled.div`\n  display: flex;\n  justify-content: space-around;\n  & * {\n    display: block;\n  }\n`\n\nconst FlowChart = ({\n  name,\n  elements,\n  size,\n  style,\n  startAnimating,\n  visible,\n  chainLinkAnimation,\n  betweenLinkDelay = 0,\n}) => {\n  const shouldAnimate = visible && startAnimating\n  const [links, setLinks] = useState([])\n  const issues = FlowCharts.validate(elements)\n  if (issues.length) {\n    console.error(issues.join(\"\\n\"))\n  }\n\n  const linkId = (x) => `${x.from}-${x.to}`\n  useEffect(() => {\n    if (shouldAnimate) {\n      if (chainLinkAnimation) {\n        setLinks((prev) => [])\n        const fns = FlowCharts.buildLinks(elements).map((x) => () =>\n          setLinks((prev) =>\n            prev.find((l) => linkId(l) === linkId(x)) ? prev : [...prev, x]\n          )\n        )\n        chain(fns, betweenLinkDelay)\n      } else {\n        setLinks(FlowCharts.buildLinks(elements))\n      }\n    } else if (!visible) {\n      setLinks([])\n    }\n  }, [\n    setLinks,\n    elements,\n    shouldAnimate,\n    visible,\n    betweenLinkDelay,\n    chainLinkAnimation,\n  ])\n\n  const containerStyle = FlowCharts.hasPositionedElements(elements)\n    ? { position: \"relative\", ...size }\n    : {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        flex: 1,\n      }\n\n  const elementStyle = (x) =>\n    FlowCharts.hasPosition(x) ? { position: \"absolute\", ...x.style } : null\n\n  return (\n    <RowFlexContainer style={style}>\n      <div style={containerStyle}>\n        {elements.map((x, i) => (\n          <StyledFlowChartElement\n            key={`${name}-${i}`}\n            id={x.id}\n            style={elementStyle(x)}\n          >\n            {x.element ? x.element : x}\n          </StyledFlowChartElement>\n        ))}\n        {links.map((x) => {\n          return (\n            <Xarrow\n              key={`${name}-line-${x.from}-${x.to}`}\n              start={`${x.from}`}\n              end={`${x.to}`}\n              color={x.config.color}\n              path={x.config.path}\n              strokeWidth={x.config.size}\n              startAnchor={x.config.startSocket}\n              endAnchor={x.config.endSocket}\n              headSize={x.config.head}\n              animateDrawing={shouldAnimate ? \"0.5s\" : false}\n            />\n          )\n        })}\n      </div>\n    </RowFlexContainer>\n  )\n}\n\nexport default FlowChart\n","import styled from \"styled-components\"\nimport FlowChart from \"./FlowChart\"\nimport TargetModelDiagram from \"./TargetModel\"\n\nconst ImageTitle = styled.h4`\n  text-align: center;\n  margin: 0 0 5px 0;\n`\n\nconst TitledElement = ({\n  title,\n  children,\n  bottom = false,\n  bordered = false,\n  style,\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      backgroundColor: bordered ? \"white\" : null,\n      padding: bordered ? 4 : null,\n      border: bordered ? \"1px solid lightgray\" : null,\n      ...style,\n    }}\n  >\n    {title && !bottom ? <ImageTitle>{title}</ImageTitle> : null}\n    {children}\n    {title && bottom ? <ImageTitle>{title}</ImageTitle> : null}\n  </div>\n)\n\nconst MiaFlowChart = ({ status, style }) => (\n  <FlowChart\n    name=\"mia-layout\"\n    size={{ height: 325, width: 500 }}\n    style={style}\n    elements={[\n      {\n        id: \"mia-flow-horse\",\n        element: (\n          <TitledElement>\n            <img src=\"story-img/horse.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { top: 140 },\n        links: {\n          \"mia-flow-target-model\": {\n            startSocket: \"top\",\n            endSocket: \"left\",\n            size: 10,\n            color: \"midnightblue\",\n            endLabel: \"Classify\",\n            path: \"grid\",\n          },\n        },\n      },\n      {\n        id: \"mia-flow-target-model\",\n        element: (\n          <TitledElement\n            title=\"Target Model\"\n            style={{ marginTop: 25 }}\n            bordered={true}\n          >\n            <TargetModelDiagram style={{ width: 130 }} model=\"MIA\" />\n          </TitledElement>\n        ),\n        style: { left: 150, top: 10 },\n        links: {\n          \"mia-flow-bar-chart\": {\n            path: \"straight\",\n            color: \"black\",\n          },\n        },\n      },\n      {\n        id: \"mia-flow-bar-chart\",\n        element: (\n          <TitledElement title=\"Yes or No?\" bottom>\n            <img src=\"story-img/bar-chart.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { right: 0, top: 1 },\n      },\n      {\n        id: \"mia-flow-compliance-officer\",\n        element: (\n          <TitledElement title=\"Compliance Officer\" bottom bordered={true}>\n            <img src=\"story-img/compliance-officer.png\" alt=\"\" />\n          </TitledElement>\n        ),\n        style: { left: 150, bottom: 0 },\n        links: {\n          \"mia-flow-horse\": {\n            startSocket: \"left\",\n            endSocket: \"bottom\",\n            size: 10,\n            color: \"midnightblue\",\n            path: \"grid\",\n          },\n          \"mia-flow-bar-chart\": {\n            startSocket: \"right\",\n            endSocket: \"bottom\",\n            size: 10,\n            color: \"midnightblue\",\n            path: \"grid\",\n          },\n        },\n      },\n    ]}\n    visible={status?.visible}\n    startAnimating={status?.visible}\n  />\n)\n\nexport default MiaFlowChart\n","import { useState, useEffect } from \"react\"\nimport { Scrollama, Step } from \"react-scrollama\"\nimport ImageDiff from \"react-image-diff\"\nimport styled from \"styled-components\"\nimport ExperimentLabelOnlyCharts from \"./chart/ExperimentLabelOnlyCharts\"\nimport ImageNoise from \"./ImageNoise\"\nimport ImageClasses from \"./story/ImageClasses\"\nimport TargetModelDiagram from \"./story/TargetModel\"\nimport ReverseEngineeringDataPrototypesDiagram from \"./story/ReverseEngineeringDataPrototypesDiagram\"\nimport { Centered } from \"./game/Util\"\nimport FlowChart from \"./story/FlowChart\"\nimport MiaFlowChart from \"./story/MiaFlowChart\"\n\nconst ScrollerContainer = styled.div`\n  padding: 40vh 2vw 70vh;\n  display: flex;\n  justify-content: space-around;\n`\nconst Scroller = styled.div`\n  flex-basis: 100%;\n  max-width: 1100px;\n`\nconst ScrollContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst ScrollyHeaderSection = styled.h2``\nconst ScrollyContentSection = styled.div`\n  margin-right: 15px;\n`\nconst ScrollyStickySection = styled.div`\n  margin-right: 15px;\n  position: sticky;\n  top: 150px;\n  height: 50%;\n`\n\nconst ScrollySectionWithBackgroundImage = ({\n  width = \"50%\",\n  minWidth = 700,\n  img,\n  title,\n  children,\n  status,\n  sizePercent = 60,\n  imageOpacity = 0.2,\n}) => {\n  const imageWidth =\n    status && status.progress\n      ? sizePercent + status.progress * (100 - sizePercent)\n      : sizePercent\n  return (\n    <Centered>\n      <div\n        style={{\n          width,\n          minWidth,\n          height: 400,\n          position: \"relative\",\n        }}\n      >\n        <img\n          src={`story-img/${img}`}\n          alt=\"\"\n          style={{\n            position: \"absolute\",\n            width: `${imageWidth}%`,\n            height: \"auto\",\n            opacity: imageOpacity,\n            top: \"50%\",\n            left: \"50%\",\n            transform: \" translate(-50%, -50%)\",\n          }}\n        />\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \" translate(-50%, -50%)\",\n          }}\n        >\n          <ScrollyHeaderSection>{title}</ScrollyHeaderSection>\n          <ScrollContainer>\n            <ScrollyContentSection style={{}}>{children}</ScrollyContentSection>\n          </ScrollContainer>\n        </div>\n      </div>\n    </Centered>\n  )\n}\n\nconst RowFlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: ${({ valign = \"center\" }) => valign};\n`\n\nconst WeaknessWithAI = ({ status }) => {\n  return (\n    <div style={stepOpacityStyle(status)}>\n      <ScrollySectionWithBackgroundImage\n        title=\"The Weakness with AI\"\n        img=\"weakness.png\"\n        width=\"50%\"\n        status={status}\n      >\n        <p>\n          The ability of deep neural network (DNN) machine learning (ML) models\n          to achieve human or above-human task performance is a result of the\n          availability of vast amounts of data. As organizations dedicate\n          expensive resources to data acquisition, processing, labeling and\n          storage and training of DNNs, the data must be treated as sensitive\n          proprietary information. These facts are often expressed as “data is\n          the new oil” and “data is the new source code,” respectively.\n        </p>\n        <p>\n          However, recent demonstrations have shown how DNN characteristics and\n          behaviors can be leveraged by malicious actors to make the DNN reveal,\n          learn, or do the wrong thing. To see how DNNs can be exploited, we\n          will first set the stage with an example of a successful machine\n          learning application within the field of computer vision.\n        </p>\n      </ScrollySectionWithBackgroundImage>\n    </div>\n  )\n}\n\nconst LabelTile = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 10px solid #0074d9;\n  font-size: 1.2em;\n  background-color: white;\n  padding: 30px;\n`\n\nconst PuppiesToFoodFlowChart = ({ status }) => (\n  <FlowChart\n    name=\"puppies-or-food-flow\"\n    elements={[\n      <img src=\"story-img/puppy.png\" id=\"puppies-or-food-1\" alt=\"\" />,\n      <TargetModelDiagram\n        style={{ width: 180 }}\n        model=\"PuppiesToFood\"\n        id=\"puppies-or-food-2\"\n      />,\n      <LabelTile id=\"puppies-or-food-3\">food</LabelTile>,\n    ]}\n    visible={status?.visible}\n    startAnimating={status?.visible}\n    // chainLinkAnimation={true}\n    // betweenLinkDelay={1000}\n  />\n)\n\nconst PuppiesVsCroissantsImages = (/*{ status }*/) => (\n  <RowFlexContainer valign=\"start\">\n    <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"swipe\"\n      value={0.5}\n      slider\n      // animation={\n      //   status && status.visible && status.progress > 0.5\n      //     ? { end: 0, step: -0.02 }\n      //     : null\n      // }\n      // animation\n    />\n    <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"fade\"\n      slider\n    />\n    {/* <ImageDiff\n      before=\"story-img/2puppies.png\"\n      after=\"story-img/2croissants.png\"\n      type=\"difference\"\n    /> */}\n  </RowFlexContainer>\n)\n\nconst VerticalSpacer = ({ height }) => (\n  <div style={{ width: \"100%\", height: `${height}px` }}></div>\n)\n\nconst PuppiesOrFoodImage = ({ cover }) => {\n  const backgroundColor = \"rgba(0,0,0,.7)\"\n  const Covers = {\n    securityPrivacyConcerns: {\n      backgroundColor,\n      clipPath: \"polygon(0% 33%, 50% 33%, 50% 0%, 100% 0%, 100% 100%, 0% 100%)\",\n    },\n    hoverShape: {\n      backgroundColor,\n      clipPath: \"polygon(0% 33%, 100% 33%, 100% 100%, 0% 100%)\",\n    },\n    hoverTexture: {\n      backgroundColor,\n      clipPath:\n        \"polygon(0% 0%, 100% 0%, 100% 33%, 0% 33%, 0% 66%, 100% 66%, 100% 100%, 0% 100%)\",\n    },\n    hoverColor: {\n      backgroundColor,\n      clipPath: \"polygon(0% 66%, 0% 0%, 100% 0%, 100% 66%)\",\n    },\n  }\n  return (\n    <div style={{ width: \"100%\" }}>\n      <img\n        src={`story-img/puppies-or-food.png`}\n        style={{\n          height: \"auto\",\n          width: \"100%\",\n        }}\n        alt=\"\"\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          height: \"100%\",\n          transition: \"opacity 0.1s linear\",\n          opacity: cover ? 1 : 0,\n          ...(Covers[cover] || {}),\n        }}\n      />\n    </div>\n  )\n}\n\nconst stepOpacityStyle = (status) => {\n  const _default = { opacity: \"1\", transition: \"opacity 0.3s linear\" }\n  return status && status.visible ? _default : { ..._default, opacity: \"0.1\" }\n}\n\nconst StyledHoverLink = styled.button`\n  cursor: pointer;\n  background-color: gold;\n  color: #444;\n  border: none;\n  font-family: Futura;\n  font-weight: bold;\n  border-radius: 4px;\n  padding: 0 3px;\n  margin-left: 2px;\n  &:hover {\n    color: #000;\n  }\n`\n\nconst HoverLink = ({ children, onHover, offHover }) => (\n  <StyledHoverLink onMouseEnter={onHover} onMouseLeave={offHover}>\n    {children}\n  </StyledHoverLink>\n)\n\nconst PuppiesOrFoodHoverLink = ({ children, cover, setCover }) => (\n  <HoverLink onHover={() => setCover(cover)} offHover={() => setCover(\"\")}>\n    {children}\n  </HoverLink>\n)\n\nconst StepContainer = styled.div`\n  margin-bottom: 100px;\n`\n\nconst PuppiesOrFoodStepContainer = styled(StepContainer)`\n  opacity: ${({ currentView, viewName }) =>\n    currentView && currentView.data === viewName ? \"1\" : \"0.3\"};\n  padding-bottom: 400px;\n  margin-bottom: 100px;\n`\n\nconst PuppiesOrFood = ({ status }) => {\n  const [currentView, setCurrentView] = useState()\n  const [cover, setCover] = useState()\n  useEffect(() => {\n    setCover(\n      currentView && currentView.data === \"4\" ? \"securityPrivacyConcerns\" : \"\"\n    )\n  }, [currentView])\n  return (\n    <div style={stepOpacityStyle(status)}>\n      <ScrollyHeaderSection>Puppies or Food?</ScrollyHeaderSection>\n      <ScrollContainer>\n        <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n          <Scrollama\n            onStepEnter={setCurrentView}\n            onStepExit={() => setCurrentView(null)}\n            offset={0.4}\n          >\n            <Step data=\"1\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"1\"\n                currentView={currentView}\n              >\n                <h4>Classification: Still a Tough Problem </h4>\n                <p>\n                  Undoubtedly, one of the most successful applications of\n                  artificial intelligence involves classification within\n                  computer vision. In computer vision, the DNN task is to take a\n                  new image and categorize it into one of several known classes\n                  that it has been trained on. On the right, there are a number\n                  of images, some of which are puppies, and some of which are\n                  food. Modern day machine learning models can perform this\n                  classification task so well that it is easy to think that this\n                  is a solved problem (hint: it is not!).\n                </p>\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"2\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"2\"\n                currentView={currentView}\n              >\n                <p>\n                  These specific images were collated by Karen Zack, under the\n                  Twitter handle of “@teenybiscuit.” It is interesting that you\n                  may not be able to classify each image with the same level of\n                  ease or confidence. This is true for DNNs as well, epsecially\n                  with images with feautures they have not seen before. If you\n                  take these images and pass them through modern deep neural\n                  networks to see how they perform, don’t be surprised to learn\n                  that some of them may also get confused.\n                </p>\n                <PuppiesToFoodFlowChart status={status} />\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"3\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"3\"\n                currentView={currentView}\n              >\n                <h4> Interpretability: Tough to Explain What is Learned </h4>\n                <p>\n                  These images indicate that DNNs may learn how to identify\n                  objects in ways similar to human vision, for instance,\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverShape\"\n                    setCover={setCover}\n                  >\n                    shape\n                  </PuppiesOrFoodHoverLink>\n                  ,\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverTexture\"\n                    setCover={setCover}\n                  >\n                    texture\n                  </PuppiesOrFoodHoverLink>\n                  , or\n                  <PuppiesOrFoodHoverLink\n                    cover=\"hoverColor\"\n                    setCover={setCover}\n                  >\n                    color\n                  </PuppiesOrFoodHoverLink>\n                  . However, within the field there is not a common\n                  understanding of what these models are learning.\n                </p>\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"4\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"4\"\n                currentView={currentView}\n              >\n                <h4> Security & Privacy Concerns </h4>\n                <p>\n                  Beyond their inherent fun and quality of fooling modern day\n                  models, there are a few other lessons that these images\n                  highlight. First, you should be aware that for any model,\n                  similar examples can always be found – ones that make a model\n                  do the wrong thing despite our attempts to make them extremely\n                  accurate. This means that it is likely that our application\n                  can be intentionally circumvented by those using it, with\n                  possibly unexpected things occurring.\n                  <b> This presents a security vulnerability. </b>\n                </p>\n                <p>\n                  We can try to avoid this vulnerability while also increasing\n                  the accuracy by training with examples such as these two:\n                </p>\n                <PuppiesVsCroissantsImages status={status} />\n                <p>\n                  While learning, the model must extract more information about\n                  these two images in order to correctly differentiate between\n                  them. Often, the model learns characteristics of these\n                  specific images, storing what we would consider sensitive\n                  information. When this occurs, the model may exhibit different\n                  output behavior for those images. This indicates that the DNN\n                  is leaking information about specific images, revealing the\n                  wrong thing.\n                  <b> This presents a privacy vulnerability. </b>\n                </p>\n                {/* <VerticalSpacer height={600} /> */}\n              </PuppiesOrFoodStepContainer>\n            </Step>\n            <Step data=\"5\">\n              <PuppiesOrFoodStepContainer\n                viewName=\"5\"\n                currentView={currentView}\n              >\n                <h4>ML is inherently fragile with unstable behavior</h4>\n                <p>\n                  All of these observations point out a key characteristic of\n                  modern day deep neural networks – they are inherently fragile\n                  and will exhibit unstable behavior. This cannot be avoided and\n                  must be considered when building and deploying applications.\n                </p>\n              </PuppiesOrFoodStepContainer>\n            </Step>\n          </Scrollama>\n        </ScrollyContentSection>\n        <ScrollyStickySection style={{ flexBasis: \"48%\" }}>\n          <PuppiesOrFoodImage status={status} cover={cover} />\n        </ScrollyStickySection>\n      </ScrollContainer>\n    </div>\n  )\n}\n\nconst MembershipInferenceAttack = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>\n      Membership Inference Attack (MIA)\n    </ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyStickySection style={{ flexBasis: \"50%\" }}>\n        <MiaFlowChart status={status} />\n      </ScrollyStickySection>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <p>\n          In the membership inference attack, we want to answer the question of\n          whether a specific piece of data was in the training data set for the\n          machine learning model. Here, one does not necessarily need to have\n          access to the original data set, though we have the ability to query\n          the model with input data and obtain the outputs.\n        </p>\n        <p>\n          There are several operational scenarios in which we need to answer\n          this question. First, we may have a deployed model that has been\n          supporting an application for some time. If the data point was used to\n          train that model, it could make the model noncompliant and we would\n          have to terminate its use. Furthermore, any actions previously taken\n          or data previously collected based upon the model could also be\n          noncompliant. Right now, legal precedence says to throw out the model\n          and any evidence that may have been collected with it.\n        </p>\n        <p>\n          Second, you may have a trained a model using a small amount of data\n          that was collected with NTM and as such, it has a higher\n          classification given its relationship to TTP, sources and methods. If\n          you do not own the data, others will certainly have access to the same\n          data as well. Even if you do own the data, others may be able to\n          generate similar data using related techniques. For example, 2nd and\n          3rd partners with access to the model. If sensitive data can be\n          readily identified from the model output, it puts NTM at risk.\n        </p>\n      </ScrollyContentSection>\n    </ScrollContainer>\n    <VerticalSpacer height={300} />\n  </div>\n)\n\nconst ModelInversionAttack = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>Model Inversion Attack</ScrollyHeaderSection>\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <img src=\"story-img/Shallow.png\" id=\"shallow\" alt=\"\" />\n      <div style={{ margin: \"0 30px\" }}>\n        There is no consensus in the machine learning community about what data\n        features DNNs learn while training, which makes it tough to interpret\n        them. However, the work Zeiler and Fergus in the field of visual\n        interpretations of DNNs is a useful starting point. Their method\n        “transposes” DNNs to find which image patches are responsible for\n        certain neural activations. With the associated results, they argued the\n        shallow layers identify rough features such as edges and colors in the\n        training data set and the deeper layers combine these features into\n        higher level shapes and object abstractions.\n      </div>\n      <img src=\"story-img/Deep.png\" id=\"deep\" alt=\"\" />\n    </div>\n    <VerticalSpacer height={300} />\n    <p>\n      Here are some class prototypes from the Zeieler and Fergus paper. These\n      images are not real and would never be found in any data set that was\n      generated via imagery collection. However, can you understand what the DNN\n      is looking for in each output class?\n    </p>\n    <ImageClasses />\n    {/* <img src=\"story-img/ClassPrototypes.png\" id=\"class prototypes\" alt=\"\" /> */}\n    <VerticalSpacer height={300} />\n  </div>\n)\n\nconst TwentyQuestions = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>A game of 20 Questions...</ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"60%\" }}>\n        <p>\n          If DNNs did not leak any information about it's training set, there\n          would be no way to answer this question better than randomly guessing\n          'yes' or 'no'.\n        </p>\n        <p>\n          Thus, perhaps the easiest strategy for an attacker is to predict 'no'\n          everytime the model gets the class prediction wrong. This strategy is\n          based upon the notion that since the DNN is good at this task, if it\n          gets the prediction wrong, then most likely it has not seen the image\n          before.\n        </p>\n        <p>\n          This is problematic for models that are severely overfit, where there\n          is a large gap between the accuracy of training images and new images.\n          As such, this is known as the <b> 'Gap Attack' </b> and it will have\n          results better than random guessing by an amount related to the size\n          of the gap.\n        </p>\n        <p>\n          However, even for models that are not overfit and only output the\n          predicted label, there is a way to perform a successful membership\n          attack. This is known as the <b>'Label-Only Attack'</b> since it can\n          be performed even when the model's output is nothing more than the\n          class label. By adding noise to the input, it is possible to trick the\n          model into a wrong classification. To see this, add noise to the\n          images on the right and observe how the lable changes. One image was\n          in the training data set and the other was not. Can you determine\n          which is which?\n        </p>\n      </ScrollyContentSection>\n      <ScrollyStickySection style={{ flexBasis: \"40%\" }}>\n        <ImageNoise />\n      </ScrollyStickySection>\n    </ScrollContainer>\n    <VerticalSpacer height={300} />\n  </div>\n)\n\nconst ReverseEngineeringDataPrototypes = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>\n      Reverse Engineering Data Prototypes\n    </ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyStickySection style={{ flexBasis: \"50%\" }}>\n        <ReverseEngineeringDataPrototypesDiagram />\n      </ScrollyStickySection>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <p>\n          In the model inversion attack, the output nodes of a DNN are used to\n          reconstruct a prototype representation of each class, similar to the\n          technique used by Zeiler and Fergus. The optimization process used to\n          accomplish this is akin to how one trains a DNN. In the case of image\n          classification, a DNN is a function, f, that maps input images to a\n          probability vector.\n        </p>\n        <p>\n          Model inversion seeks to find an image such that the output\n          probability for that class is maximized, while the other possible\n          outputs are minimized. The reconstructed representations of the\n          training data leak information about sensitive data collection tools\n          techniques and tradecraft. For computer vision models, inversion can\n          produce image representations for every class label in the model. The\n          interactive figure demonstrates actual images formed during an\n          inversion of the deer class.\n        </p>\n        <p>\n          Here, the image inversion is randomly initialized and a new image is\n          saved at each stage. In the early stages of inversion optimization,\n          these images typically remain gray and not visually interpretable and\n          thus we refer to these generated images \"gray data\". However, as the\n          inversion process continues, these images can have significant\n          elements that are human interpretable.\n        </p>\n        <p>\n          These class prototypes are images represent the extracted features\n          that allow the network to best differentiate amongst the classes.\n          However, model inversion can be performed against models trained on\n          other data types.\n        </p>\n      </ScrollyContentSection>\n    </ScrollContainer>\n  </div>\n)\n\nconst LabelOnlyAttackThreshold = ({ status }) => (\n  <div style={stepOpacityStyle(status)}>\n    <ScrollyHeaderSection>\n      Label-Only Attack Success Threshold\n    </ScrollyHeaderSection>\n    <ScrollContainer>\n      <ScrollyContentSection style={{ flexBasis: \"55%\" }}>\n        <ExperimentLabelOnlyCharts\n          nodeSize={13}\n          defaultNoise={0}\n          bottomLabel=\"Distance\"\n          sliderLabel=\"Noise\"\n        />\n      </ScrollyContentSection>\n      <ScrollyContentSection style={{ flexBasis: \"50%\" }}>\n        <p>\n          Eventually every image will be misclassified by adding enough noise.\n          For images that the model has been trained on, the amount of noise\n          needed to fool the model is typically higher. In other words, for\n          images not in the training, it is easier to obtain an incorrect label.\n          By using your own data, you can calibrate to a noise level that will\n          give optimal attack results. This can be used in the attack of other\n          target models, giving you strong confidence about whether the image\n          was used in the training or not.\n        </p>\n        <p>\n          On the chart to the left, the accuracy is plotted for equally sized\n          training and test data sets. Under no noise, the model perfeclty\n          predicts the labels of each set. As the noise increases, the labels of\n          the test set can be seen to be predicted incorrectly, leading to a\n          successful attack.\n        </p>\n      </ScrollyContentSection>\n    </ScrollContainer>\n    <VerticalSpacer height={300} />\n  </div>\n)\n\nconst DebuggerTitle = styled.div`\n  width: 45px;\n  display: inline-block;\n  font-weight: bold;\n  margin-right: 15px;\n`\n\nconst Debugger = ({ viewState, hide }) => {\n  if (hide) return null\n  const progressPercent = (x) => (x ? (x * 100).toFixed() : 0)\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 50,\n        left: 50,\n        zIndex: 999999999999,\n        padding: 5,\n        border: \"1px solid black\",\n        backgroundColor: \"pink\",\n      }}\n    >\n      <div>\n        <DebuggerTitle>View:</DebuggerTitle>\n        {viewState.currentView || \"None\"}\n        <br />\n        <DebuggerTitle>Scroll:</DebuggerTitle>\n        {progressPercent(\n          (viewState[viewState.currentView] || { progress: \"\" }).progress\n        )}\n        %\n      </div>\n    </div>\n  )\n}\n\nconst Story = ({ debugScrolling = false }) => {\n  const [currentViewState, setCurrentViewState] = useState({})\n  const [viewState, setViewState] = useState({})\n\n  const onStepEnter = ({ data }) =>\n    setCurrentViewState({ view: data, visible: true })\n\n  const onStepExit = ({ data }) =>\n    setCurrentViewState({ view: data, visible: false })\n\n  const onStepProgress = ({ data, progress }) =>\n    setCurrentViewState({ view: data, visible: true, progress })\n\n  useEffect(\n    () =>\n      currentViewState.view\n        ? setViewState({\n            ...viewState,\n            [currentViewState.view]: {\n              ...viewState[currentViewState.view],\n              ...currentViewState,\n            },\n            currentView: currentViewState.view,\n          })\n        : null, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentViewState]\n  )\n\n  return (\n    <>\n      <ScrollerContainer>\n        <Scroller>\n          <Scrollama\n            onStepEnter={onStepEnter}\n            onStepExit={onStepExit}\n            progress\n            onStepProgress={onStepProgress}\n            offset={0.4}\n            debug={debugScrolling}\n          >\n            <Step data=\"weakness\">\n              <StepContainer>\n                <WeaknessWithAI status={viewState[\"weakness\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"puppies-or-food\">\n              <StepContainer>\n                <PuppiesOrFood status={viewState[\"puppies-or-food\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"mia\">\n              <StepContainer>\n                <MembershipInferenceAttack status={viewState[\"mia\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"20q\">\n              <StepContainer>\n                <TwentyQuestions status={viewState[\"20q\"]} />\n              </StepContainer>\n            </Step>\n            <Step data=\"label-only-attack\">\n              <StepContainer>\n                <LabelOnlyAttackThreshold\n                  status={viewState[\"label-only-attack\"]}\n                />\n              </StepContainer>\n            </Step>\n            <Step data=\"model-inversion-attack\">\n              <StepContainer>\n                <ModelInversionAttack\n                  status={viewState[\"model-inversion-attack\"]}\n                />\n              </StepContainer>\n            </Step>\n            <Step data=\"reverse-engineering-data-prototypes\">\n              <StepContainer>\n                <ReverseEngineeringDataPrototypes\n                  status={viewState[\"reverse-engineering-data-prototypes\"]}\n                />\n              </StepContainer>\n            </Step>\n          </Scrollama>\n        </Scroller>\n        <Debugger hide={!debugScrolling} viewState={viewState} />\n      </ScrollerContainer>\n    </>\n  )\n}\n\nexport default Story\n","import { GameContextProvider } from \"../context/GameContext\"\nimport { useState } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport { Fab, Action } from \"react-tiny-fab\"\nimport \"react-tiny-fab/dist/styles.css\"\nimport TwentyQuestions from \"../components/game/TwentyQuestions\"\nimport Match from \"../components/game/Match\"\nimport TwentyQuestionsPractice from \"../components/game/TwentyQuestionsPractice\"\nimport Menu from \"../components/game/Menu\"\nimport Story from \"../components/Story\"\nimport { Emoji } from \"../components/game/Util\"\nimport Modal from \"react-modal\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\n\nModal.setAppElement(\"#root\")\n\nconst PageHeader = ({ title, subtitle }) => {\n  const styles = {\n    container: {\n      marginBottom: 5,\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n    },\n    subtitle: {\n      fontSize: 14,\n      color: \"gray\",\n    },\n  }\n  return (\n    <div style={styles.container}>\n      <div style={styles.title}>{title}</div>\n      <span style={styles.subtitle}>{subtitle}</span>\n    </div>\n  )\n}\n\nconst GameModal = withRouter(({ history }) => {\n  const [isModalOpen, setModalOpen] = useState(false)\n  const toggleModal = () => setModalOpen(!isModalOpen)\n  const returnToMenu = () => {\n    if (window.location.hash === \"#/\") {\n      // Already on the main page, scroll up to the menu\n      window.scrollTo({ top: 0, left: 0, behavior: \"auto\" })\n    } else {\n      history.push(\"/\")\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n      >\n        <PageHeader\n          title=\"A game of 16 questions…beat Carnac!\"\n          subtitle=\"AI Jimmy is really good at identifying the object in images that he\n            has seen before. Select (check) which of the following images you\n            think Jimmy remembers. You will be playing against Carnac and who\n            ever gets more correct, wins!\"\n        />\n        <button\n          onClick={toggleModal}\n          style={{\n            position: \"absolute\",\n            top: 5,\n            right: 5,\n            border: 0,\n            background: \"none\",\n          }}\n        >\n          <CheckButton color=\"black\" isSelected={true} />\n        </button>\n      </Modal>\n      <Fab\n        alwaysShowTitle={true}\n        mainButtonStyles={{\n          backgroundColor: \"slategray\",\n        }}\n        icon=\". . .\"\n      >\n        <Action text=\"Back to Game Menu\" onClick={returnToMenu}>\n          <Emoji symbol=\"0x21A9\" />\n        </Action>\n      </Fab>\n    </>\n  )\n})\n\nconst GameView = () => {\n  return (\n    <GameContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/20q/learn\">\n            <TwentyQuestionsPractice />\n          </Route>\n          <Route path=\"/20q/easy\">\n            <TwentyQuestions gameMode=\"easy\" />\n          </Route>\n          <Route path=\"/20q/hard\">\n            <TwentyQuestions gameMode=\"hard\" />\n          </Route>\n          <Route path=\"/match/learn\">\n            <Match gameMode=\"learn\" />\n          </Route>\n          <Route path=\"/match/easy\">\n            <Match gameMode=\"easy\" />\n          </Route>\n          <Route path=\"/match/hard\">\n            <Match gameMode=\"hard\" />\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <Story />\n          </Route>\n        </Switch>\n        <GameModal />\n      </Router>\n    </GameContextProvider>\n  )\n}\n\nexport default GameView\n","import \"./App.css\"\n// import PickView from \"./views/PickView\"\nimport GameView from \"./views/GameView\"\nimport ReactTooltip from \"react-tooltip\"\n\nconst App = () => {\n  return (\n    <>\n      <GameView />\n      <ReactTooltip effect=\"solid\" />\n    </>\n    // <PickView />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}