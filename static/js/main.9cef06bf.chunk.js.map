{"version":3,"sources":["PickContext.js","questions.js","data.js","Pick.js","App.js","reportWebVitals.js","index.js"],"names":["PickContext","createContext","PickContextProvider","props","useState","current","0","configurations","setConfigurations","Provider","value","children","questions","flavor","id","title","links","default","link","dataset","back","linkKey","images","text","audio","architecture","train","dataFile","1","2","3","transformData","data","chartData","Object","keys","MI_class_results","reduce","all","x","mi_auc","labels","datasets","label","backgroundColor","borderColor","borderWidth","values","configurationData","key","a","fetch","results","json","Section","autoslide","Button","questionKey","buttonType","onClick","useContext","split","questionValue","setSelection","href","className","Question","config","currentConfig","linksKey","map","Training","useEffect","updated","newConfigurations","configurationKeys","getChartData","ResultSection","description","refreshToken","style","flex","height","minHeight","width","options","maintainAspectRatio","responsive","filter","Results","Date","now","chartTitle","display","alignItems","justifyContent","nextId","Pick","App","Reveal","initialize","center","history","controls","keyboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cef06bf.chunk.js","sourcesContent":["import { useState, createContext } from \"react\"\n\nexport const PickContext = createContext()\n\nexport const PickContextProvider = (props) => {\n  const [configurations, setConfigurations] = useState({ current: 0, 0: {} })\n\n  return (\n    <PickContext.Provider value={[configurations, setConfigurations]}>\n      {props.children}\n    </PickContext.Provider>\n  )\n}\n","const questions = {\n  flavor: {\n    id: \"flavor\",\n    title: \"Pick your flavor\",\n    links: {\n      default: [\n        { title: \"Images\", link: \"dataset#images\" },\n        { title: \"Text\", link: \"dataset#text\" },\n        { title: \"Audio\", link: \"dataset#audio\" },\n      ],\n    },\n  },\n  dataset: {\n    id: \"dataset\",\n    title: \"Pick your dataset\",\n    back: \"flavor\",\n    linkKey: \"flavor\",\n    links: {\n      default: [],\n      images: [\n        { title: \"CFAR10\", link: \"architecture#cfar10\" },\n        { title: \"EMNIST\", link: \"architecture#emnist\" },\n      ],\n      text: [\n        { title: \"Sentiment 140\", link: \"architecture#sentiment140\" },\n        { title: \"Purchase-100\", link: \"architecture#purchase100\" },\n      ],\n      audio: [\n        { title: \"LibreSpeech\", link: \"architecture#LibreSpeech\" },\n        {\n          title: \"Spoken Digit (FSDD)\",\n          link: \"architecture#SpokenDigit\",\n        },\n      ],\n    },\n  },\n  architecture: {\n    id: \"architecture\",\n    title: \"Pick your architecture\",\n    back: \"dataset\",\n    links: {\n      default: [\n        { title: \"dan4stacks\", link: \"train#dan4stacks\" },\n        { title: \"resnetv1\", link: \"train#resnetv1\" },\n      ],\n    },\n  },\n  train: {\n    id: \"train\",\n    title: \"How do you want to train your model?\",\n    back: \"architecture\",\n    links: {\n      default: [\n        { title: \"Natural\", link: \"training#natural\" },\n        { title: \"Robust\", link: \"training#robust\" },\n        { title: \"PATE\", link: \"training#pate\" },\n        { title: \"DP-SGD\", link: \"training#dp-sgd\" },\n      ],\n    },\n  },\n}\n\nexport default questions\n","const configurations = {\n  0: {\n    dataFile: \"./data/mi_results_baseline.json\",\n  },\n  1: {\n    dataFile: \"./data/mi_results_data_aug.json\",\n  },\n  2: {\n    dataFile: \"./data/mi_results_data_typo.json\",\n  },\n  3: {\n    dataFile: \"./data/mi_results_unbalanced.json\",\n  },\n}\n\nconst transformData = (data) => {\n  const chartData = Object.keys(data.MI_class_results || {}).reduce(\n    (all, x) => ({ ...all, [x]: data.MI_class_results[x].mi_auc }),\n    {}\n  )\n  return {\n    labels: Object.keys(chartData),\n    datasets: [\n      {\n        label: \"MI AUC\",\n        backgroundColor: \"rgba(0,0,255,0.4)\",\n        borderColor: \"rgba(0,0,255,0.7)\",\n        borderWidth: 1,\n        data: Object.values(chartData),\n      },\n    ],\n  }\n}\n\nexport const configurationData = async (key) => {\n  const results = await fetch(configurations[key].dataFile)\n  const json = await results.json()\n  return transformData(json)\n}\n","import { PickContextProvider, PickContext } from \"./PickContext\"\nimport { useContext, useEffect } from \"react\"\nimport questions from \"./questions\"\nimport { configurationData } from \"./data\"\nimport { Bar } from \"react-chartjs-2\"\n\nconst Section = ({ id, title, children, autoslide = 0 }) => {\n  const props = {\n    id,\n    \"data-transition\": \"slide\",\n  }\n  if (autoslide > 0) {\n    props[\"data-autoslide\"] = autoslide\n  }\n  return (\n    <section {...props}>\n      <h3>{title}</h3>\n      {children}\n    </section>\n  )\n}\n\nconst Button = ({\n  title,\n  link,\n  questionKey,\n  buttonType = \"pick\",\n  onClick = () => null,\n}) => {\n  const [configurations, setConfigurations] = useContext(PickContext)\n  const [linkKey, questionValue] = link.split(\"#\")\n  const setSelection = () => {\n    if (questionKey) {\n      setConfigurations({\n        ...configurations,\n        [configurations.current]: {\n          ...configurations[configurations.current],\n          [questionKey]: questionValue,\n        },\n      })\n    }\n    onClick()\n  }\n\n  return (\n    <a\n      href={`#/${linkKey}`}\n      className={buttonType}\n      onClick={() => setSelection()}\n    >\n      {title}\n    </a>\n  )\n}\n\nconst Question = ({ config }) => {\n  const [configurations] = useContext(PickContext)\n  const currentConfig = configurations[configurations.current]\n  const linksKey =\n    currentConfig[config.linkKey] in config.links\n      ? currentConfig[config.linkKey]\n      : \"default\"\n  return (\n    <Section id={config.id} title={config.title}>\n      {config.back ? (\n        <Button link={config.back} buttonType=\"round back\"></Button>\n      ) : null}\n      {(config.links[linksKey] || []).map((x) => (\n        <Button key={x.link} {...x} questionKey={config.id} />\n      ))}\n    </Section>\n  )\n}\n\nconst Training = () => {\n  const [configurations, setConfigurations] = useContext(PickContext)\n\n  useEffect(() => {\n    const getChartData = async () => {\n      let updated = false\n      const newConfigurations = { ...configurations }\n      for (let key in configurationKeys(configurations)) {\n        if (!(\"chartData\" in newConfigurations[key])) {\n          newConfigurations[key].chartData = await configurationData(key)\n          updated = true\n        }\n      }\n      if (updated) setConfigurations(newConfigurations)\n    }\n    if (configurations) getChartData()\n  }, [configurations, setConfigurations])\n  const currentConfig = configurations[configurations.current]\n  const title = `${currentConfig.train} Training In Progress...`\n  return (\n    <Section id=\"training\" title={title} autoslide={5000}>\n      <div className=\"loading\"></div>\n    </Section>\n  )\n}\n\nconst ResultSection = ({ description, chartData, refreshToken }) => {\n  if (!description) return null\n  return (\n    <div style={{ flex: 1, height: 300, minHeight: 300, width: 300 }}>\n      <h5>{description}</h5>\n      <Bar\n        key={refreshToken}\n        data={chartData || {}}\n        options={{ maintainAspectRatio: false, responsive: true }}\n      />\n    </div>\n  )\n}\n\nconst configurationKeys = (configurations) =>\n  Object.keys(configurations).filter(\n    (x) => typeof configurations[x] === \"object\"\n  )\n\nconst Results = () => {\n  const [configurations, setConfigurations] = useContext(PickContext)\n  const title =\n    configurations.current > 0 ? \"Compare Training Results\" : \"Training Results\"\n\n  const addComparison = () => {\n    const nextId = configurations.current + 1\n    setConfigurations({ ...configurations, current: nextId, [nextId]: {} })\n  }\n\n  const refreshToken = Date.now()\n  const resetComparisons = () => setConfigurations({ current: 0, 0: {} })\n\n  const chartTitle = (x) => `${x.dataset}/${x.architecture}/${x.train}`\n\n  return (\n    <Section id=\"results\" title={title}>\n      <div style={{ display: \"block\", minHeight: 360, height: 360 }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {configurationKeys(configurations).map((x) => (\n            <ResultSection\n              key={x}\n              chartData={configurations[x].chartData}\n              description={chartTitle(configurations[x])}\n              refreshToken={refreshToken}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"loading-options\">\n        <Button\n          title=\"Start Over\"\n          link=\"flavor\"\n          buttonType=\"back pick\"\n          onClick={resetComparisons}\n        />\n        {configurations.current < 2 ? (\n          <Button title=\"Compare\" link=\"flavor\" onClick={addComparison} />\n        ) : null}\n      </div>\n      <br />\n      {/* <pre>{JSON.stringify(currentConfig, 0, 2)}</pre> */}\n    </Section>\n  )\n}\n\nconst Pick = () => {\n  return (\n    <PickContextProvider>\n      {Object.keys(questions).map((x) => (\n        <Question key={x} config={questions[x]} />\n      ))}\n      <Training />\n      <Results />\n    </PickContextProvider>\n  )\n}\n\nexport default Pick\n","import \"./App.css\"\nimport \"./Pick\"\nimport Pick from \"./Pick\"\nimport { useEffect } from \"react\"\nimport Reveal from \"reveal.js\"\nimport \"reveal.js/dist/reveal.css\"\nimport \"reveal.js/dist/theme/solarized.css\"\n\nconst App = () => {\n  useEffect(() => {\n    Reveal.initialize({\n      center: true,\n      history: true,\n      controls: false,\n      keyboard: false,\n    })\n  }, [])\n  return (\n    <div className=\"reveal\">\n      <div className=\"slides\">\n        <Pick />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}