{"version":3,"sources":["context/GameContext.js","components/game/Scoreboard.js","util/data.js","components/game/Util.js","components/game/FullGame.js","hooks/useWindowSize.js","components/game/Match.js","util/misc.js","components/game/Practice.js","components/game/Menu.js","views/GameView.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","GameContextProvider","props","useState","players","name","color","selections","score","images","previousPracticeRounds","practiceRound","gameSettings","setGameSettings","Provider","value","children","Container","styled","div","Board","SideContainer","Side","Team","ScoreContainer","Score","Bottom","ScoreBoard","home","away","bottomDisplay","totalPossible","ScoreboardSide","player","style","scoreDisplay","percentageDisplay","toFixed","bottom","borderLeft","sanitizeJson","obj","Object","keys","reduce","all","x","p","toLowerCase","allGroups","data","Set","groups","gameData","a","fetch","allOptions","json","correctData","map","practiceOptions","groupNumber","filter","includes","gameOptions","items","size","r","Math","random","sort","b","slice","length","isDefined","undefined","CenteredOuter","CenteredInner","Centered","ToggleButtonCheckBoxWrapper","CheckButton","button","checked","left","ToggleButton","trueLabel","falseLabel","trueBgColor","falseBgColor","onToggle","defaultValue","onClick","right","GameButton","Emoji","className","label","symbol","role","aria-label","String","fromCodePoint","Sidecar","RangeContainer","ControlLabel","RangeTrack","RangeHandle","RangeSlider","min","max","onChange","step","values","_value","renderTrack","renderThumb","SIZES","height","width","generateGameData","_gameData","i","correctAnswers","correct","parseInt","labelStyle","padding","fontSize","background","toDeerImage","img","index","image","tags","src","path","thumbnail","thumbnailWidth","thumbnailHeight","customOverlay","toImage","_img","title","findYouPlayer","findCarnacPlayer","SelectionsOverlayContainer","CheckButtonContainer","SelectionsOverlay","useContext","_carnac","_you","isSelected","Choices","useEffect","resetGame","onSelectImage","updated","you","hasOwnProperty","enableImageSelection","onClickThumbnail","tagStyle","showLightboxThumbnails","enableLightbox","original","updateFn","currentGameData","carnacAnswers","carnac","calculateScore","_selections","wrongAnswers","omittedAnswers","ChallengeCarnacContainer","ChallengeCarnac","selectionCount","textAlign","fontWeight","display","flexDirection","disabled","InformationContainer","Information","ResultsContainer","Results","marginTop","_winner","GameContainer","FullGame","minWidth","maxWidth","useWindowSize","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","DraggableImageBase","DraggableImageElement","DraggableImagePlaceholder","between","findTarget","targets","dropLocation","rect","getBoundingClientRect","id","top","y","box","point","shift","DraggableImageContainer","ReactDOM","createPortal","document","getElementById","moveDraggable","draggable","correctPosition","target","source","DraggableImage","targetIds","imagePlaceholderId","draggableDomRef","useRef","draggableRef","current","d","PlainDraggable","snapped","snap","edge","onDrag","moveTo","onDragEnd","line","remove","fromId","toId","options","LeaderLine","startPlugColor","endPlugColor","gradient","Connection","alt","ref","DraggableContainer","DraggableTarget","toKey","Match","clean","k","styleDiv","getDiv","forEach","PRACTICE_IMAGE_SIZE","container","AI_NAME","COLORS","setCurrentIndex","version","practiceRoundNumber","console","log","push","scrollingImages","url","answer","property","allQuestionsAnswered","seenbefore","PracticeResultContainer","PracticeResultTitle","PracticeResult","question","agree","questionNumber","isCurrentImage","waiting","text","incorrect","EndButtonsContainer","EndButtons","to","PracticeResultsContainer","PracticeResultsTitle","PracticeResultsSubtitle","h4","PracticeResults","currentImageIndex","ImageSliderOverrideStyles","currentIndex","bulletContainerChildIndices","bulletStyle","colors","containerIndex","border","join","imageSize","imagePercent","paddingLeft","paddingTop","dangerouslySetInnerHTML","__html","_","toColor","QuestionWithButtonsContainer","QuestionWithButtonsButtonContainer","QuestionText","QuestionWithButtons","onAnswer","TuningSideTileContainer","TuningSideTile","ProbabilityOuterContainer","Probability","percent","animate","reveal","hideLabel","totalValue","lineWidth","dataEntry","fill","labelPosition","TuningsOuterContainer","TuningSelectContainer","TuningSelect","selectStyles","provided","indicatorsContainer","option","whiteSpace","content","icon","menu","singleValue","styles","isSearchable","Tunings","getImageDiv","onLoadImageVariant","defaultStyle","noise","setStyles","selectedVariant","setSelectedVariant","changeImage","key","transition","variants","variantLabel","updateImage","additionalStyles","toggle","probability","augmentVariants","startsWith","optionDecorations","hflip","vflip","replace","noop","decorate","object","decoration","fn","defaults","bind","decorationKey","find","noiseLevelVariants","noiseLevels","level","noiseLevel","Caption","SwitchModeContainer","SwitchModeButton","selected","SwitchMode","mode","onSwitchMode","labels","trick","toModes","toMode","PracticeVoteButtonsContainer","containerSize","containerSidePadding","PictureLabel","changed","ImageControls","displayMode","setDisplayMode","loadedImage","setLoadedImage","defaultLoadedImageState","useMemo","onClickUpdateProperty","guessed","onAgreementClick","onSeenBeforeClick","position","previousLabel","PracticeContainer","Practice","imageState","setImageState","reset","sliderRef","showBullets","showNavs","navStyle","onStartSlide","idx","borderBottomLeftRadius","borderTopLeftRadius","backgroundColor","Title","h1","ButtonContainer","Menu","process","Modal","setAppElement","PageHeader","subtitle","marginBottom","GameModal","withRouter","history","isModalOpen","setModalOpen","toggleModal","isOpen","onRequestClose","contentLabel","alwaysShowTitle","mainButtonStyles","GameView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.82c6e0b2.chunk.js","sourcesContent":["import { useState, createContext } from \"react\"\n\nexport const GameContext = createContext()\n\nexport const GameContextProvider = (props) => {\n  const [gameSettings, setGameSettings] = useState({\n    players: [\n      { name: \"YOU\", color: \"green\", selections: [], score: null },\n      {\n        name: \"CARNAC\",\n        color: \"red\",\n        selections: [],\n        score: null,\n      },\n    ],\n    images: [],\n    previousPracticeRounds: [],\n    practiceRound: {},\n  })\n\n  return (\n    <GameContext.Provider value={[gameSettings, setGameSettings]}>\n      {props.children}\n    </GameContext.Provider>\n  )\n}\n","import styled from \"styled-components\"\n\nconst Container = styled.div`\n  margin-top: 2px;\n  background-color: #444;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-family: Futura;\n  min-width: 400px;\n  max-width: 400px;\n  width: 400px;\n`\n\nconst Board = styled.div`\n  margin: 6px;\n  border: 5px solid white;\n  border-radius: 10px;\n  flex-direction: row;\n`\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst Side = styled.div`\n  flex: 1;\n  text-align: center;\n`\nconst Team = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 24pt;\n  border-bottom: 5px solid white;\n  margin: 0;\n  font-weight: bold;\n`\nconst ScoreContainer = styled.div`\n  padding: 10px;\n`\nconst Score = styled.div`\n  font-size: 48pt;\n  font-family: Impact, sans-serif;\n`\nconst Bottom = styled.div`\n  font-size: 18;\n  padding: 5px;\n  border-top: 5px solid white;\n  font-weight: bold;\n  text-align: center;\n`\n\nconst ScoreBoard = ({\n  home,\n  away,\n  bottomDisplay = () => \"\",\n  totalPossible = 0,\n}) => {\n  const ScoreboardSide = ({ player, style = {} }) => {\n    const scoreDisplay =\n      totalPossible > 0 ? `${player.score} / ${totalPossible}` : player.score\n    const percentageDisplay =\n      totalPossible > 0 ? (\n        <div>({((player.score / totalPossible) * 100).toFixed()}%)</div>\n      ) : null\n    return (\n      <Side style={style}>\n        <Team style={{ color: player.color }}>{player.name}</Team>\n        <ScoreContainer>\n          <Score>{scoreDisplay}</Score>\n          {percentageDisplay}\n        </ScoreContainer>\n      </Side>\n    )\n  }\n\n  const bottom = bottomDisplay()\n\n  return (\n    <Container>\n      <Board>\n        <SideContainer>\n          <ScoreboardSide player={home} />\n          <ScoreboardSide\n            player={away}\n            style={{ borderLeft: \"3px solid white\" }}\n          />\n        </SideContainer>\n        {bottom ? <Bottom>{bottom}</Bottom> : null}\n      </Board>\n    </Container>\n  )\n}\n\nexport default ScoreBoard\n","const colors = [\"0,0,255\", \"255,0,0\", \"0,255,0\", \"255,0,255\"]\n\nconst defaultDataSet = {\n  borderWidth: 1,\n}\n\nconst dataSet = (index) => {\n  const color = colors[index]\n  const backgroundColor = `rgba(${color},0.4)`\n  const borderColor = `rgba(${color},0.7)`\n  return {\n    ...defaultDataSet,\n    backgroundColor,\n    borderColor,\n  }\n}\n\nconst selectionData = (data) =>\n  Object.keys(data.MI_class_results || {}).reduce(\n    (all, x) => ({ ...all, [x]: data.MI_class_results[x].mi_auc }),\n    {}\n  )\n\nexport const configurationKeys = (configurations) =>\n  Object.keys(configurations).filter(\n    (x) => typeof configurations[x] === \"object\"\n  )\n\nconst fetchConfigurationData = async (configuration) => {\n  const key = (x) => `${x.flavor}_${x.dataset}_${x.architecture}_${x.train}`\n  const filepath = (name) => `./data/${name}.json`\n  const filekey = key(configuration)\n  let results\n  try {\n    const response = await fetch(filepath(filekey))\n    results = await response.json()\n  } catch (e) {\n    console.log(`No data file available for configuration ${filekey}`)\n    const response = await fetch(filepath(\"missing_data\"))\n    results = await response.json()\n  }\n  return [filekey, results]\n}\n\nexport const configurationData = async (configuration) => {\n  const [key, json] = await fetchConfigurationData(configuration)\n  return {\n    key,\n    data: selectionData(json),\n  }\n}\n\nexport const chartData = (selections) => {\n  const selectionKeys = configurationKeys(selections)\n  const hasData = selectionKeys.reduce(\n    (all, x) => all && \"data\" in selections[x],\n    true\n  )\n  if (hasData) {\n    const labels = [\n      ...new Set(\n        selectionKeys.reduce(\n          (all, x) => [...all, ...Object.keys(selections[x].data || {})],\n          []\n        )\n      ),\n    ].sort((a, b) => parseInt(a) > parseInt(b))\n    const keyData = selectionKeys.reduce(\n      (all, x) => ({\n        ...all,\n        [selections[x].key]: {\n          data: selections[x].data,\n          label: `MI AUC (${selections[x].flavor}/${selections[x].dataset}/${selections[x].architecture}/${selections[x].train})`.toUpperCase(),\n        },\n      }),\n      {}\n    )\n    return {\n      labels,\n      datasets: Object.keys(keyData).map((x, i) => {\n        return {\n          ...dataSet(i),\n          label: keyData[x].label,\n          data: labels.map((y) => keyData[x].data[y]),\n        }\n      }),\n    }\n  } else return {}\n}\n\nconst sample = (items, size) =>\n  items\n    .map((x) => ({ x, r: Math.random() }))\n    .sort((a, b) => a.r - b.r)\n    .map((a) => a.x)\n    .slice(0, size || items.length)\n\nexport const PRACTICE_ROUND_IMAGE_COUNT = 5\nexport const GAME_IMAGE_COUNT = 12\n\nconst sanitizeJson = (obj) => {\n  const stringToBooleanOrOriginal = (p) =>\n    p && (p === \"true\" || p === \"false\") ? p.toLowerCase() === \"true\" : p\n  return Object.keys(obj).reduce(\n    (all, x) => ({\n      ...all,\n      [x]: stringToBooleanOrOriginal(obj[x]),\n    }),\n    {}\n  )\n}\n\n// const PRACTICE_SETS = [1, 2]\n// const PRACTICE_SETS = [1, 2, 3, 4, 5]\n\nconst allGroups = (data) =>\n  data.reduce((all, x) => [...new Set([...all, ...(x.groups || [])])], [])\n\nconst practiceSet = (images, groupNumber) => {\n  // setIndex = isDef(setIndex)\n  //   ? setIndex\n  //   : PRACTICE_SETS[Math.floor(Math.random() * PRACTICE_SETS.length)]\n  return images.filter((x) => x.groups && x.groups.includes(groupNumber))\n}\n\nexport const gameData = async () => {\n  // const allOptions = await fetch(\n  //   \"https://gitlab-int.ctc.com/RECON-GURU/interact/-/snippets/72/raw/master/game.json\",\n  //   {\n  //     method: \"GET\",\n  //     mode: \"no-cors\",\n  //   }\n  // )\n  const allOptions = await fetch(`./data/game-data.json`)\n  const data = await allOptions.json()\n  const correctData = data.map(sanitizeJson)\n  return {\n    practiceOptions: allGroups(correctData).reduce(\n      (all, x) => ({ ...all, [x]: practiceSet(correctData, x) }),\n      {}\n    ),\n    gameOptions: sample(correctData, GAME_IMAGE_COUNT),\n  }\n}\n\nexport const isDefined = (x) => x !== null && x !== undefined\n","import PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport \"./Game.css\"\nimport { isDefined } from \"../../util/data\"\nimport { Range } from \"react-range\"\n\nconst CenteredOuter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  height: 100%;\n`\nconst CenteredInner = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  width: 100%;\n`\n\nexport const Centered = ({ children }) => (\n  <CenteredOuter>\n    <CenteredInner>{children}</CenteredInner>\n  </CenteredOuter>\n)\n\nconst ToggleButtonCheckBoxWrapper = styled.div`\n  position: relative;\n  background-color: lightgray;\n  padding: 5px;\n  border-radius: 4px;\n`\n\nconst CheckButton = styled.button`\n  background: ${({ checked, color }) => (checked ? color : \"gray\")};\n  padding: 5px;\n  color: ${({ checked }) => (checked ? \"white\" : \"black\")};\n  outline: none;\n  border: none;\n  border-radius: ${({ left }) => (left ? \"4px 0 0 4px\" : \"0 4px 4px 0\")};\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: ${({ checked }) =>\n      checked ? \"1px 1px 1px black;\" : \"1px 1px 1px lightgray;\"};\n  }\n`\n\nexport const ToggleButton = ({\n  trueLabel = \"YES\",\n  falseLabel = \"NO\",\n  trueBgColor,\n  falseBgColor,\n  onToggle,\n  defaultValue,\n}) => {\n  return (\n    <ToggleButtonCheckBoxWrapper>\n      <CheckButton\n        checked={isDefined(defaultValue) && defaultValue}\n        color={trueBgColor}\n        onClick={() => onToggle(true)}\n        left={true}\n      >\n        {trueLabel}\n      </CheckButton>\n      <CheckButton\n        checked={isDefined(defaultValue) && !defaultValue}\n        color={falseBgColor}\n        onClick={() => onToggle(false)}\n        right={true}\n      >\n        {falseLabel}\n      </CheckButton>\n    </ToggleButtonCheckBoxWrapper>\n  )\n}\n\nToggleButton.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  trueLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  falseLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n}\n\nexport const GameButton = styled.button`\n  border: 1px solid lightgray;\n  text-transform: uppercase;\n  font-family: Futura, sans-serif;\n  font-size: 1.4rem;\n  padding: 5px;\n  border-bottom: 5px solid grey;\n  color: darkslategray;\n  margin-top: 10px;\n  cursor: pointer;\n  &:disabled {\n    cursor: auto;\n    color: lightgray;\n  }\n`\n\nexport const Emoji = ({ className, style, label, symbol }) => (\n  <span className={className} style={style} role=\"img\" aria-label={label}>\n    {String.fromCodePoint(symbol)}\n  </span>\n)\n\nexport const Sidecar = styled.div`\n  background-color: white;\n`\n\nconst RangeContainer = styled.div`\n  padding: 5px;\n`\n\nexport const ControlLabel = styled.div`\n  margin-bottom: 10px;\n  font-size: 0.9rem;\n  text-align: center;\n`\n\nconst RangeTrack = styled.div`\n  height: 6px;\n  width: 100%;\n  background-color: #ccc;\n`\n\nconst RangeHandle = styled.div`\n  height: 18px;\n  width: 18px;\n  background-color: #999;\n  border: 1px solid #555;\n  font-size: 0.7rem;\n  text-align: center;\n  line-height: 1.7;\n  outline: none;\n  border-radius: 4px;\n`\n\nexport const RangeSlider = ({\n  value,\n  min,\n  max,\n  onChange,\n  step = 1,\n  label = null,\n}) => {\n  return (\n    <RangeContainer>\n      {label ? <ControlLabel>{label}</ControlLabel> : null}\n      <Range\n        step={step}\n        min={min}\n        max={max}\n        values={[value]}\n        onChange={(values) => {\n          const [_value] = values\n          if (_value !== value) {\n            onChange(_value)\n          }\n        }}\n        renderTrack={({ props, children }) => (\n          <RangeTrack {...props}>{children}</RangeTrack>\n        )}\n        renderThumb={({ props }) => (\n          <RangeHandle {...props}>{value}</RangeHandle>\n        )}\n      />\n    </RangeContainer>\n  )\n}\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport Gallery from \"react-grid-gallery\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport ScoreBoard from \"./Scoreboard\"\nimport { Centered, GameButton, Sidecar } from \"./Util\"\nimport { gameData, isDefined, GAME_IMAGE_COUNT } from \"../../util/data\"\nimport \"./Game.css\"\n\nconst SIZES = {\n  thumbnail: {\n    height: 32,\n    width: 32,\n  },\n  grid: {\n    width: 710,\n  },\n}\n\nconst generateGameData = async () => {\n  const _gameData = await gameData()\n  const images = _gameData.gameOptions.reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  return {\n    gameData: _gameData,\n    images,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst labelStyle = {\n  padding: \"5px\",\n  fontSize: \"75%\",\n  color: \"white\",\n  background: \"rgba(0,0,0,0.5)\",\n}\n\nconst toImage = (image, index, tags = () => []) => {\n  const img = {\n    src: `img/${image.path}`,\n    thumbnail: `img/${image.path}`,\n    thumbnailWidth: SIZES.thumbnail.width,\n    thumbnailHeight: SIZES.thumbnail.height,\n    index,\n    correct: image.correct,\n    customOverlay: <SelectionsOverlay index={index} />,\n  }\n  img.tags = tags(img) || []\n  return img\n}\nconst toDeerImage = (img, index) =>\n  toImage(img, index, (_img) => [\n    {\n      value: `${img.label}`,\n      title: `COMPY Says: ${img.label}`,\n    },\n  ])\n\nconst findYouPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[0]\n    : null\n\nconst findCarnacPlayer = (gameSettings) =>\n  gameSettings && gameSettings.players && gameSettings.players.length\n    ? gameSettings.players[1]\n    : null\n\nconst SelectionsOverlayContainer = styled.div`\n  color: red;\n  font-weight: bold;\n  text-align: right;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ correct }) =>\n    correct ? \"rgba(75, 75, 75, 0.8)\" : \"rgba(75, 75, 75, 0.0)\"};\n  width: 100%;\n  height: 100%;\n`\n\nconst CheckButtonContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0%;\n`\n\nconst SelectionsOverlay = ({ index }) => {\n  const [gameSettings] = useContext(GameContext)\n  const _carnac = findCarnacPlayer(gameSettings)\n  const _you = findYouPlayer(gameSettings)\n  return (\n    <SelectionsOverlayContainer\n      correct={isDefined(_you.score) && !gameSettings.images[index].correct}\n    >\n      {_carnac.score && _carnac.selections.includes(parseInt(index)) ? (\n        <CheckButtonContainer>\n          <CheckButton color={_carnac.color} isSelected={true} />\n        </CheckButtonContainer>\n      ) : null}\n    </SelectionsOverlayContainer>\n  )\n}\n\nconst Choices = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n\n  useEffect(() => {\n    resetGame(gameSettings, setGameSettings) // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onSelectImage = (index) => {\n    const updated = { ...gameSettings }\n    const you = findYouPlayer(updated)\n    if (you.score) return\n    var img = updated.images[index]\n    if (img.hasOwnProperty(\"isSelected\")) img.isSelected = !img.isSelected\n    else img.isSelected = true\n    you.selections = updated.images\n      .map((x, index) => ({ ...x, index }))\n      .filter((x) => x.isSelected)\n      .map((x) => x.index)\n    setGameSettings(updated)\n  }\n\n  const you = findYouPlayer(gameSettings)\n  return (\n    <div>\n      <Gallery\n        images={gameSettings.images}\n        enableImageSelection={!you.score}\n        onSelectImage={onSelectImage}\n        onClickThumbnail={onSelectImage}\n        tagStyle={labelStyle}\n        showLightboxThumbnails={true}\n        enableLightbox={false}\n      />\n    </div>\n  )\n}\n\nconst resetGame = async (original, updateFn) => {\n  const updated = { ...original }\n  const currentGameData = await generateGameData()\n  updated.currentGameData = currentGameData\n  updated.images = Object.keys(currentGameData.images).map((i) =>\n    toDeerImage(currentGameData.images[i], i)\n  )\n  const _carnac = findCarnacPlayer(updated)\n  const _you = findYouPlayer(updated)\n  _carnac.score = null\n  _you.score = null\n\n  const carnacAnswers = () => {\n    return Object.keys(currentGameData.images)\n      .filter((i) => {\n        const img = currentGameData.images[i]\n        return (\n          (\"carnac\" in img && img.carnac) ||\n          (!(\"carnac\" in img) && img.label === \"deer\")\n        )\n      })\n      .map((i) => parseInt(i))\n  }\n  _carnac.selections = carnacAnswers()\n  _you.selections = []\n  updateFn(updated)\n}\n\nconst calculateScore = (gameData, selections) => {\n  const _selections = selections || []\n  const wrongAnswers = _selections.filter(\n    (x) => !gameData.correctAnswers.includes(x)\n  )\n  const omittedAnswers = gameData.correctAnswers.filter(\n    (x) => !_selections.includes(x)\n  )\n\n  return (\n    Object.keys(gameData.images).length -\n    wrongAnswers.length -\n    omittedAnswers.length\n  )\n}\n\nconst ChallengeCarnacContainer = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst ChallengeCarnac = ({ onClick }) => {\n  const [gameSettings] = useContext(GameContext)\n  const selectionCount = gameSettings.players[0].selections.length\n  return (\n    <ChallengeCarnacContainer>\n      <div>\n        <p>\n          COMPY has seen a lot of deer images before, and he is really good at\n          identifying a deer when he sees one.\n        </p>\n        <p>\n          Can you tell which of the following deer images COMPY may have seen?\n          There is at least one.\n        </p>\n        <p>Select them and then hit the \"Challenge Carnac\" button (below).</p>\n        <p>\n          You will be playing against Carnac and whomever gets more correct,\n          wins!\n        </p>\n        <p style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          {selectionCount > 0\n            ? `${selectionCount} picture(s) selected`\n            : \"1 or more selections required to play\"}\n        </p>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <GameButton onClick={onClick} disabled={selectionCount === 0}>\n          Challenge Carnac!\n        </GameButton>\n      </div>\n    </ChallengeCarnacContainer>\n  )\n}\n\nconst InformationContainer = styled(Sidecar)`\n  display: flex;\n  margin-top: 2px;\n  height: 99%;\n  border: 1px solid darkgray;\n  border-top-right-radius: 15px;\n  border-bottom-right-radius: 15px;\n`\n\nconst Information = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n\n  const loadScores = () => {\n    const updated = { ...gameSettings }\n    const _carnac = findCarnacPlayer(updated)\n    const _you = findYouPlayer(updated)\n    _carnac.score = calculateScore(\n      gameSettings.currentGameData,\n      _carnac.selections\n    )\n    _you.score = calculateScore(gameSettings.currentGameData, _you.selections)\n    setGameSettings(updated)\n  }\n  return (\n    <InformationContainer>\n      {carnac.score ? <Results /> : <ChallengeCarnac onClick={loadScores} />}\n    </InformationContainer>\n  )\n}\n\nconst ResultsContainer = styled.div`\n  width: 100%;\n  margin: 10px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Results = () => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const carnac = findCarnacPlayer(gameSettings)\n  const you = findYouPlayer(gameSettings)\n  const playAgain = () => resetGame(gameSettings, setGameSettings)\n  const winner = () =>\n    you.score > carnac.score ? you : you.score < carnac.score ? carnac : null\n  const winnerMessage = () => {\n    const _winner = winner()\n    return _winner\n      ? `The winner is ${_winner.name}!`\n      : `${you.name} tied ${carnac.name}!`\n  }\n  return (\n    <ResultsContainer>\n      <div style={{ marginTop: 15 }}>\n        <ScoreBoard\n          home={you}\n          away={carnac}\n          bottomDisplay={winnerMessage}\n          totalPossible={GAME_IMAGE_COUNT}\n        />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n        <GameButton onClick={playAgain}>Play Again!</GameButton>\n      </div>\n    </ResultsContainer>\n  )\n}\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst FullGame = () => {\n  return (\n    <Centered>\n      <GameContainer>\n        <div style={{ minWidth: SIZES.grid.width, maxWidth: SIZES.grid.width }}>\n          <Choices />\n        </div>\n        <div style={{ maxWidth: 440, minWidth: 440 }}>\n          <Information />\n        </div>\n      </GameContainer>\n    </Centered>\n  )\n}\n\nexport default FullGame\n","import { useState, useEffect } from \"react\"\n\n// https://usehooks.com/useWindowSize/\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import ReactDOM from \"react-dom\"\nimport PlainDraggable from \"plain-draggable\"\nimport LeaderLine from \"leader-line-new\"\nimport { useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport \"./Game.css\"\nimport useWindowSize from \"../../hooks/useWindowSize\"\n\nconst SIZES = {\n  tile: {\n    height: 100,\n    width: 100,\n  },\n}\n\nconst DraggableImageBase = styled.img`\n  height: ${SIZES.tile.height}px;\n  width: ${SIZES.tile.width}px;\n  border: 1px solid slategray;\n  border-radius: 5px;\n`\n\nconst DraggableImageElement = styled(DraggableImageBase)`\n  z-index: 99;\n  position: absolute;\n  opacity: 75%;\n`\n\nconst DraggableImagePlaceholder = styled(DraggableImageBase)`\n  /* z-index: 99; */\n  /* position: absolute; */\n`\n\nconst between = (x, min, max) => x >= min && x <= max\nconst pointInBox = (point, box) =>\n  between(point.left, box.left, box.right) &&\n  between(point.top, box.top, box.bottom)\n\nconst findTarget = (targets, dropLocation) =>\n  targets\n    .map((x) => {\n      const rect = x.getBoundingClientRect()\n      return {\n        id: x.id,\n        top: rect.y,\n        left: rect.x,\n        bottom: rect.y + rect.height,\n        right: rect.x + rect.width,\n      }\n    })\n    .filter((x) => pointInBox(dropLocation, x))\n    .map((x) => x.id)\n    .slice(0, 1)\n    .shift()\n\nconst Connection = (fromId, toId, options = {}) =>\n  new LeaderLine(\n    document.getElementById(fromId),\n    document.getElementById(toId),\n    {\n      startPlugColor: \"slategray\",\n      endPlugColor: \"slategray\",\n      gradient: true,\n      ...options,\n    }\n  )\n\nconst DraggableImageContainer = ({ children }) => {\n  return ReactDOM.createPortal(children, document.getElementById(\"root\"))\n}\n\nconst moveDraggable = (draggable) => {\n  const correctPosition = document\n    .getElementById(draggable.target || draggable.source)\n    .getBoundingClientRect()\n  draggable.left = correctPosition.x\n  draggable.top = correctPosition.y\n}\n\nconst DraggableImage = ({ index, image, targetIds }) => {\n  const windowSize = useWindowSize()\n  const imagePlaceholderId = `image${index}`\n  const draggableDomRef = useRef()\n  const draggableRef = useRef()\n  useEffect(() => {\n    if (!draggableDomRef || !draggableDomRef.current) return\n    const targets = targetIds.map((x) => document.getElementById(x))\n    const d = new PlainDraggable(draggableDomRef.current)\n    d.source = imagePlaceholderId\n    draggableRef.current = d\n    let snapped = false\n    moveDraggable(d)\n    d.snap = {\n      targets,\n      edge: \"inside\",\n    }\n    d.onDrag = (moveTo) => {\n      snapped = moveTo.snapped\n    }\n    d.onDragEnd = (moveTo) => {\n      if (snapped) {\n        if (d.line) d.line.remove()\n        d.target = findTarget(targets, moveTo)\n        d.line = Connection(imagePlaceholderId, d.target)\n      }\n      moveDraggable(d)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => moveDraggable(draggableRef.current), [windowSize])\n  return (\n    <>\n      <DraggableImagePlaceholder\n        id={imagePlaceholderId}\n        src={`img/${image}`}\n        alt={image}\n      />\n      <DraggableImageContainer>\n        <DraggableImageElement\n          src={`img/${image}`}\n          alt={image}\n          ref={draggableDomRef}\n        />\n      </DraggableImageContainer>\n    </>\n  )\n}\n\nconst DraggableContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`\n\nconst DraggableTarget = styled(DraggableImageBase)`\n  background-color: #ddd;\n`\n\nconst images = [\n  \"cifar10_82_deer_in.png\",\n  \"cifar10_1615_deer_in.png\",\n  \"cifar10_1615_deer_in.png\",\n  \"cifar10_82_deer_in.png\",\n]\nconst targetIds = images.map((x, i) => `target${i}`)\n\nconst SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  background-color: lightgray;\n  padding: 25px;\n  border-radius: 10px;\n  margin: 20px 0;\n`\n\nconst toKey = (x, index) => `${x}_${index}`\n\nconst Match = () => {\n  return (\n    <DraggableContainer>\n      <SideContainer>\n        {images.map((x, i) => (\n          <DraggableImage\n            key={toKey(x, i)}\n            index={i}\n            image={x}\n            targetIds={targetIds}\n          />\n        ))}\n      </SideContainer>\n      <div>Match Em</div>\n      <SideContainer>\n        {targetIds.map((x, i) => (\n          <DraggableTarget key={toKey(x, i)} id={x} index={i} />\n        ))}\n      </SideContainer>\n    </DraggableContainer>\n  )\n}\n\nexport default Match\n","export const clean = (obj) =>\n  Object.keys(obj)\n    .filter((k) => obj[k] != null)\n    .reduce((a, k) => ({ ...a, [k]: obj[k] }), {})\n\nexport const styleDiv = (getDiv, style) => {\n  const div = getDiv()\n  Object.keys(style).forEach((k) => (div.style[k] = style[k]))\n}\n\nexport const isDef = (x) => x !== null && x !== undefined\n","import { GameContext } from \"../../context/GameContext\"\nimport { useContext, useState, useEffect, useRef, useMemo } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { gameData, isDefined } from \"../../util/data\"\nimport { clean, styleDiv, isDef } from \"../../util/misc\"\nimport {\n  Centered,\n  ToggleButton,\n  GameButton,\n  Emoji,\n  Sidecar,\n  RangeSlider,\n  ControlLabel,\n} from \"./Util\"\nimport { PieChart } from \"react-minimal-pie-chart\"\nimport SimpleImageSlider from \"react-simple-image-slider\"\nimport Select from \"react-select\"\nimport styled from \"styled-components\"\nimport \"./Game.css\"\n\nconst PRACTICE_IMAGE_SIZE = {\n  container: {\n    width: 660,\n    height: 560,\n  },\n  image: {\n    width: 300,\n    height: 300,\n  },\n}\n\nconst AI_NAME = \"COMPY\"\nconst COLORS = {\n  yes: \"#4caf50\",\n  no: \"#dc004d\",\n  neutral: \"antiquewhite\",\n}\n\nconst resetGame = async (original, updateFn, setCurrentIndex) => {\n  const updated = { ...original }\n  updated.version = isDefined(updated.version) ? updated.version + 1 : 1\n  updated.practiceRoundNumber =\n    updated.practiceRoundNumber === 1\n      ? 2\n      : updated.practiceRoundNumber === 2\n      ? 1\n      : 1\n  console.log(`Practice reset to Round ${updated.practiceRoundNumber}`)\n  const currentGameData = await generateGameData(updated.practiceRoundNumber)\n  if (updated.practiceRound && Object.keys(updated.practiceRound).length) {\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n  }\n  updated.currentGameData = currentGameData\n  setCurrentIndex(0)\n  updated.practiceRound = currentGameData.scrollingImages.reduce(\n    (all, x, i) => ({\n      ...all,\n      [x.path]: { ...x },\n    }),\n    {}\n  )\n  updateFn(updated)\n}\n\nconst generateGameData = async (practiceRoundNumber) => {\n  const _gameData = await gameData()\n  const images = _gameData.practiceOptions[practiceRoundNumber].reduce(\n    (all, x, i) => ({ ...all, [i]: x }),\n    {}\n  )\n  const scrollingImages = Object.keys(images).map((i) => ({\n    ...images[i],\n    url: `img/${images[i].path}`,\n  }))\n  return {\n    gameData: _gameData,\n    images,\n    scrollingImages,\n    correctAnswers: Object.keys(images)\n      .filter((i) => images[i].correct)\n      .map((i) => parseInt(i)),\n  }\n}\n\nconst answer = (property, gameSettings, img) =>\n  !(img in gameSettings.practiceRound)\n    ? null\n    : gameSettings.practiceRound[img][property]\n\nconst allQuestionsAnswered = (gameSettings) =>\n  Object.keys(gameSettings.practiceRound).reduce(\n    (all, x) => all && isDefined(gameSettings.practiceRound[x].seenbefore),\n    true\n  )\n\nconst PracticeResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0 10px 10px;\n  border-top: 1px solid lightgray;\n  background-color: ${(props) => (props.current ? \"lightgray\" : \"none\")};\n  transition: background-color 1s ease;\n`\n\nconst PracticeResultTitle = styled.b`\n  color: ${(props) => props.color};\n  &:before {\n    content: \"${(props) => (props.current ? \"> \" : \"\")}\";\n  }\n`\n\nconst PracticeResult = ({\n  question: { path, correct, agree, seenbefore },\n  questionNumber,\n  isCurrentImage,\n}) => {\n  const answer =\n    !isDefined(agree) || !isDefined(seenbefore)\n      ? \"waiting\"\n      : (seenbefore && correct) || (!seenbefore && !correct)\n      ? \"correct\"\n      : \"incorrect\"\n  const displaySettings = {\n    waiting: {\n      text: \"Waiting on your guesses...\",\n      color: \"black\",\n    },\n    correct: {\n      text: `You know ${AI_NAME} well!`,\n      color: COLORS.yes,\n    },\n    incorrect: {\n      text: `Sorry, you don't know ${AI_NAME} very well...`,\n      color: COLORS.no,\n    },\n  }\n  const display = displaySettings[answer]\n  return (\n    <PracticeResultContainer current={isCurrentImage}>\n      <PracticeResultTitle\n        color={display.color}\n        current={isCurrentImage}\n        title={path}\n      >\n        Image {questionNumber}\n      </PracticeResultTitle>\n      <div>{display.text}</div>\n    </PracticeResultContainer>\n  )\n}\n\nconst EndButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst EndButtons = ({ resetGame }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const challengeCarnac = () => {\n    const updated = { ...gameSettings }\n    updated.previousPracticeRounds.push({ ...updated.practiceRound })\n    updated.practiceRound = {}\n    setGameSettings(updated)\n  }\n  return (\n    <EndButtonsContainer>\n      <GameButton onClick={resetGame}>More Practice</GameButton>\n      <Link to=\"/game\">\n        <GameButton onClick={challengeCarnac}>Challenge Carnac!</GameButton>\n      </Link>\n    </EndButtonsContainer>\n  )\n}\n\nconst PracticeResultsContainer = styled(Sidecar)`\n  border-top: 1px solid slategray;\n  border-bottom: 1px solid slategray;\n  border-right: 1px solid slategray;\n  border-top-right-radius: 15px;\n  padding: 10px;\n  border-bottom-right-radius: 15px;\n  min-width: 350px;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst PracticeResultsTitle = styled.div`\n  border-bottom: 2px solid darkgray;\n  font-size: 1.9rem;\n  font-weight: 500;\n  text-align: center;\n  padding-bottom: 12px;\n  margin: 10px 0;\n  text-shadow: 2px 2px 2px slategray;\n`\n\nconst PracticeResultsSubtitle = styled.h4`\n  margin: 10px;\n`\n\nconst PracticeResults = ({ resetGame, currentImageIndex }) => {\n  const [gameSettings] = useContext(GameContext)\n  return (\n    <PracticeResultsContainer>\n      <div>\n        <PracticeResultsTitle>\n          Practice Round {gameSettings.practiceRoundNumber}\n        </PracticeResultsTitle>\n        <PracticeResultsSubtitle>\n          Make a selection for each image:\n        </PracticeResultsSubtitle>\n        {Object.keys(gameSettings.practiceRound).map((x, i) => (\n          <PracticeResult\n            key={i}\n            questionNumber={i + 1}\n            isCurrentImage={i === currentImageIndex}\n            question={gameSettings.practiceRound[x]}\n          />\n        ))}\n      </div>\n      <div>\n        {allQuestionsAnswered(gameSettings) ? (\n          <EndButtons resetGame={resetGame} />\n        ) : null}\n      </div>\n    </PracticeResultsContainer>\n  )\n}\n\nconst ImageSliderOverrideStyles = ({ images, currentIndex }) => {\n  const [gameSettings] = useContext(GameContext)\n  const bulletContainerChildIndices = [3, 4]\n  const style = (containerIndex, index, colors) => {\n    const border =\n      currentIndex === index ? \"; border: 2px solid blue !important\" : \"\"\n    return `#practice-container > div:nth-child(1) > div:nth-child(2) > div > div:nth-child(${containerIndex}) > button:nth-child(${\n      index + 1\n    }) { background: linear-gradient(90deg, ${colors[0]} 50%, ${\n      colors[1]\n    } 50%) !important; ${border} }\n      `\n  }\n  const bulletStyle = (index, colors) =>\n    bulletContainerChildIndices.map((i) => style(i, index, colors)).join(\"\\n\")\n  const bulletStyles = () =>\n    images.map((_, i) => {\n      const agree = answer(\"agree\", gameSettings, images[i].path)\n      const seenbefore = answer(\"seenbefore\", gameSettings, images[i].path)\n      const toColor = (x) =>\n        x == null ? \"inherit\" : x ? COLORS.yes : COLORS.no\n      return bulletStyle(i, [toColor(agree), toColor(seenbefore)])\n    })\n\n  const imageSize = {\n    width:\n      PRACTICE_IMAGE_SIZE.image.width / PRACTICE_IMAGE_SIZE.container.width,\n    height:\n      PRACTICE_IMAGE_SIZE.image.height / PRACTICE_IMAGE_SIZE.container.height,\n  }\n  const imagePercent = {\n    width: parseInt(imageSize.width * 100),\n    height: parseInt(imageSize.height * 100),\n  }\n  const paddingLeft =\n    (PRACTICE_IMAGE_SIZE.container.width - PRACTICE_IMAGE_SIZE.image.width) / 2\n  const paddingTop =\n    (PRACTICE_IMAGE_SIZE.container.height - PRACTICE_IMAGE_SIZE.image.height) /\n    2\n\n  const imageStyles = () => [\n    `#practice-container > div:nth-child(1) > div:nth-child(2) > div > div:nth-child(1) > div {left: ${paddingLeft}px !important; top: ${paddingTop}px !important; width: ${imagePercent.width}% !important; height: ${imagePercent.height}% !important; border-radius: 5px; box-shadow: 0 0 5px #000000;}`,\n  ]\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: [...bulletStyles(), ...imageStyles()].join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst QuestionWithButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  height: 60px;\n`\nconst QuestionWithButtonsButtonContainer = styled.div`\n  padding-top: 5px;\n  padding-bottom: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\nconst QuestionText = styled.div`\n  font-size: 0.9rem;\n`\nconst QuestionWithButtons = ({ question, onAnswer, defaultValue, index }) => (\n  <QuestionWithButtonsContainer>\n    <QuestionText>{question}</QuestionText>\n    <QuestionWithButtonsButtonContainer>\n      <ToggleButton\n        defaultValue={defaultValue}\n        onToggle={onAnswer}\n        trueBgColor={COLORS.yes}\n        falseBgColor={COLORS.no}\n        trueLabel={<Emoji symbol=\"0x2714\" />}\n        falseLabel={<Emoji symbol=\"0x2716\" />}\n      />\n    </QuestionWithButtonsButtonContainer>\n  </QuestionWithButtonsContainer>\n)\n\nconst TuningSideTileContainer = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 130px;\n  width: 180px;\n  height: 295px;\n`\n\nconst TuningSideTile = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: slategray;\n  padding: 10px;\n  color: white;\n  border-radius: 15px;\n  width: 55%;\n  text-align: center;\n`\n\nconst ProbabilityOuterContainer = styled(TuningSideTileContainer)`\n  right: 0px;\n`\n\nconst Probability = ({ value }) => {\n  const percent = (value * 100).toFixed(1)\n  return (\n    <ProbabilityOuterContainer>\n      <Centered>\n        <TuningSideTile>\n          <div>Probability</div>\n          <PieChart\n            animate\n            reveal={100}\n            data={[\n              { value: percent, color: \"#ccc\" },\n              { value: 100 - percent, color: \"#777\", hideLabel: true },\n            ]}\n            totalValue={100}\n            lineWidth={30}\n            label={({ dataEntry }) =>\n              dataEntry.hideLabel ? null : `${dataEntry.value}%`\n            }\n            labelStyle={{\n              fontSize: \"1.1rem\",\n              fill: \"white\",\n            }}\n            labelPosition={0}\n          />\n        </TuningSideTile>\n      </Centered>\n    </ProbabilityOuterContainer>\n  )\n}\n\nconst TuningsOuterContainer = styled(TuningSideTileContainer)`\n  left: 0px;\n`\n\nconst TuningSelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`\n\nconst TuningSelect = (props) => {\n  const selectStyles = {\n    container: (provided) => ({ ...provided, width: \"100%\" }),\n    indicatorsContainer: (provided) => ({ ...provided, display: \"none\" }),\n    option: (provided, { data }) => ({\n      ...provided,\n      whiteSpace: \"nowrap\",\n      color: \"black\",\n      \":before\": {\n        content: `${data.icon ? `'${data.icon}'` : \"''\"}`,\n        width: \"15px\",\n        padding: \"0 5px 0 0 !important\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n      },\n    }),\n    menu: (provided) => ({\n      ...provided,\n      width: \"fit-content\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      fontSize: \"0.8rem\",\n    }),\n  }\n\n  return <Select styles={selectStyles} isSearchable={false} {...props} />\n}\n\nconst Tunings = ({ image, getImageDiv, onLoadImageVariant }) => {\n  const defaultStyle = {\n    noise: 0,\n  }\n  const [styles, setStyles] = useState(defaultStyle)\n  const [selectedVariant, setSelectedVariant] = useState(null)\n  const changeImage = (key) =>\n    styleDiv(getImageDiv, {\n      transition: \"none\",\n      \"background-image\":\n        !styles[key] && key in image.variants && \"path\" in image.variants[key]\n          ? `url(\"img/${image.variants[key].path}\")`\n          : `url(\"img/${image.path}\")`,\n    })\n\n  const variantLabel = (key) => {\n    return (image.variants[key] || image).label\n  }\n  const resetImage = () => {\n    console.log(\"Resetting image....\")\n    changeImage(\"unknown\")\n    onLoadImageVariant({})\n    setStyles({ ...defaultStyle })\n  }\n\n  const updateImage = (key, additionalStyles = {}) => {\n    const toggle = !styles[key]\n    changeImage(key)\n    onLoadImageVariant(\n      clean({\n        probability: toggle\n          ? key in image.variants\n            ? image.variants[key].probability\n            : null\n          : null,\n        label: variantLabel(key),\n      })\n    )\n    setStyles({ ...defaultStyle, [key]: toggle, ...additionalStyles })\n  }\n  const addNoise = (noiseLevel) =>\n    updateImage(`noise${noiseLevel}`, { noise: noiseLevel })\n\n  const augmentVariants = Object.keys(image.variants || {}).filter(\n    (x) => !x.startsWith(\"noise\")\n  )\n  const optionDecorations = {\n    hflip: {\n      label: () => \"Horizontal Flip\",\n      icon: () => \"\\\\21C4\",\n    },\n    vflip: {\n      label: () => \"Vertical Flip\",\n      icon: () => \"\\\\21C5\",\n    },\n    \"rot*\": {\n      label: (x) => `${x.replace(\"rot\", \"Rotate \")}°`,\n      icon: () => \"\\\\21BB\",\n    },\n  }\n\n  const noop = () => undefined\n  const decorate = (object, property, decoration, key) =>\n    (object[property] = (decoration[property] || noop)(key))\n\n  const decorateOption = (key) => {\n    const defaults = {\n      value: key,\n      label: key,\n      fn: updateImage.bind(null, key),\n    }\n    let decoration = undefined\n    if (key in optionDecorations) {\n      decoration = optionDecorations[key]\n    } else {\n      const decorationKey = Object.keys(optionDecorations)\n        .filter((x) => x.includes(\"*\"))\n        .find((x) => key.startsWith(x.replace(\"*\", \"\")))\n      if (decorationKey) {\n        decoration = optionDecorations[decorationKey]\n      }\n    }\n\n    if (decoration) {\n      decorate(defaults, \"label\", decoration, key)\n      decorate(defaults, \"icon\", decoration, key)\n    }\n\n    return defaults\n  }\n\n  const options = [\n    {\n      value: \"normal\",\n      label: \"Normal\",\n      fn: resetImage,\n    },\n    ...augmentVariants.map(decorateOption),\n  ]\n\n  const noiseLevelVariants = Object.keys(image.variants || {})\n    .filter((x) => x.startsWith(\"noise\"))\n    .map((x) => parseInt(x.replace(\"noise\", \"\")))\n  const noiseLevels = [0, ...noiseLevelVariants]\n\n  return (\n    <TuningsOuterContainer>\n      <Centered>\n        <TuningSideTile>\n          <ControlLabel>Apply Filter:</ControlLabel>\n          <TuningSelectContainer>\n            <TuningSelect\n              options={options}\n              value={selectedVariant || options[0]}\n              onChange={(x) => {\n                setSelectedVariant(x)\n                x.fn()\n              }}\n            />\n          </TuningSelectContainer>\n          <RangeSlider\n            label=\"Add Noise:\"\n            step={1}\n            min={0}\n            max={Math.max(...noiseLevels)}\n            value={styles.noise}\n            onChange={(level) => {\n              setSelectedVariant(null)\n              addNoise(level)\n            }}\n          />\n        </TuningSideTile>\n      </Centered>\n    </TuningsOuterContainer>\n  )\n}\n\nconst Caption = styled.div`\n  position: absolute;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-left-radius: 15px;\n  font-size: 1.4rem;\n`\n\nconst SwitchModeContainer = styled.div`\n  position: absolute;\n  right: 0;\n  z-index: 5;\n  background-color: slategray;\n  color: white;\n  padding: 8px;\n  border-bottom-left-radius: 15px;\n  font-size: 1.2rem;\n  line-height: 1.7;\n`\n\nconst SwitchModeButton = styled.button`\n  border: 0;\n  outline: none;\n  background: none;\n  font-size: 1.2rem;\n  color: ${({ selected }) => (selected ? \"black\" : \"white\")};\n  flex: 1;\n  font-family: Futura;\n  transition: text-shadow 0.25s ease;\n  &:hover {\n    cursor: pointer;\n    text-shadow: 1px 1px 1px black;\n  }\n`\n\nconst SwitchMode = ({ mode, onSwitchMode }) => {\n  const labels = {\n    trick: \"Back to Game\",\n  }\n  const label = mode in labels ? labels[mode] : `Trick ${AI_NAME}?`\n  const toModes = {\n    trick: null,\n  }\n  const toMode = mode in toModes ? toModes[mode] : \"trick\"\n  return (\n    <SwitchModeContainer>\n      <SwitchModeButton onClick={() => onSwitchMode(toMode)}>\n        {label}\n      </SwitchModeButton>\n    </SwitchModeContainer>\n  )\n}\n\nconst PracticeVoteButtonsContainer = styled.div(\n  ({ containerSize, containerSidePadding }) => `\n  width: ${containerSize.width - containerSidePadding * 2}px;\n  height: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: absolute;\n  padding: 0 ${containerSidePadding}px;\n  top: ${containerSize.height - containerSidePadding - 80}px;\n  z-index: 1;\n    `\n)\n\nconst PictureLabel = styled.div`\n  border-radius: 5px;\n  display: inline-block;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: ${(props) => (props.changed ? \"white\" : \"#333\")};\n  background-color: ${(props) => (props.changed ? \"#dc004d\" : \"white\")};\n  border: 1px solid lightgray;\n  border-color: ${(props) => (props.changed ? \"antiquewhite\" : \"lightgray\")};\n  transition: background-color 1s ease;\n`\n\nconst ImageControls = ({ getImageDiv, images, index, onChange }) => {\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const fallbackProbability = 0.5\n  const [displayMode, setDisplayMode] = useState(null)\n  const [loadedImage, setLoadedImage] = useState({})\n  const image = images[index]\n  const defaultLoadedImageState = useMemo(\n    () =>\n      image\n        ? {\n            probability: image.probability || fallbackProbability,\n            label: image.label,\n          }\n        : { probability: fallbackProbability, label: \"unknown\" },\n    [image]\n  )\n  useEffect(() => {\n    setLoadedImage(defaultLoadedImageState)\n  }, [index, defaultLoadedImageState])\n\n  if (!images) return null\n\n  const resetImage = () => {\n    styleDiv(getImageDiv, {\n      \"background-image\": `url(\"img/${image.path}\")`,\n    })\n    setLoadedImage(defaultLoadedImageState)\n  }\n  const onClickUpdateProperty = (property, guessed) => {\n    const updated = { ...gameSettings }\n    updated.practiceRound[images[index].path][property] = guessed\n    setGameSettings(updated)\n  }\n  const onAgreementClick = onClickUpdateProperty.bind(null, \"agree\")\n  const onSeenBeforeClick = onClickUpdateProperty.bind(null, \"seenbefore\")\n\n  const containerSidePadding = 10\n  const question = gameSettings.practiceRound[images[index].path]\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Caption>\n        {AI_NAME} thinks this is a{\" \"}\n        <PictureLabel\n          changed={\n            isDef(loadedImage.previousLabel) &&\n            loadedImage.label !== loadedImage.previousLabel\n          }\n          title={`Previous: ${loadedImage.previousLabel || \"none\"}`}\n        >\n          {loadedImage.label}\n        </PictureLabel>\n      </Caption>\n      {images[index].variants ? (\n        <SwitchMode\n          mode={displayMode}\n          onSwitchMode={(mode) => {\n            resetImage()\n            setDisplayMode(mode)\n            onChange(clean({ displayMode: mode }))\n          }}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Tunings\n          image={images[index]}\n          getImageDiv={getImageDiv}\n          onLoadImageVariant={(x) => {\n            setLoadedImage({\n              ...defaultLoadedImageState,\n              ...x,\n              previousLabel: loadedImage.label,\n            })\n            onChange({ ...defaultLoadedImageState, ...x, displayMode })\n          }}\n          probability={loadedImage.probability}\n        />\n      ) : null}\n      {displayMode && displayMode === \"trick\" ? (\n        <Probability value={loadedImage.probability} />\n      ) : null}\n      <ImageSliderOverrideStyles images={images} currentIndex={index} />\n      {displayMode !== \"trick\" ? (\n        <PracticeVoteButtonsContainer\n          containerSize={PRACTICE_IMAGE_SIZE.container}\n          containerSidePadding={containerSidePadding}\n        >\n          <QuestionWithButtons\n            question=\"Do you agree with COMPY?\"\n            onAnswer={onAgreementClick.bind(null)}\n            defaultValue={question.agree}\n            index={index}\n          />\n          <QuestionWithButtons\n            question={`Has ${AI_NAME} seen this before?`}\n            onAnswer={onSeenBeforeClick.bind(null)}\n            defaultValue={question.seenbefore}\n            index={index}\n          />\n        </PracticeVoteButtonsContainer>\n      ) : null}\n    </div>\n  )\n}\n\nconst PracticeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst Practice = () => {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [gameSettings, setGameSettings] = useContext(GameContext)\n  const [imageState, setImageState] = useState({})\n  const reset = () => resetGame(gameSettings, setGameSettings, setCurrentIndex)\n  const sliderRef = useRef()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(reset, [])\n\n  const currentImage = () =>\n    sliderRef.current.children[1].children[0].children[0].children[0]\n\n  if (\n    !gameSettings.currentGameData ||\n    !gameSettings.currentGameData.scrollingImages\n  )\n    return null\n\n  return gameSettings.currentGameData ? (\n    <Centered>\n      <PracticeContainer id=\"practice-container\">\n        <div ref={sliderRef}>\n          <ImageControls\n            getImageDiv={currentImage}\n            images={gameSettings.currentGameData.scrollingImages}\n            index={currentIndex}\n            onChange={setImageState}\n          />\n          <SimpleImageSlider\n            key={gameSettings.version}\n            width={PRACTICE_IMAGE_SIZE.container.width}\n            height={PRACTICE_IMAGE_SIZE.container.height}\n            images={gameSettings.currentGameData.scrollingImages}\n            showBullets={imageState.displayMode !== \"trick\"}\n            showNavs={imageState.displayMode !== \"trick\"}\n            navStyle={2}\n            onStartSlide={(idx) => {\n              setCurrentIndex(idx - 1)\n            }}\n            style={{\n              borderBottomLeftRadius: 15,\n              borderTopLeftRadius: 15,\n              backgroundColor: null,\n              border: \"1px solid slategray\",\n            }}\n          />\n        </div>\n        <PracticeResults resetGame={reset} currentImageIndex={currentIndex} />\n      </PracticeContainer>\n    </Centered>\n  ) : null\n}\n\nexport default Practice\n","import { Centered, GameButton } from \"./Util\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background-color: antiquewhite;\n  box-shadow: 0 0 4px gray;\n  text-align: center;\n  padding: 40px;\n`\n\nconst Title = styled.h1`\n  font-family: Futura;\n  font-size: 4rem;\n  &:before,\n  &:after {\n    content: \"\\\\01f9d9\"; // :mage:\n  }\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n`\n\nconst Menu = () => {\n  return (\n    <Centered>\n      <Container>\n        <Title>CHALLENGE CARNAC!</Title>\n        <p title={`Running in ${process.env.NODE_ENV} mode`}>\n          COMPY has seen a lot of deer images before, and he is really good at\n          identifying a deer when he sees one.\n        </p>\n        <p>\n          Can you tell which of the following deer images COMPY may have seen?\n        </p>\n        <p>\n          Click Practice to scroll through the pictures one at a time and test\n          your knowledge about COMPY.\n        </p>\n        <p>\n          When you are ready, you can click Play to play a game of who knows\n          COMPY best.\n        </p>\n        <ButtonContainer>\n          <Link to=\"/practice\">\n            <GameButton>Practice</GameButton>\n          </Link>\n          {/* <Link to=\"/match\">\n            <GameButton>Match</GameButton>\n          </Link> */}\n          <Link to=\"/game\">\n            <GameButton>Game</GameButton>\n          </Link>\n        </ButtonContainer>\n      </Container>\n    </Centered>\n  )\n}\n\nexport default Menu\n","import { GameContextProvider } from \"../context/GameContext\"\nimport { useState } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport CheckButton from \"react-grid-gallery/lib/CheckButton\"\nimport { Fab, Action } from \"react-tiny-fab\"\nimport \"react-tiny-fab/dist/styles.css\"\nimport FullGame from \"../components/game/FullGame\"\nimport Match from \"../components/game/Match\"\nimport Practice from \"../components/game/Practice\"\nimport Menu from \"../components/game/Menu\"\nimport Modal from \"react-modal\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\n\nModal.setAppElement(\"#root\")\n\nconst PageHeader = ({ title, subtitle }) => {\n  const styles = {\n    container: {\n      marginBottom: 5,\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n    },\n    subtitle: {\n      fontSize: 14,\n      color: \"gray\",\n    },\n  }\n  return (\n    <div style={styles.container}>\n      <div style={styles.title}>{title}</div>\n      <span style={styles.subtitle}>{subtitle}</span>\n    </div>\n  )\n}\n\nconst GameModal = withRouter(({ history }) => {\n  const [isModalOpen, setModalOpen] = useState(false)\n  const toggleModal = () => setModalOpen(!isModalOpen)\n  const returnToMenu = () => history.push(\"/\")\n\n  return (\n    <>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n      >\n        <PageHeader\n          title=\"A game of 16 questions…beat Carnac!\"\n          subtitle=\"AI Jimmy is really good at identifying the object in images that he\n            has seen before. Select (check) which of the following images you\n            think Jimmy remembers. You will be playing against Carnac and who\n            ever gets more correct, wins!\"\n        />\n        <button\n          onClick={toggleModal}\n          style={{\n            position: \"absolute\",\n            top: 5,\n            right: 5,\n            border: 0,\n            background: \"none\",\n          }}\n        >\n          <CheckButton color=\"black\" isSelected={true} />\n        </button>\n      </Modal>\n      <Fab\n        alwaysShowTitle={true}\n        mainButtonStyles={{\n          backgroundColor: \"slategray\",\n        }}\n        icon=\". . .\"\n      >\n        {/* <Action text=\"Info\" onClick={toggleModal}>\n          i\n        </Action> */}\n        <Action text=\"Menu\" onClick={returnToMenu}>\n          m\n        </Action>\n      </Fab>\n    </>\n  )\n})\n\nconst GameView = () => {\n  return (\n    <GameContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/practice\">\n            <Practice />\n          </Route>\n          <Route path=\"/match\">\n            <Match />\n          </Route>\n          <Route path=\"/game\">\n            <FullGame />\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n          </Route>\n        </Switch>\n        <GameModal />\n      </Router>\n    </GameContextProvider>\n  )\n}\n\nexport default GameView\n","import \"./App.css\"\n// import PickView from \"./views/PickView\"\nimport GameView from \"./views/GameView\"\n\nconst App = () => {\n  return (\n    <GameView />\n    // <PickView />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}